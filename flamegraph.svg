<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="179"><g><title>__clone3 (2 samples, 1.12%)</title><rect x="0.0000%" y="581" width="1.1173%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="591.50"></text></g><g><title>start_thread (1 samples, 0.56%)</title><rect x="0.5587%" y="565" width="0.5587%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.8087%" y="575.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.56%)</title><rect x="0.5587%" y="549" width="0.5587%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.8087%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.56%)</title><rect x="0.5587%" y="533" width="0.5587%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.8087%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.56%)</title><rect x="0.5587%" y="517" width="0.5587%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.8087%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.56%)</title><rect x="0.5587%" y="501" width="0.5587%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.8087%" y="511.50"></text></g><g><title>async-io (3 samples, 1.68%)</title><rect x="0.0000%" y="597" width="1.6760%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="607.50"></text></g><g><title>async_io::driver::unparker::UNPARKER (1 samples, 0.56%)</title><rect x="1.1173%" y="581" width="0.5587%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="1.3673%" y="591.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.56%)</title><rect x="1.1173%" y="565" width="0.5587%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="1.3673%" y="575.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.56%)</title><rect x="1.6760%" y="581" width="0.5587%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="1.9260%" y="591.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (1 samples, 0.56%)</title><rect x="1.6760%" y="565" width="0.5587%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="1.9260%" y="575.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.56%)</title><rect x="1.6760%" y="549" width="0.5587%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="1.9260%" y="559.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (1 samples, 0.56%)</title><rect x="1.6760%" y="533" width="0.5587%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="1.9260%" y="543.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (1 samples, 0.56%)</title><rect x="1.6760%" y="517" width="0.5587%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="1.9260%" y="527.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 0.56%)</title><rect x="1.6760%" y="501" width="0.5587%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="1.9260%" y="511.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="485" width="0.5587%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="1.9260%" y="495.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="469" width="0.5587%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="1.9260%" y="479.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.56%)</title><rect x="1.6760%" y="453" width="0.5587%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="1.9260%" y="463.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="437" width="0.5587%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="1.9260%" y="447.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="421" width="0.5587%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="1.9260%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="405" width="0.5587%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="1.9260%" y="415.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="389" width="0.5587%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="1.9260%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="373" width="0.5587%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="1.9260%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="357" width="0.5587%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="1.9260%" y="367.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.56%)</title><rect x="1.6760%" y="341" width="0.5587%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="1.9260%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="325" width="0.5587%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="1.9260%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="309" width="0.5587%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="1.9260%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="293" width="0.5587%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="1.9260%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="277" width="0.5587%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="1.9260%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="261" width="0.5587%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="1.9260%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="245" width="0.5587%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="1"/><text x="1.9260%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="229" width="0.5587%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="1.9260%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="1.6760%" y="213" width="0.5587%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="1"/><text x="1.9260%" y="223.50"></text></g><g><title>ASN1_STRING_set (1 samples, 0.56%)</title><rect x="1.6760%" y="197" width="0.5587%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="1"/><text x="1.9260%" y="207.50"></text></g><g><title>BN_CTX_free (1 samples, 0.56%)</title><rect x="2.2346%" y="581" width="0.5587%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="1"/><text x="2.4846%" y="591.50"></text></g><g><title>CRYPTO_free_ex_data (1 samples, 0.56%)</title><rect x="2.7933%" y="581" width="0.5587%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="3.0433%" y="591.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (1 samples, 0.56%)</title><rect x="3.3520%" y="581" width="0.5587%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="3.6020%" y="591.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 2.23%)</title><rect x="3.9106%" y="581" width="2.2346%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="4"/><text x="4.1606%" y="591.50">[..</text></g><g><title>[unknown] (1 samples, 0.56%)</title><rect x="6.1453%" y="581" width="0.5587%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="1"/><text x="6.3953%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="6.1453%" y="565" width="0.5587%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="1"/><text x="6.3953%" y="575.50"></text></g><g><title>__libc_start_call_main (1 samples, 0.56%)</title><rect x="6.7039%" y="581" width="0.5587%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="1"/><text x="6.9539%" y="591.50"></text></g><g><title>main (1 samples, 0.56%)</title><rect x="6.7039%" y="565" width="0.5587%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="1"/><text x="6.9539%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.56%)</title><rect x="6.7039%" y="549" width="0.5587%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="1"/><text x="6.9539%" y="559.50"></text></g><g><title>mausam::main (1 samples, 0.56%)</title><rect x="6.7039%" y="533" width="0.5587%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="1"/><text x="6.9539%" y="543.50"></text></g><g><title>mausam::main::{{closure}} (1 samples, 0.56%)</title><rect x="6.7039%" y="517" width="0.5587%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="1"/><text x="6.9539%" y="527.50"></text></g><g><title>mausam::app::run::{{closure}} (1 samples, 0.56%)</title><rect x="6.7039%" y="501" width="0.5587%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="1"/><text x="6.9539%" y="511.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (1 samples, 0.56%)</title><rect x="6.7039%" y="485" width="0.5587%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="1"/><text x="6.9539%" y="495.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (1 samples, 0.56%)</title><rect x="6.7039%" y="469" width="0.5587%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="1"/><text x="6.9539%" y="479.50"></text></g><g><title>X509_STORE_set_default_paths_ex (1 samples, 0.56%)</title><rect x="6.7039%" y="453" width="0.5587%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="1"/><text x="6.9539%" y="463.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="6.7039%" y="437" width="0.5587%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="1"/><text x="6.9539%" y="447.50"></text></g><g><title>X509_load_cert_crl_file_ex (1 samples, 0.56%)</title><rect x="6.7039%" y="421" width="0.5587%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="1"/><text x="6.9539%" y="431.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (1 samples, 0.56%)</title><rect x="6.7039%" y="405" width="0.5587%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="1"/><text x="6.9539%" y="415.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.56%)</title><rect x="6.7039%" y="389" width="0.5587%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="1"/><text x="6.9539%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="6.7039%" y="373" width="0.5587%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="1"/><text x="6.9539%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="6.7039%" y="357" width="0.5587%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="1"/><text x="6.9539%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="6.7039%" y="341" width="0.5587%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="1"/><text x="6.9539%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="6.7039%" y="325" width="0.5587%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="1"/><text x="6.9539%" y="335.50"></text></g><g><title>__rust_probestack (1 samples, 0.56%)</title><rect x="7.2626%" y="581" width="0.5587%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="1"/><text x="7.5126%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.56%)</title><rect x="10.6145%" y="565" width="0.5587%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="1"/><text x="10.8645%" y="575.50"></text></g><g><title>init_cpu_features (1 samples, 0.56%)</title><rect x="10.6145%" y="549" width="0.5587%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="10.8645%" y="559.50"></text></g><g><title>__GI_exit (1 samples, 0.56%)</title><rect x="11.1732%" y="533" width="0.5587%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="1"/><text x="11.4232%" y="543.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.56%)</title><rect x="11.1732%" y="517" width="0.5587%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="1"/><text x="11.4232%" y="527.50"></text></g><g><title>_dl_fini (1 samples, 0.56%)</title><rect x="11.1732%" y="501" width="0.5587%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="1"/><text x="11.4232%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="11.7318%" y="485" width="0.5587%" height="15" fill="rgb(222,148,37)" fg:x="21" fg:w="1"/><text x="11.9818%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.56%)</title><rect x="11.7318%" y="469" width="0.5587%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="1"/><text x="11.9818%" y="479.50"></text></g><g><title>BIO_new_ex (1 samples, 0.56%)</title><rect x="12.2905%" y="341" width="0.5587%" height="15" fill="rgb(247,98,35)" fg:x="22" fg:w="1"/><text x="12.5405%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="12.2905%" y="325" width="0.5587%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="12.5405%" y="335.50"></text></g><g><title>BUF_MEM_new_ex (1 samples, 0.56%)</title><rect x="12.2905%" y="309" width="0.5587%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="12.5405%" y="319.50"></text></g><g><title>BUF_MEM_new (1 samples, 0.56%)</title><rect x="12.2905%" y="293" width="0.5587%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="12.5405%" y="303.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.56%)</title><rect x="12.2905%" y="277" width="0.5587%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="12.5405%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="12.2905%" y="261" width="0.5587%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="12.5405%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.56%)</title><rect x="12.2905%" y="245" width="0.5587%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="12.5405%" y="255.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (2 samples, 1.12%)</title><rect x="12.2905%" y="453" width="1.1173%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="2"/><text x="12.5405%" y="463.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (2 samples, 1.12%)</title><rect x="12.2905%" y="437" width="1.1173%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="2"/><text x="12.5405%" y="447.50"></text></g><g><title>X509_STORE_set_default_paths_ex (2 samples, 1.12%)</title><rect x="12.2905%" y="421" width="1.1173%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="2"/><text x="12.5405%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="12.2905%" y="405" width="1.1173%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="2"/><text x="12.5405%" y="415.50"></text></g><g><title>X509_load_cert_crl_file_ex (2 samples, 1.12%)</title><rect x="12.2905%" y="389" width="1.1173%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="2"/><text x="12.5405%" y="399.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (2 samples, 1.12%)</title><rect x="12.2905%" y="373" width="1.1173%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="2"/><text x="12.5405%" y="383.50"></text></g><g><title>PEM_read_bio_ex (2 samples, 1.12%)</title><rect x="12.2905%" y="357" width="1.1173%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="2"/><text x="12.5405%" y="367.50"></text></g><g><title>BIO_puts (1 samples, 0.56%)</title><rect x="12.8492%" y="341" width="0.5587%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="1"/><text x="13.0992%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="12.8492%" y="325" width="0.5587%" height="15" fill="rgb(211,96,35)" fg:x="23" fg:w="1"/><text x="13.0992%" y="335.50"></text></g><g><title>BUF_MEM_grow_clean (1 samples, 0.56%)</title><rect x="12.8492%" y="309" width="0.5587%" height="15" fill="rgb(253,215,40)" fg:x="23" fg:w="1"/><text x="13.0992%" y="319.50"></text></g><g><title>CRYPTO_clear_realloc (1 samples, 0.56%)</title><rect x="12.8492%" y="293" width="0.5587%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="1"/><text x="13.0992%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="12.8492%" y="277" width="0.5587%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="1"/><text x="13.0992%" y="287.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.56%)</title><rect x="13.4078%" y="245" width="0.5587%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="1"/><text x="13.6578%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="229" width="0.5587%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="1"/><text x="13.6578%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="213" width="0.5587%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="1"/><text x="13.6578%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="197" width="0.5587%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="1"/><text x="13.6578%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="181" width="0.5587%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="13.6578%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="165" width="0.5587%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="13.6578%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="149" width="0.5587%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="13.6578%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="133" width="0.5587%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="13.6578%" y="143.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="117" width="0.5587%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="13.6578%" y="127.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="101" width="0.5587%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="1"/><text x="13.6578%" y="111.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.56%)</title><rect x="13.4078%" y="85" width="0.5587%" height="15" fill="rgb(228,99,48)" fg:x="24" fg:w="1"/><text x="13.6578%" y="95.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="13.4078%" y="69" width="0.5587%" height="15" fill="rgb(253,11,6)" fg:x="24" fg:w="1"/><text x="13.6578%" y="79.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.56%)</title><rect x="13.9665%" y="181" width="0.5587%" height="15" fill="rgb(247,143,39)" fg:x="25" fg:w="1"/><text x="14.2165%" y="191.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.56%)</title><rect x="13.9665%" y="165" width="0.5587%" height="15" fill="rgb(236,97,10)" fg:x="25" fg:w="1"/><text x="14.2165%" y="175.50"></text></g><g><title>CRYPTO_THREAD_read_lock (3 samples, 1.68%)</title><rect x="15.6425%" y="165" width="1.6760%" height="15" fill="rgb(233,208,19)" fg:x="28" fg:w="3"/><text x="15.8925%" y="175.50"></text></g><g><title>___pthread_rwlock_rdlock (3 samples, 1.68%)</title><rect x="15.6425%" y="149" width="1.6760%" height="15" fill="rgb(216,164,2)" fg:x="28" fg:w="3"/><text x="15.8925%" y="159.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 1.12%)</title><rect x="17.3184%" y="165" width="1.1173%" height="15" fill="rgb(220,129,5)" fg:x="31" fg:w="2"/><text x="17.5684%" y="175.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 1.12%)</title><rect x="17.3184%" y="149" width="1.1173%" height="15" fill="rgb(242,17,10)" fg:x="31" fg:w="2"/><text x="17.5684%" y="159.50"></text></g><g><title>CRYPTO_get_ex_data (1 samples, 0.56%)</title><rect x="18.4358%" y="165" width="0.5587%" height="15" fill="rgb(242,107,0)" fg:x="33" fg:w="1"/><text x="18.6858%" y="175.50"></text></g><g><title>OSSL_DECODER_is_a (12 samples, 6.70%)</title><rect x="13.9665%" y="213" width="6.7039%" height="15" fill="rgb(251,28,31)" fg:x="25" fg:w="12"/><text x="14.2165%" y="223.50">OSSL_DECO..</text></g><g><title>[libcrypto.so.3.0.8] (12 samples, 6.70%)</title><rect x="13.9665%" y="197" width="6.7039%" height="15" fill="rgb(233,223,10)" fg:x="25" fg:w="12"/><text x="14.2165%" y="207.50">[libcrypt..</text></g><g><title>[libcrypto.so.3.0.8] (11 samples, 6.15%)</title><rect x="14.5251%" y="181" width="6.1453%" height="15" fill="rgb(215,21,27)" fg:x="26" fg:w="11"/><text x="14.7751%" y="191.50">[libcryp..</text></g><g><title>OPENSSL_LH_retrieve (3 samples, 1.68%)</title><rect x="18.9944%" y="165" width="1.6760%" height="15" fill="rgb(232,23,21)" fg:x="34" fg:w="3"/><text x="19.2444%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 1.68%)</title><rect x="18.9944%" y="149" width="1.6760%" height="15" fill="rgb(244,5,23)" fg:x="34" fg:w="3"/><text x="19.2444%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="19.5531%" y="133" width="1.1173%" height="15" fill="rgb(226,81,46)" fg:x="35" fg:w="2"/><text x="19.8031%" y="143.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (13 samples, 7.26%)</title><rect x="13.9665%" y="229" width="7.2626%" height="15" fill="rgb(247,70,30)" fg:x="25" fg:w="13"/><text x="14.2165%" y="239.50">OSSL_DECOD..</text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="20.6704%" y="213" width="0.5587%" height="15" fill="rgb(212,68,19)" fg:x="37" fg:w="1"/><text x="20.9204%" y="223.50"></text></g><g><title>OPENSSL_sk_insert (1 samples, 0.56%)</title><rect x="20.6704%" y="197" width="0.5587%" height="15" fill="rgb(240,187,13)" fg:x="37" fg:w="1"/><text x="20.9204%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="20.6704%" y="181" width="0.5587%" height="15" fill="rgb(223,113,26)" fg:x="37" fg:w="1"/><text x="20.9204%" y="191.50"></text></g><g><title>__realloc (1 samples, 0.56%)</title><rect x="20.6704%" y="165" width="0.5587%" height="15" fill="rgb(206,192,2)" fg:x="37" fg:w="1"/><text x="20.9204%" y="175.50"></text></g><g><title>_int_realloc (1 samples, 0.56%)</title><rect x="20.6704%" y="149" width="0.5587%" height="15" fill="rgb(241,108,4)" fg:x="37" fg:w="1"/><text x="20.9204%" y="159.50"></text></g><g><title>_int_free (1 samples, 0.56%)</title><rect x="20.6704%" y="133" width="0.5587%" height="15" fill="rgb(247,173,49)" fg:x="37" fg:w="1"/><text x="20.9204%" y="143.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.56%)</title><rect x="21.2291%" y="117" width="0.5587%" height="15" fill="rgb(224,114,35)" fg:x="38" fg:w="1"/><text x="21.4791%" y="127.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.56%)</title><rect x="21.2291%" y="101" width="0.5587%" height="15" fill="rgb(245,159,27)" fg:x="38" fg:w="1"/><text x="21.4791%" y="111.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (15 samples, 8.38%)</title><rect x="13.9665%" y="245" width="8.3799%" height="15" fill="rgb(245,172,44)" fg:x="25" fg:w="15"/><text x="14.2165%" y="255.50">OSSL_DECODER..</text></g><g><title>OSSL_DECODER_do_all_provided (2 samples, 1.12%)</title><rect x="21.2291%" y="229" width="1.1173%" height="15" fill="rgb(236,23,11)" fg:x="38" fg:w="2"/><text x="21.4791%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="21.2291%" y="213" width="1.1173%" height="15" fill="rgb(205,117,38)" fg:x="38" fg:w="2"/><text x="21.4791%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="21.2291%" y="197" width="1.1173%" height="15" fill="rgb(237,72,25)" fg:x="38" fg:w="2"/><text x="21.4791%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="21.2291%" y="181" width="1.1173%" height="15" fill="rgb(244,70,9)" fg:x="38" fg:w="2"/><text x="21.4791%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="21.2291%" y="165" width="1.1173%" height="15" fill="rgb(217,125,39)" fg:x="38" fg:w="2"/><text x="21.4791%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="21.2291%" y="149" width="1.1173%" height="15" fill="rgb(235,36,10)" fg:x="38" fg:w="2"/><text x="21.4791%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="21.2291%" y="133" width="1.1173%" height="15" fill="rgb(251,123,47)" fg:x="38" fg:w="2"/><text x="21.4791%" y="143.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="21.7877%" y="117" width="0.5587%" height="15" fill="rgb(221,13,13)" fg:x="39" fg:w="1"/><text x="22.0377%" y="127.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="21.7877%" y="101" width="0.5587%" height="15" fill="rgb(238,131,9)" fg:x="39" fg:w="1"/><text x="22.0377%" y="111.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="21.7877%" y="85" width="0.5587%" height="15" fill="rgb(211,50,8)" fg:x="39" fg:w="1"/><text x="22.0377%" y="95.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="21.7877%" y="69" width="0.5587%" height="15" fill="rgb(245,182,24)" fg:x="39" fg:w="1"/><text x="22.0377%" y="79.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.56%)</title><rect x="21.7877%" y="53" width="0.5587%" height="15" fill="rgb(242,14,37)" fg:x="39" fg:w="1"/><text x="22.0377%" y="63.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="21.7877%" y="37" width="0.5587%" height="15" fill="rgb(246,228,12)" fg:x="39" fg:w="1"/><text x="22.0377%" y="47.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (17 samples, 9.50%)</title><rect x="13.4078%" y="373" width="9.4972%" height="15" fill="rgb(213,55,15)" fg:x="24" fg:w="17"/><text x="13.6578%" y="383.50">PEM_X509_INFO_..</text></g><g><title>ASN1_item_d2i_ex (17 samples, 9.50%)</title><rect x="13.4078%" y="357" width="9.4972%" height="15" fill="rgb(209,9,3)" fg:x="24" fg:w="17"/><text x="13.6578%" y="367.50">ASN1_item_d2i_..</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 9.50%)</title><rect x="13.4078%" y="341" width="9.4972%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="17"/><text x="13.6578%" y="351.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 9.50%)</title><rect x="13.4078%" y="325" width="9.4972%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="17"/><text x="13.6578%" y="335.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 9.50%)</title><rect x="13.4078%" y="309" width="9.4972%" height="15" fill="rgb(220,109,13)" fg:x="24" fg:w="17"/><text x="13.6578%" y="319.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 9.50%)</title><rect x="13.4078%" y="293" width="9.4972%" height="15" fill="rgb(232,18,1)" fg:x="24" fg:w="17"/><text x="13.6578%" y="303.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 9.50%)</title><rect x="13.4078%" y="277" width="9.4972%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="17"/><text x="13.6578%" y="287.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 9.50%)</title><rect x="13.4078%" y="261" width="9.4972%" height="15" fill="rgb(224,123,36)" fg:x="24" fg:w="17"/><text x="13.6578%" y="271.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="22.3464%" y="245" width="0.5587%" height="15" fill="rgb(240,125,3)" fg:x="40" fg:w="1"/><text x="22.5964%" y="255.50"></text></g><g><title>mausam::app::run::{{closure}} (20 samples, 11.17%)</title><rect x="12.2905%" y="469" width="11.1732%" height="15" fill="rgb(205,98,50)" fg:x="22" fg:w="20"/><text x="12.5405%" y="479.50">mausam::app::run..</text></g><g><title>std::sys_common::once::futex::Once::call (18 samples, 10.06%)</title><rect x="13.4078%" y="453" width="10.0559%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="18"/><text x="13.6578%" y="463.50">std::sys_common..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (18 samples, 10.06%)</title><rect x="13.4078%" y="437" width="10.0559%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="18"/><text x="13.6578%" y="447.50">reqwest::async_..</text></g><g><title>X509_STORE_set_default_paths_ex (18 samples, 10.06%)</title><rect x="13.4078%" y="421" width="10.0559%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="18"/><text x="13.6578%" y="431.50">X509_STORE_set_..</text></g><g><title>[libcrypto.so.3.0.8] (18 samples, 10.06%)</title><rect x="13.4078%" y="405" width="10.0559%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="18"/><text x="13.6578%" y="415.50">[libcrypto.so.3..</text></g><g><title>X509_load_cert_crl_file_ex (18 samples, 10.06%)</title><rect x="13.4078%" y="389" width="10.0559%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="18"/><text x="13.6578%" y="399.50">X509_load_cert_..</text></g><g><title>X509_STORE_add_cert (1 samples, 0.56%)</title><rect x="22.9050%" y="373" width="0.5587%" height="15" fill="rgb(241,35,35)" fg:x="41" fg:w="1"/><text x="23.1550%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="22.9050%" y="357" width="0.5587%" height="15" fill="rgb(243,32,47)" fg:x="41" fg:w="1"/><text x="23.1550%" y="367.50"></text></g><g><title>X509_OBJECT_retrieve_match (1 samples, 0.56%)</title><rect x="22.9050%" y="341" width="0.5587%" height="15" fill="rgb(247,202,23)" fg:x="41" fg:w="1"/><text x="23.1550%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="22.9050%" y="325" width="0.5587%" height="15" fill="rgb(219,102,11)" fg:x="41" fg:w="1"/><text x="23.1550%" y="335.50"></text></g><g><title>__qsort_r (1 samples, 0.56%)</title><rect x="22.9050%" y="309" width="0.5587%" height="15" fill="rgb(243,110,44)" fg:x="41" fg:w="1"/><text x="23.1550%" y="319.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.56%)</title><rect x="22.9050%" y="293" width="0.5587%" height="15" fill="rgb(222,74,54)" fg:x="41" fg:w="1"/><text x="23.1550%" y="303.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.56%)</title><rect x="22.9050%" y="277" width="0.5587%" height="15" fill="rgb(216,99,12)" fg:x="41" fg:w="1"/><text x="23.1550%" y="287.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.56%)</title><rect x="22.9050%" y="261" width="0.5587%" height="15" fill="rgb(226,22,26)" fg:x="41" fg:w="1"/><text x="23.1550%" y="271.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.56%)</title><rect x="22.9050%" y="245" width="0.5587%" height="15" fill="rgb(217,163,10)" fg:x="41" fg:w="1"/><text x="23.1550%" y="255.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.56%)</title><rect x="22.9050%" y="229" width="0.5587%" height="15" fill="rgb(213,25,53)" fg:x="41" fg:w="1"/><text x="23.1550%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.56%)</title><rect x="22.9050%" y="213" width="0.5587%" height="15" fill="rgb(252,105,26)" fg:x="41" fg:w="1"/><text x="23.1550%" y="223.50"></text></g><g><title>mausam::main::{{closure}} (21 samples, 11.73%)</title><rect x="12.2905%" y="485" width="11.7318%" height="15" fill="rgb(220,39,43)" fg:x="22" fg:w="21"/><text x="12.5405%" y="495.50">mausam::main::{{c..</text></g><g><title>std::io::stdio::_print (1 samples, 0.56%)</title><rect x="23.4637%" y="469" width="0.5587%" height="15" fill="rgb(229,68,48)" fg:x="42" fg:w="1"/><text x="23.7137%" y="479.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.56%)</title><rect x="23.4637%" y="453" width="0.5587%" height="15" fill="rgb(252,8,32)" fg:x="42" fg:w="1"/><text x="23.7137%" y="463.50"></text></g><g><title>std::io::stdio::stdout (1 samples, 0.56%)</title><rect x="23.4637%" y="437" width="0.5587%" height="15" fill="rgb(223,20,43)" fg:x="42" fg:w="1"/><text x="23.7137%" y="447.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.56%)</title><rect x="23.4637%" y="421" width="0.5587%" height="15" fill="rgb(229,81,49)" fg:x="42" fg:w="1"/><text x="23.7137%" y="431.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1 samples, 0.56%)</title><rect x="23.4637%" y="405" width="0.5587%" height="15" fill="rgb(236,28,36)" fg:x="42" fg:w="1"/><text x="23.7137%" y="415.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize (1 samples, 0.56%)</title><rect x="23.4637%" y="389" width="0.5587%" height="15" fill="rgb(249,185,26)" fg:x="42" fg:w="1"/><text x="23.7137%" y="399.50"></text></g><g><title>std::sync::once::Once::call_once_force (1 samples, 0.56%)</title><rect x="23.4637%" y="373" width="0.5587%" height="15" fill="rgb(249,174,33)" fg:x="42" fg:w="1"/><text x="23.7137%" y="383.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.56%)</title><rect x="23.4637%" y="357" width="0.5587%" height="15" fill="rgb(233,201,37)" fg:x="42" fg:w="1"/><text x="23.7137%" y="367.50"></text></g><g><title>std::sync::once::Once::call_once_force::{{closure}} (1 samples, 0.56%)</title><rect x="23.4637%" y="341" width="0.5587%" height="15" fill="rgb(221,78,26)" fg:x="42" fg:w="1"/><text x="23.7137%" y="351.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize::{{closure}} (1 samples, 0.56%)</title><rect x="23.4637%" y="325" width="0.5587%" height="15" fill="rgb(250,127,30)" fg:x="42" fg:w="1"/><text x="23.7137%" y="335.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.56%)</title><rect x="23.4637%" y="309" width="0.5587%" height="15" fill="rgb(230,49,44)" fg:x="42" fg:w="1"/><text x="23.7137%" y="319.50"></text></g><g><title>std::io::stdio::stdout::{{closure}} (1 samples, 0.56%)</title><rect x="23.4637%" y="293" width="0.5587%" height="15" fill="rgb(229,67,23)" fg:x="42" fg:w="1"/><text x="23.7137%" y="303.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::new (1 samples, 0.56%)</title><rect x="23.4637%" y="277" width="0.5587%" height="15" fill="rgb(249,83,47)" fg:x="42" fg:w="1"/><text x="23.7137%" y="287.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::with_capacity (1 samples, 0.56%)</title><rect x="23.4637%" y="261" width="0.5587%" height="15" fill="rgb(215,43,3)" fg:x="42" fg:w="1"/><text x="23.7137%" y="271.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (1 samples, 0.56%)</title><rect x="23.4637%" y="245" width="0.5587%" height="15" fill="rgb(238,154,13)" fg:x="42" fg:w="1"/><text x="23.7137%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.56%)</title><rect x="23.4637%" y="229" width="0.5587%" height="15" fill="rgb(219,56,2)" fg:x="42" fg:w="1"/><text x="23.7137%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.56%)</title><rect x="23.4637%" y="213" width="0.5587%" height="15" fill="rgb(233,0,4)" fg:x="42" fg:w="1"/><text x="23.7137%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.56%)</title><rect x="23.4637%" y="197" width="0.5587%" height="15" fill="rgb(235,30,7)" fg:x="42" fg:w="1"/><text x="23.7137%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.56%)</title><rect x="23.4637%" y="181" width="0.5587%" height="15" fill="rgb(250,79,13)" fg:x="42" fg:w="1"/><text x="23.7137%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.56%)</title><rect x="23.4637%" y="165" width="0.5587%" height="15" fill="rgb(211,146,34)" fg:x="42" fg:w="1"/><text x="23.7137%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.56%)</title><rect x="23.4637%" y="149" width="0.5587%" height="15" fill="rgb(228,22,38)" fg:x="42" fg:w="1"/><text x="23.7137%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.56%)</title><rect x="23.4637%" y="133" width="0.5587%" height="15" fill="rgb(235,168,5)" fg:x="42" fg:w="1"/><text x="23.7137%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.56%)</title><rect x="23.4637%" y="117" width="0.5587%" height="15" fill="rgb(221,155,16)" fg:x="42" fg:w="1"/><text x="23.7137%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.56%)</title><rect x="23.4637%" y="101" width="0.5587%" height="15" fill="rgb(215,215,53)" fg:x="42" fg:w="1"/><text x="23.7137%" y="111.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="23.4637%" y="85" width="0.5587%" height="15" fill="rgb(223,4,10)" fg:x="42" fg:w="1"/><text x="23.7137%" y="95.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (5 samples, 2.79%)</title><rect x="24.0223%" y="485" width="2.7933%" height="15" fill="rgb(234,103,6)" fg:x="43" fg:w="5"/><text x="24.2723%" y="495.50">st..</text></g><g><title>__pthread_clockjoin_ex (5 samples, 2.79%)</title><rect x="24.0223%" y="469" width="2.7933%" height="15" fill="rgb(227,97,0)" fg:x="43" fg:w="5"/><text x="24.2723%" y="479.50">__..</text></g><g><title>__futex_abstimed_wait_common (5 samples, 2.79%)</title><rect x="24.0223%" y="453" width="2.7933%" height="15" fill="rgb(234,150,53)" fg:x="43" fg:w="5"/><text x="24.2723%" y="463.50">__..</text></g><g><title>__libc_start_main_alias_2 (33 samples, 18.44%)</title><rect x="11.1732%" y="565" width="18.4358%" height="15" fill="rgb(228,201,54)" fg:x="20" fg:w="33"/><text x="11.4232%" y="575.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (33 samples, 18.44%)</title><rect x="11.1732%" y="549" width="18.4358%" height="15" fill="rgb(222,22,37)" fg:x="20" fg:w="33"/><text x="11.4232%" y="559.50">__libc_start_call_main</text></g><g><title>main (32 samples, 17.88%)</title><rect x="11.7318%" y="533" width="17.8771%" height="15" fill="rgb(237,53,32)" fg:x="21" fg:w="32"/><text x="11.9818%" y="543.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32 samples, 17.88%)</title><rect x="11.7318%" y="517" width="17.8771%" height="15" fill="rgb(233,25,53)" fg:x="21" fg:w="32"/><text x="11.9818%" y="527.50">std::sys_common::backtrace::..</text></g><g><title>mausam::main (32 samples, 17.88%)</title><rect x="11.7318%" y="501" width="17.8771%" height="15" fill="rgb(210,40,34)" fg:x="21" fg:w="32"/><text x="11.9818%" y="511.50">mausam::main</text></g><g><title>tokio::runtime::park::Inner::park (5 samples, 2.79%)</title><rect x="26.8156%" y="485" width="2.7933%" height="15" fill="rgb(241,220,44)" fg:x="48" fg:w="5"/><text x="27.0656%" y="495.50">to..</text></g><g><title>syscall (5 samples, 2.79%)</title><rect x="26.8156%" y="469" width="2.7933%" height="15" fill="rgb(235,28,35)" fg:x="48" fg:w="5"/><text x="27.0656%" y="479.50">sy..</text></g><g><title>_start (40 samples, 22.35%)</title><rect x="7.8212%" y="581" width="22.3464%" height="15" fill="rgb(210,56,17)" fg:x="14" fg:w="40"/><text x="8.0712%" y="591.50">_start</text></g><g><title>_dl_start (1 samples, 0.56%)</title><rect x="29.6089%" y="565" width="0.5587%" height="15" fill="rgb(224,130,29)" fg:x="53" fg:w="1"/><text x="29.8589%" y="575.50"></text></g><g><title>_dl_start_final (1 samples, 0.56%)</title><rect x="29.6089%" y="549" width="0.5587%" height="15" fill="rgb(235,212,8)" fg:x="53" fg:w="1"/><text x="29.8589%" y="559.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.56%)</title><rect x="29.6089%" y="533" width="0.5587%" height="15" fill="rgb(223,33,50)" fg:x="53" fg:w="1"/><text x="29.8589%" y="543.50"></text></g><g><title>dl_main (1 samples, 0.56%)</title><rect x="29.6089%" y="517" width="0.5587%" height="15" fill="rgb(219,149,13)" fg:x="53" fg:w="1"/><text x="29.8589%" y="527.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.56%)</title><rect x="29.6089%" y="501" width="0.5587%" height="15" fill="rgb(250,156,29)" fg:x="53" fg:w="1"/><text x="29.8589%" y="511.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.56%)</title><rect x="29.6089%" y="485" width="0.5587%" height="15" fill="rgb(216,193,19)" fg:x="53" fg:w="1"/><text x="29.8589%" y="495.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.56%)</title><rect x="29.6089%" y="469" width="0.5587%" height="15" fill="rgb(216,135,14)" fg:x="53" fg:w="1"/><text x="29.8589%" y="479.50"></text></g><g><title>mausam::app::NotifyData::show (6 samples, 3.35%)</title><rect x="30.1676%" y="581" width="3.3520%" height="15" fill="rgb(241,47,5)" fg:x="54" fg:w="6"/><text x="30.4176%" y="591.50">mau..</text></g><g><title>parking::Inner::park (6 samples, 3.35%)</title><rect x="30.1676%" y="565" width="3.3520%" height="15" fill="rgb(233,42,35)" fg:x="54" fg:w="6"/><text x="30.4176%" y="575.50">par..</text></g><g><title>syscall (6 samples, 3.35%)</title><rect x="30.1676%" y="549" width="3.3520%" height="15" fill="rgb(231,13,6)" fg:x="54" fg:w="6"/><text x="30.4176%" y="559.50">sys..</text></g><g><title>EVP_KEYMGMT_do_all_provided (1 samples, 0.56%)</title><rect x="33.5196%" y="309" width="0.5587%" height="15" fill="rgb(207,181,40)" fg:x="60" fg:w="1"/><text x="33.7696%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="33.5196%" y="293" width="0.5587%" height="15" fill="rgb(254,173,49)" fg:x="60" fg:w="1"/><text x="33.7696%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="33.5196%" y="277" width="0.5587%" height="15" fill="rgb(221,1,38)" fg:x="60" fg:w="1"/><text x="33.7696%" y="287.50"></text></g><g><title>EVP_KEYMGMT_is_a (1 samples, 0.56%)</title><rect x="34.0782%" y="309" width="0.5587%" height="15" fill="rgb(206,124,46)" fg:x="61" fg:w="1"/><text x="34.3282%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="34.0782%" y="293" width="0.5587%" height="15" fill="rgb(249,21,11)" fg:x="61" fg:w="1"/><text x="34.3282%" y="303.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.56%)</title><rect x="34.0782%" y="277" width="0.5587%" height="15" fill="rgb(222,201,40)" fg:x="61" fg:w="1"/><text x="34.3282%" y="287.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.56%)</title><rect x="34.0782%" y="261" width="0.5587%" height="15" fill="rgb(235,61,29)" fg:x="61" fg:w="1"/><text x="34.3282%" y="271.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.56%)</title><rect x="34.6369%" y="261" width="0.5587%" height="15" fill="rgb(219,207,3)" fg:x="62" fg:w="1"/><text x="34.8869%" y="271.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.56%)</title><rect x="34.6369%" y="245" width="0.5587%" height="15" fill="rgb(222,56,46)" fg:x="62" fg:w="1"/><text x="34.8869%" y="255.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 1.12%)</title><rect x="35.7542%" y="245" width="1.1173%" height="15" fill="rgb(239,76,54)" fg:x="64" fg:w="2"/><text x="36.0042%" y="255.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 1.12%)</title><rect x="35.7542%" y="229" width="1.1173%" height="15" fill="rgb(231,124,27)" fg:x="64" fg:w="2"/><text x="36.0042%" y="239.50"></text></g><g><title>CRYPTO_strndup (1 samples, 0.56%)</title><rect x="36.8715%" y="245" width="0.5587%" height="15" fill="rgb(249,195,6)" fg:x="66" fg:w="1"/><text x="37.1215%" y="255.50"></text></g><g><title>OPENSSL_strnlen (1 samples, 0.56%)</title><rect x="36.8715%" y="229" width="0.5587%" height="15" fill="rgb(237,174,47)" fg:x="66" fg:w="1"/><text x="37.1215%" y="239.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (6 samples, 3.35%)</title><rect x="34.6369%" y="309" width="3.3520%" height="15" fill="rgb(206,201,31)" fg:x="62" fg:w="6"/><text x="34.8869%" y="319.50">OSS..</text></g><g><title>OSSL_DECODER_is_a (6 samples, 3.35%)</title><rect x="34.6369%" y="293" width="3.3520%" height="15" fill="rgb(231,57,52)" fg:x="62" fg:w="6"/><text x="34.8869%" y="303.50">OSS..</text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 3.35%)</title><rect x="34.6369%" y="277" width="3.3520%" height="15" fill="rgb(248,177,22)" fg:x="62" fg:w="6"/><text x="34.8869%" y="287.50">[li..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 2.79%)</title><rect x="35.1955%" y="261" width="2.7933%" height="15" fill="rgb(215,211,37)" fg:x="63" fg:w="5"/><text x="35.4455%" y="271.50">[l..</text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.56%)</title><rect x="37.4302%" y="245" width="0.5587%" height="15" fill="rgb(241,128,51)" fg:x="67" fg:w="1"/><text x="37.6802%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="37.4302%" y="229" width="0.5587%" height="15" fill="rgb(227,165,31)" fg:x="67" fg:w="1"/><text x="37.6802%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="37.4302%" y="213" width="0.5587%" height="15" fill="rgb(228,167,24)" fg:x="67" fg:w="1"/><text x="37.6802%" y="223.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (10 samples, 5.59%)</title><rect x="33.5196%" y="325" width="5.5866%" height="15" fill="rgb(228,143,12)" fg:x="60" fg:w="10"/><text x="33.7696%" y="335.50">OSSL_DE..</text></g><g><title>OSSL_DECODER_do_all_provided (2 samples, 1.12%)</title><rect x="37.9888%" y="309" width="1.1173%" height="15" fill="rgb(249,149,8)" fg:x="68" fg:w="2"/><text x="38.2388%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="37.9888%" y="293" width="1.1173%" height="15" fill="rgb(243,35,44)" fg:x="68" fg:w="2"/><text x="38.2388%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="37.9888%" y="277" width="1.1173%" height="15" fill="rgb(246,89,9)" fg:x="68" fg:w="2"/><text x="38.2388%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="38.5475%" y="261" width="0.5587%" height="15" fill="rgb(233,213,13)" fg:x="69" fg:w="1"/><text x="38.7975%" y="271.50"></text></g><g><title>OSSL_DECODER_is_a (1 samples, 0.56%)</title><rect x="38.5475%" y="245" width="0.5587%" height="15" fill="rgb(233,141,41)" fg:x="69" fg:w="1"/><text x="38.7975%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="38.5475%" y="229" width="0.5587%" height="15" fill="rgb(239,167,4)" fg:x="69" fg:w="1"/><text x="38.7975%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="38.5475%" y="213" width="0.5587%" height="15" fill="rgb(209,217,16)" fg:x="69" fg:w="1"/><text x="38.7975%" y="223.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.56%)</title><rect x="38.5475%" y="197" width="0.5587%" height="15" fill="rgb(219,88,35)" fg:x="69" fg:w="1"/><text x="38.7975%" y="207.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.56%)</title><rect x="38.5475%" y="181" width="0.5587%" height="15" fill="rgb(220,193,23)" fg:x="69" fg:w="1"/><text x="38.7975%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.1061%" y="229" width="0.5587%" height="15" fill="rgb(230,90,52)" fg:x="70" fg:w="1"/><text x="39.3561%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.1061%" y="213" width="0.5587%" height="15" fill="rgb(252,106,19)" fg:x="70" fg:w="1"/><text x="39.3561%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.1061%" y="197" width="0.5587%" height="15" fill="rgb(206,74,20)" fg:x="70" fg:w="1"/><text x="39.3561%" y="207.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (1 samples, 0.56%)</title><rect x="39.1061%" y="181" width="0.5587%" height="15" fill="rgb(230,138,44)" fg:x="70" fg:w="1"/><text x="39.3561%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.1061%" y="165" width="0.5587%" height="15" fill="rgb(235,182,43)" fg:x="70" fg:w="1"/><text x="39.3561%" y="175.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.56%)</title><rect x="39.1061%" y="149" width="0.5587%" height="15" fill="rgb(242,16,51)" fg:x="70" fg:w="1"/><text x="39.3561%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.1061%" y="133" width="0.5587%" height="15" fill="rgb(248,9,4)" fg:x="70" fg:w="1"/><text x="39.3561%" y="143.50"></text></g><g><title>OSSL_DECODER_from_data (2 samples, 1.12%)</title><rect x="39.1061%" y="325" width="1.1173%" height="15" fill="rgb(210,31,22)" fg:x="70" fg:w="2"/><text x="39.3561%" y="335.50"></text></g><g><title>OSSL_DECODER_from_bio (2 samples, 1.12%)</title><rect x="39.1061%" y="309" width="1.1173%" height="15" fill="rgb(239,54,39)" fg:x="70" fg:w="2"/><text x="39.3561%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="39.1061%" y="293" width="1.1173%" height="15" fill="rgb(230,99,41)" fg:x="70" fg:w="2"/><text x="39.3561%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="39.1061%" y="277" width="1.1173%" height="15" fill="rgb(253,106,12)" fg:x="70" fg:w="2"/><text x="39.3561%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="39.1061%" y="261" width="1.1173%" height="15" fill="rgb(213,46,41)" fg:x="70" fg:w="2"/><text x="39.3561%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="39.1061%" y="245" width="1.1173%" height="15" fill="rgb(215,133,35)" fg:x="70" fg:w="2"/><text x="39.3561%" y="255.50"></text></g><g><title>d2i_EC_PUBKEY (1 samples, 0.56%)</title><rect x="39.6648%" y="229" width="0.5587%" height="15" fill="rgb(213,28,5)" fg:x="71" fg:w="1"/><text x="39.9148%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.6648%" y="213" width="0.5587%" height="15" fill="rgb(215,77,49)" fg:x="71" fg:w="1"/><text x="39.9148%" y="223.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.56%)</title><rect x="39.6648%" y="197" width="0.5587%" height="15" fill="rgb(248,100,22)" fg:x="71" fg:w="1"/><text x="39.9148%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.6648%" y="181" width="0.5587%" height="15" fill="rgb(208,67,9)" fg:x="71" fg:w="1"/><text x="39.9148%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.6648%" y="165" width="0.5587%" height="15" fill="rgb(219,133,21)" fg:x="71" fg:w="1"/><text x="39.9148%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.6648%" y="149" width="0.5587%" height="15" fill="rgb(246,46,29)" fg:x="71" fg:w="1"/><text x="39.9148%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.6648%" y="133" width="0.5587%" height="15" fill="rgb(246,185,52)" fg:x="71" fg:w="1"/><text x="39.9148%" y="143.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="39.6648%" y="117" width="0.5587%" height="15" fill="rgb(252,136,11)" fg:x="71" fg:w="1"/><text x="39.9148%" y="127.50"></text></g><g><title>EC_GROUP_new_by_curve_name_ex (1 samples, 0.56%)</title><rect x="39.6648%" y="101" width="0.5587%" height="15" fill="rgb(219,138,53)" fg:x="71" fg:w="1"/><text x="39.9148%" y="111.50"></text></g><g><title>BN_bin2bn (1 samples, 0.56%)</title><rect x="39.6648%" y="85" width="0.5587%" height="15" fill="rgb(211,51,23)" fg:x="71" fg:w="1"/><text x="39.9148%" y="95.50"></text></g><g><title>BN_new (1 samples, 0.56%)</title><rect x="39.6648%" y="69" width="0.5587%" height="15" fill="rgb(247,221,28)" fg:x="71" fg:w="1"/><text x="39.9148%" y="79.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.56%)</title><rect x="39.6648%" y="53" width="0.5587%" height="15" fill="rgb(251,222,45)" fg:x="71" fg:w="1"/><text x="39.9148%" y="63.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="39.6648%" y="37" width="0.5587%" height="15" fill="rgb(217,162,53)" fg:x="71" fg:w="1"/><text x="39.9148%" y="47.50"></text></g><g><title>ASN1_STRING_to_UTF8 (1 samples, 0.56%)</title><rect x="40.2235%" y="309" width="0.5587%" height="15" fill="rgb(229,93,14)" fg:x="72" fg:w="1"/><text x="40.4735%" y="319.50"></text></g><g><title>ASN1_mbstring_copy (1 samples, 0.56%)</title><rect x="40.2235%" y="293" width="0.5587%" height="15" fill="rgb(209,67,49)" fg:x="72" fg:w="1"/><text x="40.4735%" y="303.50"></text></g><g><title>ASN1_mbstring_ncopy (1 samples, 0.56%)</title><rect x="40.2235%" y="277" width="0.5587%" height="15" fill="rgb(213,87,29)" fg:x="72" fg:w="1"/><text x="40.4735%" y="287.50"></text></g><g><title>mausam::main (14 samples, 7.82%)</title><rect x="33.5196%" y="581" width="7.8212%" height="15" fill="rgb(205,151,52)" fg:x="60" fg:w="14"/><text x="33.7696%" y="591.50">mausam::main</text></g><g><title>mausam::main::{{closure}} (14 samples, 7.82%)</title><rect x="33.5196%" y="565" width="7.8212%" height="15" fill="rgb(253,215,39)" fg:x="60" fg:w="14"/><text x="33.7696%" y="575.50">mausam::mai..</text></g><g><title>mausam::app::run::{{closure}} (14 samples, 7.82%)</title><rect x="33.5196%" y="549" width="7.8212%" height="15" fill="rgb(221,220,41)" fg:x="60" fg:w="14"/><text x="33.7696%" y="559.50">mausam::app..</text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (14 samples, 7.82%)</title><rect x="33.5196%" y="533" width="7.8212%" height="15" fill="rgb(218,133,21)" fg:x="60" fg:w="14"/><text x="33.7696%" y="543.50">mausam::app..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (14 samples, 7.82%)</title><rect x="33.5196%" y="517" width="7.8212%" height="15" fill="rgb(221,193,43)" fg:x="60" fg:w="14"/><text x="33.7696%" y="527.50">reqwest::as..</text></g><g><title>X509_STORE_set_default_paths_ex (14 samples, 7.82%)</title><rect x="33.5196%" y="501" width="7.8212%" height="15" fill="rgb(240,128,52)" fg:x="60" fg:w="14"/><text x="33.7696%" y="511.50">X509_STORE_..</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="485" width="7.8212%" height="15" fill="rgb(253,114,12)" fg:x="60" fg:w="14"/><text x="33.7696%" y="495.50">[libcrypto...</text></g><g><title>X509_load_cert_crl_file_ex (14 samples, 7.82%)</title><rect x="33.5196%" y="469" width="7.8212%" height="15" fill="rgb(215,223,47)" fg:x="60" fg:w="14"/><text x="33.7696%" y="479.50">X509_load_c..</text></g><g><title>PEM_X509_INFO_read_bio_ex (14 samples, 7.82%)</title><rect x="33.5196%" y="453" width="7.8212%" height="15" fill="rgb(248,225,23)" fg:x="60" fg:w="14"/><text x="33.7696%" y="463.50">PEM_X509_IN..</text></g><g><title>ASN1_item_d2i_ex (14 samples, 7.82%)</title><rect x="33.5196%" y="437" width="7.8212%" height="15" fill="rgb(250,108,0)" fg:x="60" fg:w="14"/><text x="33.7696%" y="447.50">ASN1_item_d..</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="421" width="7.8212%" height="15" fill="rgb(228,208,7)" fg:x="60" fg:w="14"/><text x="33.7696%" y="431.50">[libcrypto...</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="405" width="7.8212%" height="15" fill="rgb(244,45,10)" fg:x="60" fg:w="14"/><text x="33.7696%" y="415.50">[libcrypto...</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="389" width="7.8212%" height="15" fill="rgb(207,125,25)" fg:x="60" fg:w="14"/><text x="33.7696%" y="399.50">[libcrypto...</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="373" width="7.8212%" height="15" fill="rgb(210,195,18)" fg:x="60" fg:w="14"/><text x="33.7696%" y="383.50">[libcrypto...</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="357" width="7.8212%" height="15" fill="rgb(249,80,12)" fg:x="60" fg:w="14"/><text x="33.7696%" y="367.50">[libcrypto...</text></g><g><title>[libcrypto.so.3.0.8] (14 samples, 7.82%)</title><rect x="33.5196%" y="341" width="7.8212%" height="15" fill="rgb(221,65,9)" fg:x="60" fg:w="14"/><text x="33.7696%" y="351.50">[libcrypto...</text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 1.12%)</title><rect x="40.2235%" y="325" width="1.1173%" height="15" fill="rgb(235,49,36)" fg:x="72" fg:w="2"/><text x="40.4735%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="40.7821%" y="309" width="0.5587%" height="15" fill="rgb(225,32,20)" fg:x="73" fg:w="1"/><text x="41.0321%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="40.7821%" y="293" width="0.5587%" height="15" fill="rgb(215,141,46)" fg:x="73" fg:w="1"/><text x="41.0321%" y="303.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.56%)</title><rect x="40.7821%" y="277" width="0.5587%" height="15" fill="rgb(250,160,47)" fg:x="73" fg:w="1"/><text x="41.0321%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="40.7821%" y="261" width="0.5587%" height="15" fill="rgb(216,222,40)" fg:x="73" fg:w="1"/><text x="41.0321%" y="271.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.56%)</title><rect x="40.7821%" y="245" width="0.5587%" height="15" fill="rgb(234,217,39)" fg:x="73" fg:w="1"/><text x="41.0321%" y="255.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2 samples, 1.12%)</title><rect x="41.3408%" y="565" width="1.1173%" height="15" fill="rgb(207,178,40)" fg:x="74" fg:w="2"/><text x="41.5908%" y="575.50"></text></g><g><title>zbus::socket_reader::SocketReader::receive_msg::{{closure}}::{{closure}} (2 samples, 1.12%)</title><rect x="41.3408%" y="549" width="1.1173%" height="15" fill="rgb(221,136,13)" fg:x="74" fg:w="2"/><text x="41.5908%" y="559.50"></text></g><g><title>&lt;async_io::Async&lt;std::os::unix::net::stream::UnixStream&gt; as zbus::raw::socket::Socket&gt;::poll_recvmsg (2 samples, 1.12%)</title><rect x="41.3408%" y="533" width="1.1173%" height="15" fill="rgb(249,199,10)" fg:x="74" fg:w="2"/><text x="41.5908%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 1.12%)</title><rect x="41.3408%" y="517" width="1.1173%" height="15" fill="rgb(249,222,13)" fg:x="74" fg:w="2"/><text x="41.5908%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 1.12%)</title><rect x="41.3408%" y="501" width="1.1173%" height="15" fill="rgb(244,185,38)" fg:x="74" fg:w="2"/><text x="41.5908%" y="511.50"></text></g><g><title>malloc_consolidate (2 samples, 1.12%)</title><rect x="41.3408%" y="485" width="1.1173%" height="15" fill="rgb(236,202,9)" fg:x="74" fg:w="2"/><text x="41.5908%" y="495.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.56%)</title><rect x="41.8994%" y="469" width="0.5587%" height="15" fill="rgb(250,229,37)" fg:x="75" fg:w="1"/><text x="42.1494%" y="479.50"></text></g><g><title>mausam (74 samples, 41.34%)</title><rect x="1.6760%" y="597" width="41.3408%" height="15" fill="rgb(206,174,23)" fg:x="3" fg:w="74"/><text x="1.9260%" y="607.50">mausam</text></g><g><title>zbus::connection_builder::ConnectionBuilder::build::{{closure}} (3 samples, 1.68%)</title><rect x="41.3408%" y="581" width="1.6760%" height="15" fill="rgb(211,33,43)" fg:x="74" fg:w="3"/><text x="41.5908%" y="591.50"></text></g><g><title>zbus::raw::handshake::HandshakeCommon&lt;S&gt;::read_command (1 samples, 0.56%)</title><rect x="42.4581%" y="565" width="0.5587%" height="15" fill="rgb(245,58,50)" fg:x="76" fg:w="1"/><text x="42.7081%" y="575.50"></text></g><g><title>&lt;async_io::Async&lt;std::os::unix::net::stream::UnixStream&gt; as zbus::raw::socket::Socket&gt;::poll_recvmsg (1 samples, 0.56%)</title><rect x="42.4581%" y="549" width="0.5587%" height="15" fill="rgb(244,68,36)" fg:x="76" fg:w="1"/><text x="42.7081%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="42.4581%" y="533" width="0.5587%" height="15" fill="rgb(232,229,15)" fg:x="76" fg:w="1"/><text x="42.7081%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.56%)</title><rect x="42.4581%" y="517" width="0.5587%" height="15" fill="rgb(254,30,23)" fg:x="76" fg:w="1"/><text x="42.7081%" y="527.50"></text></g><g><title>__GI_madvise (19 samples, 10.61%)</title><rect x="49.1620%" y="549" width="10.6145%" height="15" fill="rgb(235,160,14)" fg:x="88" fg:w="19"/><text x="49.4120%" y="559.50">__GI_madvise</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.56%)</title><rect x="59.7765%" y="485" width="0.5587%" height="15" fill="rgb(212,155,44)" fg:x="107" fg:w="1"/><text x="60.0265%" y="495.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.56%)</title><rect x="59.7765%" y="469" width="0.5587%" height="15" fill="rgb(226,2,50)" fg:x="107" fg:w="1"/><text x="60.0265%" y="479.50"></text></g><g><title>__pthread_attr_setaffinity_alias (1 samples, 0.56%)</title><rect x="59.7765%" y="453" width="0.5587%" height="15" fill="rgb(234,177,6)" fg:x="107" fg:w="1"/><text x="60.0265%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.56%)</title><rect x="59.7765%" y="437" width="0.5587%" height="15" fill="rgb(217,24,9)" fg:x="107" fg:w="1"/><text x="60.0265%" y="447.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 2.79%)</title><rect x="60.3352%" y="469" width="2.7933%" height="15" fill="rgb(220,13,46)" fg:x="108" fg:w="5"/><text x="60.5852%" y="479.50">st..</text></g><g><title>syscall (5 samples, 2.79%)</title><rect x="60.3352%" y="453" width="2.7933%" height="15" fill="rgb(239,221,27)" fg:x="108" fg:w="5"/><text x="60.5852%" y="463.50">sy..</text></g><g><title>core::bool::&lt;impl bool&gt;::then (3 samples, 1.68%)</title><rect x="63.1285%" y="437" width="1.6760%" height="15" fill="rgb(222,198,25)" fg:x="113" fg:w="3"/><text x="63.3785%" y="447.50"></text></g><g><title>std::sys::unix::futex::futex_wait (34 samples, 18.99%)</title><rect x="63.1285%" y="453" width="18.9944%" height="15" fill="rgb(211,99,13)" fg:x="113" fg:w="34"/><text x="63.3785%" y="463.50">std::sys::unix::futex::futex_w..</text></g><g><title>syscall (31 samples, 17.32%)</title><rect x="64.8045%" y="437" width="17.3184%" height="15" fill="rgb(232,111,31)" fg:x="116" fg:w="31"/><text x="65.0545%" y="447.50">syscall</text></g><g><title>core::hint::spin_loop (1 samples, 0.56%)</title><rect x="82.1229%" y="437" width="0.5587%" height="15" fill="rgb(245,82,37)" fg:x="147" fg:w="1"/><text x="82.3729%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.56%)</title><rect x="82.1229%" y="421" width="0.5587%" height="15" fill="rgb(227,149,46)" fg:x="147" fg:w="1"/><text x="82.3729%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (37 samples, 20.67%)</title><rect x="63.1285%" y="469" width="20.6704%" height="15" fill="rgb(218,36,50)" fg:x="113" fg:w="37"/><text x="63.3785%" y="479.50">std::sys::unix::locks::futex_mute..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (3 samples, 1.68%)</title><rect x="82.1229%" y="453" width="1.6760%" height="15" fill="rgb(226,80,48)" fg:x="147" fg:w="3"/><text x="82.3729%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 1.12%)</title><rect x="82.6816%" y="437" width="1.1173%" height="15" fill="rgb(238,224,15)" fg:x="148" fg:w="2"/><text x="82.9316%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 1.12%)</title><rect x="82.6816%" y="421" width="1.1173%" height="15" fill="rgb(241,136,10)" fg:x="148" fg:w="2"/><text x="82.9316%" y="431.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.56%)</title><rect x="83.7989%" y="453" width="0.5587%" height="15" fill="rgb(208,32,45)" fg:x="150" fg:w="1"/><text x="84.0489%" y="463.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.56%)</title><rect x="83.7989%" y="437" width="0.5587%" height="15" fill="rgb(207,135,9)" fg:x="150" fg:w="1"/><text x="84.0489%" y="447.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (1 samples, 0.56%)</title><rect x="83.7989%" y="421" width="0.5587%" height="15" fill="rgb(206,86,44)" fg:x="150" fg:w="1"/><text x="84.0489%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.56%)</title><rect x="83.7989%" y="405" width="0.5587%" height="15" fill="rgb(245,177,15)" fg:x="150" fg:w="1"/><text x="84.0489%" y="415.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::{{closure}} (1 samples, 0.56%)</title><rect x="83.7989%" y="389" width="0.5587%" height="15" fill="rgb(206,64,50)" fg:x="150" fg:w="1"/><text x="84.0489%" y="399.50"></text></g><g><title>__GI_getaddrinfo (1 samples, 0.56%)</title><rect x="83.7989%" y="373" width="0.5587%" height="15" fill="rgb(234,36,40)" fg:x="150" fg:w="1"/><text x="84.0489%" y="383.50"></text></g><g><title>nss_database_check_reload_and_get (1 samples, 0.56%)</title><rect x="83.7989%" y="357" width="0.5587%" height="15" fill="rgb(213,64,8)" fg:x="150" fg:w="1"/><text x="84.0489%" y="367.50"></text></g><g><title>_IO_new_fclose (1 samples, 0.56%)</title><rect x="83.7989%" y="341" width="0.5587%" height="15" fill="rgb(210,75,36)" fg:x="150" fg:w="1"/><text x="84.0489%" y="351.50"></text></g><g><title>_IO_new_file_close_it (1 samples, 0.56%)</title><rect x="83.7989%" y="325" width="0.5587%" height="15" fill="rgb(229,88,21)" fg:x="150" fg:w="1"/><text x="84.0489%" y="335.50"></text></g><g><title>__GI__IO_file_close (1 samples, 0.56%)</title><rect x="83.7989%" y="309" width="0.5587%" height="15" fill="rgb(252,204,47)" fg:x="150" fg:w="1"/><text x="84.0489%" y="319.50"></text></g><g><title>syscall (4 samples, 2.23%)</title><rect x="84.3575%" y="437" width="2.2346%" height="15" fill="rgb(208,77,27)" fg:x="151" fg:w="4"/><text x="84.6075%" y="447.50">s..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (10 samples, 5.59%)</title><rect x="84.3575%" y="453" width="5.5866%" height="15" fill="rgb(221,76,26)" fg:x="151" fg:w="10"/><text x="84.6075%" y="463.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (6 samples, 3.35%)</title><rect x="86.5922%" y="437" width="3.3520%" height="15" fill="rgb(225,139,18)" fg:x="155" fg:w="6"/><text x="86.8422%" y="447.50">tok..</text></g><g><title>tokio::runtime::io::Driver::turn (5 samples, 2.79%)</title><rect x="87.1508%" y="421" width="2.7933%" height="15" fill="rgb(230,137,11)" fg:x="156" fg:w="5"/><text x="87.4008%" y="431.50">to..</text></g><g><title>epoll_wait (5 samples, 2.79%)</title><rect x="87.1508%" y="405" width="2.7933%" height="15" fill="rgb(212,28,1)" fg:x="156" fg:w="5"/><text x="87.4008%" y="415.50">ep..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 31.28%)</title><rect x="59.7765%" y="517" width="31.2849%" height="15" fill="rgb(248,164,17)" fg:x="107" fg:w="56"/><text x="60.0265%" y="527.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnO..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (56 samples, 31.28%)</title><rect x="59.7765%" y="501" width="31.2849%" height="15" fill="rgb(222,171,42)" fg:x="107" fg:w="56"/><text x="60.0265%" y="511.50">core::ops::function::FnOnce::call_once{{vtable.shim..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (55 samples, 30.73%)</title><rect x="60.3352%" y="485" width="30.7263%" height="15" fill="rgb(243,84,45)" fg:x="108" fg:w="55"/><text x="60.5852%" y="495.50">std::sys_common::backtrace::__rust_begin_short_bac..</text></g><g><title>tokio::runtime::task::raw::poll (13 samples, 7.26%)</title><rect x="83.7989%" y="469" width="7.2626%" height="15" fill="rgb(252,49,23)" fg:x="150" fg:w="13"/><text x="84.0489%" y="479.50">tokio::run..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 1.12%)</title><rect x="89.9441%" y="453" width="1.1173%" height="15" fill="rgb(215,19,7)" fg:x="161" fg:w="2"/><text x="90.1941%" y="463.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 1.12%)</title><rect x="89.9441%" y="437" width="1.1173%" height="15" fill="rgb(238,81,41)" fg:x="161" fg:w="2"/><text x="90.1941%" y="447.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.56%)</title><rect x="90.5028%" y="421" width="0.5587%" height="15" fill="rgb(210,199,37)" fg:x="162" fg:w="1"/><text x="90.7528%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::conn::ProtoClient&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt; (1 samples, 0.56%)</title><rect x="90.5028%" y="405" width="0.5587%" height="15" fill="rgb(244,192,49)" fg:x="162" fg:w="1"/><text x="90.7528%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (1 samples, 0.56%)</title><rect x="90.5028%" y="389" width="0.5587%" height="15" fill="rgb(226,211,11)" fg:x="162" fg:w="1"/><text x="90.7528%" y="399.50"></text></g><g><title>SSL_free (1 samples, 0.56%)</title><rect x="90.5028%" y="373" width="0.5587%" height="15" fill="rgb(236,162,54)" fg:x="162" fg:w="1"/><text x="90.7528%" y="383.50"></text></g><g><title>SSL_CTX_free (1 samples, 0.56%)</title><rect x="90.5028%" y="357" width="0.5587%" height="15" fill="rgb(220,229,9)" fg:x="162" fg:w="1"/><text x="90.7528%" y="367.50"></text></g><g><title>X509_STORE_free (1 samples, 0.56%)</title><rect x="90.5028%" y="341" width="0.5587%" height="15" fill="rgb(250,87,22)" fg:x="162" fg:w="1"/><text x="90.7528%" y="351.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.56%)</title><rect x="90.5028%" y="325" width="0.5587%" height="15" fill="rgb(239,43,17)" fg:x="162" fg:w="1"/><text x="90.7528%" y="335.50"></text></g><g><title>X509_OBJECT_free (1 samples, 0.56%)</title><rect x="90.5028%" y="309" width="0.5587%" height="15" fill="rgb(231,177,25)" fg:x="162" fg:w="1"/><text x="90.7528%" y="319.50"></text></g><g><title>ASN1_item_free (1 samples, 0.56%)</title><rect x="90.5028%" y="293" width="0.5587%" height="15" fill="rgb(219,179,1)" fg:x="162" fg:w="1"/><text x="90.7528%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="90.5028%" y="277" width="0.5587%" height="15" fill="rgb(238,219,53)" fg:x="162" fg:w="1"/><text x="90.7528%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="90.5028%" y="261" width="0.5587%" height="15" fill="rgb(232,167,36)" fg:x="162" fg:w="1"/><text x="90.7528%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="90.5028%" y="245" width="0.5587%" height="15" fill="rgb(244,19,51)" fg:x="162" fg:w="1"/><text x="90.7528%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="90.5028%" y="229" width="0.5587%" height="15" fill="rgb(224,6,22)" fg:x="162" fg:w="1"/><text x="90.7528%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.56%)</title><rect x="90.5028%" y="213" width="0.5587%" height="15" fill="rgb(224,145,5)" fg:x="162" fg:w="1"/><text x="90.7528%" y="223.50"></text></g><g><title>__free (1 samples, 0.56%)</title><rect x="90.5028%" y="197" width="0.5587%" height="15" fill="rgb(234,130,49)" fg:x="162" fg:w="1"/><text x="90.7528%" y="207.50"></text></g><g><title>_int_free (1 samples, 0.56%)</title><rect x="90.5028%" y="181" width="0.5587%" height="15" fill="rgb(254,6,2)" fg:x="162" fg:w="1"/><text x="90.7528%" y="191.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (57 samples, 31.84%)</title><rect x="59.7765%" y="533" width="31.8436%" height="15" fill="rgb(208,96,46)" fg:x="107" fg:w="57"/><text x="60.0265%" y="543.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnO..</text></g><g><title>alloc::alloc::box_free (1 samples, 0.56%)</title><rect x="91.0615%" y="517" width="0.5587%" height="15" fill="rgb(239,3,39)" fg:x="163" fg:w="1"/><text x="91.3115%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.56%)</title><rect x="91.0615%" y="501" width="0.5587%" height="15" fill="rgb(233,210,1)" fg:x="163" fg:w="1"/><text x="91.3115%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.56%)</title><rect x="91.0615%" y="485" width="0.5587%" height="15" fill="rgb(244,137,37)" fg:x="163" fg:w="1"/><text x="91.3115%" y="495.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.56%)</title><rect x="91.0615%" y="469" width="0.5587%" height="15" fill="rgb(240,136,2)" fg:x="163" fg:w="1"/><text x="91.3115%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.56%)</title><rect x="91.0615%" y="453" width="0.5587%" height="15" fill="rgb(239,18,37)" fg:x="163" fg:w="1"/><text x="91.3115%" y="463.50"></text></g><g><title>__free (1 samples, 0.56%)</title><rect x="91.0615%" y="437" width="0.5587%" height="15" fill="rgb(218,185,22)" fg:x="163" fg:w="1"/><text x="91.3115%" y="447.50"></text></g><g><title>__GI___munmap (5 samples, 2.79%)</title><rect x="91.6201%" y="485" width="2.7933%" height="15" fill="rgb(225,218,4)" fg:x="164" fg:w="5"/><text x="91.8701%" y="495.50">__..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (6 samples, 3.35%)</title><rect x="91.6201%" y="533" width="3.3520%" height="15" fill="rgb(230,182,32)" fg:x="164" fg:w="6"/><text x="91.8701%" y="543.50">cor..</text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (6 samples, 3.35%)</title><rect x="91.6201%" y="517" width="3.3520%" height="15" fill="rgb(242,56,43)" fg:x="164" fg:w="6"/><text x="91.8701%" y="527.50">&lt;st..</text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (6 samples, 3.35%)</title><rect x="91.6201%" y="501" width="3.3520%" height="15" fill="rgb(233,99,24)" fg:x="164" fg:w="6"/><text x="91.8701%" y="511.50">std..</text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.56%)</title><rect x="94.4134%" y="485" width="0.5587%" height="15" fill="rgb(234,209,42)" fg:x="169" fg:w="1"/><text x="94.6634%" y="495.50"></text></g><g><title>__GI___sysconf (1 samples, 0.56%)</title><rect x="94.4134%" y="469" width="0.5587%" height="15" fill="rgb(227,7,12)" fg:x="169" fg:w="1"/><text x="94.6634%" y="479.50"></text></g><g><title>__clone3 (97 samples, 54.19%)</title><rect x="43.0168%" y="581" width="54.1899%" height="15" fill="rgb(245,203,43)" fg:x="77" fg:w="97"/><text x="43.2668%" y="591.50">__clone3</text></g><g><title>start_thread (87 samples, 48.60%)</title><rect x="48.6034%" y="565" width="48.6034%" height="15" fill="rgb(238,205,33)" fg:x="87" fg:w="87"/><text x="48.8534%" y="575.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (67 samples, 37.43%)</title><rect x="59.7765%" y="549" width="37.4302%" height="15" fill="rgb(231,56,7)" fg:x="107" fg:w="67"/><text x="60.0265%" y="559.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (4 samples, 2.23%)</title><rect x="94.9721%" y="533" width="2.2346%" height="15" fill="rgb(244,186,29)" fg:x="170" fg:w="4"/><text x="95.2221%" y="543.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (4 samples, 2.23%)</title><rect x="94.9721%" y="517" width="2.2346%" height="15" fill="rgb(234,111,31)" fg:x="170" fg:w="4"/><text x="95.2221%" y="527.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 2.23%)</title><rect x="94.9721%" y="501" width="2.2346%" height="15" fill="rgb(241,149,10)" fg:x="170" fg:w="4"/><text x="95.2221%" y="511.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 2.23%)</title><rect x="94.9721%" y="485" width="2.2346%" height="15" fill="rgb(249,206,44)" fg:x="170" fg:w="4"/><text x="95.2221%" y="495.50">s..</text></g><g><title>__GI___mmap64 (4 samples, 2.23%)</title><rect x="94.9721%" y="469" width="2.2346%" height="15" fill="rgb(251,153,30)" fg:x="170" fg:w="4"/><text x="95.2221%" y="479.50">_..</text></g><g><title>tokio-runtime-w (98 samples, 54.75%)</title><rect x="43.0168%" y="597" width="54.7486%" height="15" fill="rgb(239,152,38)" fg:x="77" fg:w="98"/><text x="43.2668%" y="607.50">tokio-runtime-w</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.56%)</title><rect x="97.2067%" y="581" width="0.5587%" height="15" fill="rgb(249,139,47)" fg:x="174" fg:w="1"/><text x="97.4567%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.56%)</title><rect x="97.2067%" y="565" width="0.5587%" height="15" fill="rgb(244,64,35)" fg:x="174" fg:w="1"/><text x="97.4567%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.56%)</title><rect x="97.2067%" y="549" width="0.5587%" height="15" fill="rgb(216,46,15)" fg:x="174" fg:w="1"/><text x="97.4567%" y="559.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.56%)</title><rect x="97.2067%" y="533" width="0.5587%" height="15" fill="rgb(250,74,19)" fg:x="174" fg:w="1"/><text x="97.4567%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.56%)</title><rect x="97.7654%" y="581" width="0.5587%" height="15" fill="rgb(249,42,33)" fg:x="175" fg:w="1"/><text x="98.0154%" y="591.50"></text></g><g><title>__GI___sysconf (1 samples, 0.56%)</title><rect x="97.7654%" y="565" width="0.5587%" height="15" fill="rgb(242,149,17)" fg:x="175" fg:w="1"/><text x="98.0154%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;zbus::socket_reader::SocketReader::receive_msg::{{closure}}&gt; (1 samples, 0.56%)</title><rect x="98.3240%" y="453" width="0.5587%" height="15" fill="rgb(244,29,21)" fg:x="176" fg:w="1"/><text x="98.5740%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.56%)</title><rect x="98.3240%" y="437" width="0.5587%" height="15" fill="rgb(220,130,37)" fg:x="176" fg:w="1"/><text x="98.5740%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.56%)</title><rect x="98.3240%" y="421" width="0.5587%" height="15" fill="rgb(211,67,2)" fg:x="176" fg:w="1"/><text x="98.5740%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;zbus::match_rule::MatchRule&gt; (1 samples, 0.56%)</title><rect x="98.3240%" y="405" width="0.5587%" height="15" fill="rgb(235,68,52)" fg:x="176" fg:w="1"/><text x="98.5740%" y="415.50"></text></g><g><title>__free (1 samples, 0.56%)</title><rect x="98.3240%" y="389" width="0.5587%" height="15" fill="rgb(246,142,3)" fg:x="176" fg:w="1"/><text x="98.5740%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.56%)</title><rect x="98.3240%" y="373" width="0.5587%" height="15" fill="rgb(241,25,7)" fg:x="176" fg:w="1"/><text x="98.5740%" y="383.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.56%)</title><rect x="98.3240%" y="357" width="0.5587%" height="15" fill="rgb(242,119,39)" fg:x="176" fg:w="1"/><text x="98.5740%" y="367.50"></text></g><g><title>zbus::message_header::MessagePrimaryHeader::read (1 samples, 0.56%)</title><rect x="98.8827%" y="437" width="0.5587%" height="15" fill="rgb(241,98,45)" fg:x="177" fg:w="1"/><text x="99.1327%" y="447.50"></text></g><g><title>&lt;zbus::message_header::MessagePrimaryHeader as zvariant::type::Type&gt;::signature (1 samples, 0.56%)</title><rect x="98.8827%" y="421" width="0.5587%" height="15" fill="rgb(254,28,30)" fg:x="177" fg:w="1"/><text x="99.1327%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.56%)</title><rect x="98.8827%" y="405" width="0.5587%" height="15" fill="rgb(241,142,54)" fg:x="177" fg:w="1"/><text x="99.1327%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.56%)</title><rect x="98.8827%" y="389" width="0.5587%" height="15" fill="rgb(222,85,15)" fg:x="177" fg:w="1"/><text x="99.1327%" y="399.50"></text></g><g><title>all (179 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(210,85,47)" fg:x="0" fg:w="179"/><text x="0.2500%" y="623.50"></text></g><g><title>zbus::Connectio (4 samples, 2.23%)</title><rect x="97.7654%" y="597" width="2.2346%" height="15" fill="rgb(224,206,25)" fg:x="175" fg:w="4"/><text x="98.0154%" y="607.50">z..</text></g><g><title>__clone3 (3 samples, 1.68%)</title><rect x="98.3240%" y="581" width="1.6760%" height="15" fill="rgb(243,201,19)" fg:x="176" fg:w="3"/><text x="98.5740%" y="591.50"></text></g><g><title>start_thread (3 samples, 1.68%)</title><rect x="98.3240%" y="565" width="1.6760%" height="15" fill="rgb(236,59,4)" fg:x="176" fg:w="3"/><text x="98.5740%" y="575.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 1.68%)</title><rect x="98.3240%" y="549" width="1.6760%" height="15" fill="rgb(254,179,45)" fg:x="176" fg:w="3"/><text x="98.5740%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 1.68%)</title><rect x="98.3240%" y="533" width="1.6760%" height="15" fill="rgb(226,14,10)" fg:x="176" fg:w="3"/><text x="98.5740%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 1.68%)</title><rect x="98.3240%" y="517" width="1.6760%" height="15" fill="rgb(244,27,41)" fg:x="176" fg:w="3"/><text x="98.5740%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 1.68%)</title><rect x="98.3240%" y="501" width="1.6760%" height="15" fill="rgb(235,35,32)" fg:x="176" fg:w="3"/><text x="98.5740%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 1.68%)</title><rect x="98.3240%" y="485" width="1.6760%" height="15" fill="rgb(218,68,31)" fg:x="176" fg:w="3"/><text x="98.5740%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3 samples, 1.68%)</title><rect x="98.3240%" y="469" width="1.6760%" height="15" fill="rgb(207,120,37)" fg:x="176" fg:w="3"/><text x="98.5740%" y="479.50"></text></g><g><title>zbus::socket_reader::SocketReader::receive_msg::{{closure}}::{{closure}} (2 samples, 1.12%)</title><rect x="98.8827%" y="453" width="1.1173%" height="15" fill="rgb(227,98,0)" fg:x="177" fg:w="2"/><text x="99.1327%" y="463.50"></text></g><g><title>zvariant::de::from_slice (1 samples, 0.56%)</title><rect x="99.4413%" y="437" width="0.5587%" height="15" fill="rgb(207,7,3)" fg:x="178" fg:w="1"/><text x="99.6913%" y="447.50"></text></g><g><title>&lt;&amp;mut zvariant::dbus::de::Deserializer&lt;B&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.56%)</title><rect x="99.4413%" y="421" width="0.5587%" height="15" fill="rgb(206,98,19)" fg:x="178" fg:w="1"/><text x="99.6913%" y="431.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.56%)</title><rect x="99.4413%" y="405" width="0.5587%" height="15" fill="rgb(217,5,26)" fg:x="178" fg:w="1"/><text x="99.6913%" y="415.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::parse_next_signature (1 samples, 0.56%)</title><rect x="99.4413%" y="389" width="0.5587%" height="15" fill="rgb(235,190,38)" fg:x="178" fg:w="1"/><text x="99.6913%" y="399.50"></text></g><g><title>zvariant::signature::Signature::slice (1 samples, 0.56%)</title><rect x="99.4413%" y="373" width="0.5587%" height="15" fill="rgb(247,86,24)" fg:x="178" fg:w="1"/><text x="99.6913%" y="383.50"></text></g></svg></svg>