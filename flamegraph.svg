<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="208"><g><title>&lt;mausam::app::IP_API_URL as core::ops::deref::Deref&gt;::deref::__stability::LAZY (1 samples, 0.48%)</title><rect x="0.0000%" y="581" width="0.4808%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.48%)</title><rect x="0.0000%" y="565" width="0.4808%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.48%)</title><rect x="0.4808%" y="565" width="0.4808%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.7308%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="0.4808%" y="581" width="0.9615%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.7308%" y="591.50"></text></g><g><title>syscall (1 samples, 0.48%)</title><rect x="0.9615%" y="565" width="0.4808%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="1.2115%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::get (4 samples, 1.92%)</title><rect x="2.4038%" y="469" width="1.9231%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="4"/><text x="2.6538%" y="479.50">a..</text></g><g><title>&lt;async_lock::once_cell::Blocking as async_lock::once_cell::Strategy&gt;::poll (4 samples, 1.92%)</title><rect x="2.4038%" y="453" width="1.9231%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="4"/><text x="2.6538%" y="463.50">&lt;..</text></g><g><title>syscall (4 samples, 1.92%)</title><rect x="2.4038%" y="437" width="1.9231%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="4"/><text x="2.6538%" y="447.50">s..</text></g><g><title>async_io::reactor::Reactor::process_timers (1 samples, 0.48%)</title><rect x="4.8077%" y="453" width="0.4808%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="1"/><text x="5.0577%" y="463.50"></text></g><g><title>async-io (17 samples, 8.17%)</title><rect x="0.0000%" y="597" width="8.1731%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="17"/><text x="0.2500%" y="607.50">async-io</text></g><g><title>__clone3 (14 samples, 6.73%)</title><rect x="1.4423%" y="581" width="6.7308%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="14"/><text x="1.6923%" y="591.50">__clone3</text></g><g><title>start_thread (13 samples, 6.25%)</title><rect x="1.9231%" y="565" width="6.2500%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="13"/><text x="2.1731%" y="575.50">start_th..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 6.25%)</title><rect x="1.9231%" y="549" width="6.2500%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="13"/><text x="2.1731%" y="559.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 6.25%)</title><rect x="1.9231%" y="533" width="6.2500%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="13"/><text x="2.1731%" y="543.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 6.25%)</title><rect x="1.9231%" y="517" width="6.2500%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="13"/><text x="2.1731%" y="527.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 6.25%)</title><rect x="1.9231%" y="501" width="6.2500%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="13"/><text x="2.1731%" y="511.50">core::op..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 5.77%)</title><rect x="2.4038%" y="485" width="5.7692%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="12"/><text x="2.6538%" y="495.50">std::sy..</text></g><g><title>async_io::reactor::ReactorLock::react (8 samples, 3.85%)</title><rect x="4.3269%" y="469" width="3.8462%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="8"/><text x="4.5769%" y="479.50">asyn..</text></g><g><title>epoll_wait (6 samples, 2.88%)</title><rect x="5.2885%" y="453" width="2.8846%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="6"/><text x="5.5385%" y="463.50">ep..</text></g><g><title>OPENSSL_strcasecmp (1 samples, 0.48%)</title><rect x="8.1731%" y="581" width="0.4808%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="1"/><text x="8.4231%" y="591.50"></text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="8.6538%" y="581" width="1.9231%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="4"/><text x="8.9038%" y="591.50">[..</text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.48%)</title><rect x="10.0962%" y="565" width="0.4808%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="1"/><text x="10.3462%" y="575.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (3 samples, 1.44%)</title><rect x="10.5769%" y="277" width="1.4423%" height="15" fill="rgb(221,5,38)" fg:x="22" fg:w="3"/><text x="10.8269%" y="287.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (3 samples, 1.44%)</title><rect x="10.5769%" y="261" width="1.4423%" height="15" fill="rgb(247,18,42)" fg:x="22" fg:w="3"/><text x="10.8269%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.5] (3 samples, 1.44%)</title><rect x="10.5769%" y="245" width="1.4423%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="3"/><text x="10.8269%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.5] (3 samples, 1.44%)</title><rect x="10.5769%" y="229" width="1.4423%" height="15" fill="rgb(249,31,29)" fg:x="22" fg:w="3"/><text x="10.8269%" y="239.50"></text></g><g><title>__libc_start_call_main (4 samples, 1.92%)</title><rect x="10.5769%" y="581" width="1.9231%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="4"/><text x="10.8269%" y="591.50">_..</text></g><g><title>main (4 samples, 1.92%)</title><rect x="10.5769%" y="565" width="1.9231%" height="15" fill="rgb(238,160,17)" fg:x="22" fg:w="4"/><text x="10.8269%" y="575.50">m..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 1.92%)</title><rect x="10.5769%" y="549" width="1.9231%" height="15" fill="rgb(214,148,48)" fg:x="22" fg:w="4"/><text x="10.8269%" y="559.50">s..</text></g><g><title>mausam::main (4 samples, 1.92%)</title><rect x="10.5769%" y="533" width="1.9231%" height="15" fill="rgb(232,36,49)" fg:x="22" fg:w="4"/><text x="10.8269%" y="543.50">m..</text></g><g><title>mausam::main::{{closure}} (4 samples, 1.92%)</title><rect x="10.5769%" y="517" width="1.9231%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="4"/><text x="10.8269%" y="527.50">m..</text></g><g><title>mausam::app::run::{{closure}} (4 samples, 1.92%)</title><rect x="10.5769%" y="501" width="1.9231%" height="15" fill="rgb(229,88,8)" fg:x="22" fg:w="4"/><text x="10.8269%" y="511.50">m..</text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (4 samples, 1.92%)</title><rect x="10.5769%" y="485" width="1.9231%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="4"/><text x="10.8269%" y="495.50">m..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (4 samples, 1.92%)</title><rect x="10.5769%" y="469" width="1.9231%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="4"/><text x="10.8269%" y="479.50">r..</text></g><g><title>X509_STORE_set_default_paths_ex (4 samples, 1.92%)</title><rect x="10.5769%" y="453" width="1.9231%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="4"/><text x="10.8269%" y="463.50">X..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="437" width="1.9231%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="4"/><text x="10.8269%" y="447.50">[..</text></g><g><title>X509_load_cert_crl_file_ex (4 samples, 1.92%)</title><rect x="10.5769%" y="421" width="1.9231%" height="15" fill="rgb(226,3,54)" fg:x="22" fg:w="4"/><text x="10.8269%" y="431.50">X..</text></g><g><title>PEM_X509_INFO_read_bio_ex (4 samples, 1.92%)</title><rect x="10.5769%" y="405" width="1.9231%" height="15" fill="rgb(245,192,40)" fg:x="22" fg:w="4"/><text x="10.8269%" y="415.50">P..</text></g><g><title>ASN1_item_d2i_ex (4 samples, 1.92%)</title><rect x="10.5769%" y="389" width="1.9231%" height="15" fill="rgb(238,167,29)" fg:x="22" fg:w="4"/><text x="10.8269%" y="399.50">A..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="373" width="1.9231%" height="15" fill="rgb(232,182,51)" fg:x="22" fg:w="4"/><text x="10.8269%" y="383.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="357" width="1.9231%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="4"/><text x="10.8269%" y="367.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="341" width="1.9231%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="4"/><text x="10.8269%" y="351.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="325" width="1.9231%" height="15" fill="rgb(235,93,37)" fg:x="22" fg:w="4"/><text x="10.8269%" y="335.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="309" width="1.9231%" height="15" fill="rgb(213,116,39)" fg:x="22" fg:w="4"/><text x="10.8269%" y="319.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="10.5769%" y="293" width="1.9231%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="4"/><text x="10.8269%" y="303.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="12.0192%" y="277" width="0.4808%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="1"/><text x="12.2692%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="12.0192%" y="261" width="0.4808%" height="15" fill="rgb(218,138,4)" fg:x="25" fg:w="1"/><text x="12.2692%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="12.0192%" y="245" width="0.4808%" height="15" fill="rgb(250,191,14)" fg:x="25" fg:w="1"/><text x="12.2692%" y="255.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.48%)</title><rect x="12.0192%" y="229" width="0.4808%" height="15" fill="rgb(239,60,40)" fg:x="25" fg:w="1"/><text x="12.2692%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="12.0192%" y="213" width="0.4808%" height="15" fill="rgb(206,27,48)" fg:x="25" fg:w="1"/><text x="12.2692%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="12.0192%" y="197" width="0.4808%" height="15" fill="rgb(225,35,8)" fg:x="25" fg:w="1"/><text x="12.2692%" y="207.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.48%)</title><rect x="12.5000%" y="181" width="0.4808%" height="15" fill="rgb(250,213,24)" fg:x="26" fg:w="1"/><text x="12.7500%" y="191.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.48%)</title><rect x="12.5000%" y="165" width="0.4808%" height="15" fill="rgb(247,123,22)" fg:x="26" fg:w="1"/><text x="12.7500%" y="175.50"></text></g><g><title>__libc_start_main_alias_2 (5 samples, 2.40%)</title><rect x="12.5000%" y="581" width="2.4038%" height="15" fill="rgb(231,138,38)" fg:x="26" fg:w="5"/><text x="12.7500%" y="591.50">__..</text></g><g><title>__libc_start_call_main (5 samples, 2.40%)</title><rect x="12.5000%" y="565" width="2.4038%" height="15" fill="rgb(231,145,46)" fg:x="26" fg:w="5"/><text x="12.7500%" y="575.50">__..</text></g><g><title>main (5 samples, 2.40%)</title><rect x="12.5000%" y="549" width="2.4038%" height="15" fill="rgb(251,118,11)" fg:x="26" fg:w="5"/><text x="12.7500%" y="559.50">ma..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 2.40%)</title><rect x="12.5000%" y="533" width="2.4038%" height="15" fill="rgb(217,147,25)" fg:x="26" fg:w="5"/><text x="12.7500%" y="543.50">st..</text></g><g><title>mausam::main (5 samples, 2.40%)</title><rect x="12.5000%" y="517" width="2.4038%" height="15" fill="rgb(247,81,37)" fg:x="26" fg:w="5"/><text x="12.7500%" y="527.50">ma..</text></g><g><title>mausam::main::{{closure}} (5 samples, 2.40%)</title><rect x="12.5000%" y="501" width="2.4038%" height="15" fill="rgb(209,12,38)" fg:x="26" fg:w="5"/><text x="12.7500%" y="511.50">ma..</text></g><g><title>mausam::app::run::{{closure}} (5 samples, 2.40%)</title><rect x="12.5000%" y="485" width="2.4038%" height="15" fill="rgb(227,1,9)" fg:x="26" fg:w="5"/><text x="12.7500%" y="495.50">ma..</text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (5 samples, 2.40%)</title><rect x="12.5000%" y="469" width="2.4038%" height="15" fill="rgb(248,47,43)" fg:x="26" fg:w="5"/><text x="12.7500%" y="479.50">ma..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (5 samples, 2.40%)</title><rect x="12.5000%" y="453" width="2.4038%" height="15" fill="rgb(221,10,30)" fg:x="26" fg:w="5"/><text x="12.7500%" y="463.50">re..</text></g><g><title>X509_STORE_set_default_paths_ex (5 samples, 2.40%)</title><rect x="12.5000%" y="437" width="2.4038%" height="15" fill="rgb(210,229,1)" fg:x="26" fg:w="5"/><text x="12.7500%" y="447.50">X5..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="421" width="2.4038%" height="15" fill="rgb(222,148,37)" fg:x="26" fg:w="5"/><text x="12.7500%" y="431.50">[l..</text></g><g><title>X509_load_cert_crl_file_ex (5 samples, 2.40%)</title><rect x="12.5000%" y="405" width="2.4038%" height="15" fill="rgb(234,67,33)" fg:x="26" fg:w="5"/><text x="12.7500%" y="415.50">X5..</text></g><g><title>PEM_X509_INFO_read_bio_ex (5 samples, 2.40%)</title><rect x="12.5000%" y="389" width="2.4038%" height="15" fill="rgb(247,98,35)" fg:x="26" fg:w="5"/><text x="12.7500%" y="399.50">PE..</text></g><g><title>ASN1_item_d2i_ex (5 samples, 2.40%)</title><rect x="12.5000%" y="373" width="2.4038%" height="15" fill="rgb(247,138,52)" fg:x="26" fg:w="5"/><text x="12.7500%" y="383.50">AS..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="357" width="2.4038%" height="15" fill="rgb(213,79,30)" fg:x="26" fg:w="5"/><text x="12.7500%" y="367.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="341" width="2.4038%" height="15" fill="rgb(246,177,23)" fg:x="26" fg:w="5"/><text x="12.7500%" y="351.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="325" width="2.4038%" height="15" fill="rgb(230,62,27)" fg:x="26" fg:w="5"/><text x="12.7500%" y="335.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="309" width="2.4038%" height="15" fill="rgb(216,154,8)" fg:x="26" fg:w="5"/><text x="12.7500%" y="319.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="293" width="2.4038%" height="15" fill="rgb(244,35,45)" fg:x="26" fg:w="5"/><text x="12.7500%" y="303.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="277" width="2.4038%" height="15" fill="rgb(251,115,12)" fg:x="26" fg:w="5"/><text x="12.7500%" y="287.50">[l..</text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (5 samples, 2.40%)</title><rect x="12.5000%" y="261" width="2.4038%" height="15" fill="rgb(240,54,50)" fg:x="26" fg:w="5"/><text x="12.7500%" y="271.50">OS..</text></g><g><title>OSSL_DECODER_CTX_add_extra (5 samples, 2.40%)</title><rect x="12.5000%" y="245" width="2.4038%" height="15" fill="rgb(233,84,52)" fg:x="26" fg:w="5"/><text x="12.7500%" y="255.50">OS..</text></g><g><title>OSSL_DECODER_is_a (5 samples, 2.40%)</title><rect x="12.5000%" y="229" width="2.4038%" height="15" fill="rgb(207,117,47)" fg:x="26" fg:w="5"/><text x="12.7500%" y="239.50">OS..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="213" width="2.4038%" height="15" fill="rgb(249,43,39)" fg:x="26" fg:w="5"/><text x="12.7500%" y="223.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="12.5000%" y="197" width="2.4038%" height="15" fill="rgb(209,38,44)" fg:x="26" fg:w="5"/><text x="12.7500%" y="207.50">[l..</text></g><g><title>OPENSSL_LH_retrieve (4 samples, 1.92%)</title><rect x="12.9808%" y="181" width="1.9231%" height="15" fill="rgb(236,212,23)" fg:x="27" fg:w="4"/><text x="13.2308%" y="191.50">O..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="12.9808%" y="165" width="1.9231%" height="15" fill="rgb(242,79,21)" fg:x="27" fg:w="4"/><text x="13.2308%" y="175.50">[..</text></g><g><title>__rust_probestack (1 samples, 0.48%)</title><rect x="14.9038%" y="581" width="0.4808%" height="15" fill="rgb(211,96,35)" fg:x="31" fg:w="1"/><text x="15.1538%" y="591.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.48%)</title><rect x="17.7885%" y="469" width="0.4808%" height="15" fill="rgb(253,215,40)" fg:x="37" fg:w="1"/><text x="18.0385%" y="479.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.48%)</title><rect x="17.7885%" y="453" width="0.4808%" height="15" fill="rgb(211,81,21)" fg:x="37" fg:w="1"/><text x="18.0385%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.48%)</title><rect x="17.7885%" y="437" width="0.4808%" height="15" fill="rgb(208,190,38)" fg:x="37" fg:w="1"/><text x="18.0385%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.48%)</title><rect x="17.7885%" y="421" width="0.4808%" height="15" fill="rgb(235,213,38)" fg:x="37" fg:w="1"/><text x="18.0385%" y="431.50"></text></g><g><title>__realloc (1 samples, 0.48%)</title><rect x="17.7885%" y="405" width="0.4808%" height="15" fill="rgb(237,122,38)" fg:x="37" fg:w="1"/><text x="18.0385%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.48%)</title><rect x="17.7885%" y="389" width="0.4808%" height="15" fill="rgb(244,218,35)" fg:x="37" fg:w="1"/><text x="18.0385%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.48%)</title><rect x="17.7885%" y="373" width="0.4808%" height="15" fill="rgb(240,68,47)" fg:x="37" fg:w="1"/><text x="18.0385%" y="383.50"></text></g><g><title>malloc_consolidate (1 samples, 0.48%)</title><rect x="17.7885%" y="357" width="0.4808%" height="15" fill="rgb(210,16,53)" fg:x="37" fg:w="1"/><text x="18.0385%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.48%)</title><rect x="17.7885%" y="341" width="0.4808%" height="15" fill="rgb(235,124,12)" fg:x="37" fg:w="1"/><text x="18.0385%" y="351.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (1 samples, 0.48%)</title><rect x="18.2692%" y="245" width="0.4808%" height="15" fill="rgb(224,169,11)" fg:x="38" fg:w="1"/><text x="18.5192%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="18.2692%" y="229" width="0.4808%" height="15" fill="rgb(250,166,2)" fg:x="38" fg:w="1"/><text x="18.5192%" y="239.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.48%)</title><rect x="18.2692%" y="213" width="0.4808%" height="15" fill="rgb(242,216,29)" fg:x="38" fg:w="1"/><text x="18.5192%" y="223.50"></text></g><g><title>X509_STORE_set_default_paths_ex (2 samples, 0.96%)</title><rect x="18.2692%" y="421" width="0.9615%" height="15" fill="rgb(230,116,27)" fg:x="38" fg:w="2"/><text x="18.5192%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="405" width="0.9615%" height="15" fill="rgb(228,99,48)" fg:x="38" fg:w="2"/><text x="18.5192%" y="415.50"></text></g><g><title>X509_load_cert_crl_file_ex (2 samples, 0.96%)</title><rect x="18.2692%" y="389" width="0.9615%" height="15" fill="rgb(253,11,6)" fg:x="38" fg:w="2"/><text x="18.5192%" y="399.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (2 samples, 0.96%)</title><rect x="18.2692%" y="373" width="0.9615%" height="15" fill="rgb(247,143,39)" fg:x="38" fg:w="2"/><text x="18.5192%" y="383.50"></text></g><g><title>ASN1_item_d2i_ex (2 samples, 0.96%)</title><rect x="18.2692%" y="357" width="0.9615%" height="15" fill="rgb(236,97,10)" fg:x="38" fg:w="2"/><text x="18.5192%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="341" width="0.9615%" height="15" fill="rgb(233,208,19)" fg:x="38" fg:w="2"/><text x="18.5192%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="325" width="0.9615%" height="15" fill="rgb(216,164,2)" fg:x="38" fg:w="2"/><text x="18.5192%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="309" width="0.9615%" height="15" fill="rgb(220,129,5)" fg:x="38" fg:w="2"/><text x="18.5192%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="293" width="0.9615%" height="15" fill="rgb(242,17,10)" fg:x="38" fg:w="2"/><text x="18.5192%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="277" width="0.9615%" height="15" fill="rgb(242,107,0)" fg:x="38" fg:w="2"/><text x="18.5192%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="18.2692%" y="261" width="0.9615%" height="15" fill="rgb(251,28,31)" fg:x="38" fg:w="2"/><text x="18.5192%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="18.7500%" y="245" width="0.4808%" height="15" fill="rgb(233,223,10)" fg:x="39" fg:w="1"/><text x="19.0000%" y="255.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.48%)</title><rect x="18.7500%" y="229" width="0.4808%" height="15" fill="rgb(215,21,27)" fg:x="39" fg:w="1"/><text x="19.0000%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="18.7500%" y="213" width="0.4808%" height="15" fill="rgb(232,23,21)" fg:x="39" fg:w="1"/><text x="19.0000%" y="223.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.48%)</title><rect x="18.7500%" y="197" width="0.4808%" height="15" fill="rgb(244,5,23)" fg:x="39" fg:w="1"/><text x="19.0000%" y="207.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (3 samples, 1.44%)</title><rect x="18.2692%" y="453" width="1.4423%" height="15" fill="rgb(226,81,46)" fg:x="38" fg:w="3"/><text x="18.5192%" y="463.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (3 samples, 1.44%)</title><rect x="18.2692%" y="437" width="1.4423%" height="15" fill="rgb(247,70,30)" fg:x="38" fg:w="3"/><text x="18.5192%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="19.2308%" y="421" width="0.4808%" height="15" fill="rgb(212,68,19)" fg:x="40" fg:w="1"/><text x="19.4808%" y="431.50"></text></g><g><title>SSL_CTX_new_ex (1 samples, 0.48%)</title><rect x="19.7115%" y="421" width="0.4808%" height="15" fill="rgb(240,187,13)" fg:x="41" fg:w="1"/><text x="19.9615%" y="431.50"></text></g><g><title>[libssl.so.3.0.5] (1 samples, 0.48%)</title><rect x="19.7115%" y="405" width="0.4808%" height="15" fill="rgb(223,113,26)" fg:x="41" fg:w="1"/><text x="19.9615%" y="415.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.48%)</title><rect x="19.7115%" y="389" width="0.4808%" height="15" fill="rgb(206,192,2)" fg:x="41" fg:w="1"/><text x="19.9615%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="19.7115%" y="373" width="0.4808%" height="15" fill="rgb(241,108,4)" fg:x="41" fg:w="1"/><text x="19.9615%" y="383.50"></text></g><g><title>ERR_set_error (1 samples, 0.48%)</title><rect x="19.7115%" y="357" width="0.4808%" height="15" fill="rgb(247,173,49)" fg:x="41" fg:w="1"/><text x="19.9615%" y="367.50"></text></g><g><title>ERR_vset_error (1 samples, 0.48%)</title><rect x="19.7115%" y="341" width="0.4808%" height="15" fill="rgb(224,114,35)" fg:x="41" fg:w="1"/><text x="19.9615%" y="351.50"></text></g><g><title>__realloc (1 samples, 0.48%)</title><rect x="19.7115%" y="325" width="0.4808%" height="15" fill="rgb(245,159,27)" fg:x="41" fg:w="1"/><text x="19.9615%" y="335.50"></text></g><g><title>_int_realloc (1 samples, 0.48%)</title><rect x="19.7115%" y="309" width="0.4808%" height="15" fill="rgb(245,172,44)" fg:x="41" fg:w="1"/><text x="19.9615%" y="319.50"></text></g><g><title>CRYPTO_THREAD_read_lock (3 samples, 1.44%)</title><rect x="20.1923%" y="165" width="1.4423%" height="15" fill="rgb(236,23,11)" fg:x="42" fg:w="3"/><text x="20.4423%" y="175.50"></text></g><g><title>___pthread_rwlock_rdlock (3 samples, 1.44%)</title><rect x="20.1923%" y="149" width="1.4423%" height="15" fill="rgb(205,117,38)" fg:x="42" fg:w="3"/><text x="20.4423%" y="159.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.48%)</title><rect x="21.6346%" y="165" width="0.4808%" height="15" fill="rgb(237,72,25)" fg:x="45" fg:w="1"/><text x="21.8846%" y="175.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.48%)</title><rect x="21.6346%" y="149" width="0.4808%" height="15" fill="rgb(244,70,9)" fg:x="45" fg:w="1"/><text x="21.8846%" y="159.50"></text></g><g><title>CRYPTO_strndup (1 samples, 0.48%)</title><rect x="22.1154%" y="165" width="0.4808%" height="15" fill="rgb(217,125,39)" fg:x="46" fg:w="1"/><text x="22.3654%" y="175.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="22.1154%" y="149" width="0.4808%" height="15" fill="rgb(235,36,10)" fg:x="46" fg:w="1"/><text x="22.3654%" y="159.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (9 samples, 4.33%)</title><rect x="20.1923%" y="229" width="4.3269%" height="15" fill="rgb(251,123,47)" fg:x="42" fg:w="9"/><text x="20.4423%" y="239.50">OSSL_..</text></g><g><title>OSSL_DECODER_is_a (9 samples, 4.33%)</title><rect x="20.1923%" y="213" width="4.3269%" height="15" fill="rgb(221,13,13)" fg:x="42" fg:w="9"/><text x="20.4423%" y="223.50">OSSL_..</text></g><g><title>[libcrypto.so.3.0.5] (9 samples, 4.33%)</title><rect x="20.1923%" y="197" width="4.3269%" height="15" fill="rgb(238,131,9)" fg:x="42" fg:w="9"/><text x="20.4423%" y="207.50">[libc..</text></g><g><title>[libcrypto.so.3.0.5] (9 samples, 4.33%)</title><rect x="20.1923%" y="181" width="4.3269%" height="15" fill="rgb(211,50,8)" fg:x="42" fg:w="9"/><text x="20.4423%" y="191.50">[libc..</text></g><g><title>OPENSSL_LH_retrieve (4 samples, 1.92%)</title><rect x="22.5962%" y="165" width="1.9231%" height="15" fill="rgb(245,182,24)" fg:x="47" fg:w="4"/><text x="22.8462%" y="175.50">O..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="22.5962%" y="149" width="1.9231%" height="15" fill="rgb(242,14,37)" fg:x="47" fg:w="4"/><text x="22.8462%" y="159.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="23.5577%" y="133" width="0.9615%" height="15" fill="rgb(246,228,12)" fg:x="49" fg:w="2"/><text x="23.8077%" y="143.50"></text></g><g><title>OSSL_DECODER_is_a (1 samples, 0.48%)</title><rect x="24.5192%" y="165" width="0.4808%" height="15" fill="rgb(213,55,15)" fg:x="51" fg:w="1"/><text x="24.7692%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="24.5192%" y="149" width="0.4808%" height="15" fill="rgb(209,9,3)" fg:x="51" fg:w="1"/><text x="24.7692%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="24.5192%" y="133" width="0.4808%" height="15" fill="rgb(230,59,30)" fg:x="51" fg:w="1"/><text x="24.7692%" y="143.50"></text></g><g><title>CRYPTO_strndup (1 samples, 0.48%)</title><rect x="24.5192%" y="117" width="0.4808%" height="15" fill="rgb(209,121,21)" fg:x="51" fg:w="1"/><text x="24.7692%" y="127.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (11 samples, 5.29%)</title><rect x="20.1923%" y="245" width="5.2885%" height="15" fill="rgb(220,109,13)" fg:x="42" fg:w="11"/><text x="20.4423%" y="255.50">OSSL_D..</text></g><g><title>OSSL_DECODER_do_all_provided (2 samples, 0.96%)</title><rect x="24.5192%" y="229" width="0.9615%" height="15" fill="rgb(232,18,1)" fg:x="51" fg:w="2"/><text x="24.7692%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="24.5192%" y="213" width="0.9615%" height="15" fill="rgb(215,41,42)" fg:x="51" fg:w="2"/><text x="24.7692%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="24.5192%" y="197" width="0.9615%" height="15" fill="rgb(224,123,36)" fg:x="51" fg:w="2"/><text x="24.7692%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="24.5192%" y="181" width="0.9615%" height="15" fill="rgb(240,125,3)" fg:x="51" fg:w="2"/><text x="24.7692%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="25.0000%" y="165" width="0.4808%" height="15" fill="rgb(205,98,50)" fg:x="52" fg:w="1"/><text x="25.2500%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="25.0000%" y="149" width="0.4808%" height="15" fill="rgb(205,185,37)" fg:x="52" fg:w="1"/><text x="25.2500%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="25.0000%" y="133" width="0.4808%" height="15" fill="rgb(238,207,15)" fg:x="52" fg:w="1"/><text x="25.2500%" y="143.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.48%)</title><rect x="25.0000%" y="117" width="0.4808%" height="15" fill="rgb(213,199,42)" fg:x="52" fg:w="1"/><text x="25.2500%" y="127.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.48%)</title><rect x="25.0000%" y="101" width="0.4808%" height="15" fill="rgb(235,201,11)" fg:x="52" fg:w="1"/><text x="25.2500%" y="111.50"></text></g><g><title>CRYPTO_THREAD_lock_new (1 samples, 0.48%)</title><rect x="25.4808%" y="149" width="0.4808%" height="15" fill="rgb(207,46,11)" fg:x="53" fg:w="1"/><text x="25.7308%" y="159.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.48%)</title><rect x="25.4808%" y="133" width="0.4808%" height="15" fill="rgb(241,35,35)" fg:x="53" fg:w="1"/><text x="25.7308%" y="143.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="25.4808%" y="117" width="0.4808%" height="15" fill="rgb(243,32,47)" fg:x="53" fg:w="1"/><text x="25.7308%" y="127.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.48%)</title><rect x="25.9615%" y="69" width="0.4808%" height="15" fill="rgb(247,202,23)" fg:x="54" fg:w="1"/><text x="26.2115%" y="79.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="25.9615%" y="133" width="0.9615%" height="15" fill="rgb(219,102,11)" fg:x="54" fg:w="2"/><text x="26.2115%" y="143.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="25.9615%" y="117" width="0.9615%" height="15" fill="rgb(243,110,44)" fg:x="54" fg:w="2"/><text x="26.2115%" y="127.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (2 samples, 0.96%)</title><rect x="25.9615%" y="101" width="0.9615%" height="15" fill="rgb(222,74,54)" fg:x="54" fg:w="2"/><text x="26.2115%" y="111.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="25.9615%" y="85" width="0.9615%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="2"/><text x="26.2115%" y="95.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="26.4423%" y="69" width="0.4808%" height="15" fill="rgb(226,22,26)" fg:x="55" fg:w="1"/><text x="26.6923%" y="79.50"></text></g><g><title>_int_malloc (1 samples, 0.48%)</title><rect x="26.4423%" y="53" width="0.4808%" height="15" fill="rgb(217,163,10)" fg:x="55" fg:w="1"/><text x="26.6923%" y="63.50"></text></g><g><title>malloc_consolidate (1 samples, 0.48%)</title><rect x="26.4423%" y="37" width="0.4808%" height="15" fill="rgb(213,25,53)" fg:x="55" fg:w="1"/><text x="26.6923%" y="47.50"></text></g><g><title>ASN1_item_d2i_ex (15 samples, 7.21%)</title><rect x="20.1923%" y="357" width="7.2115%" height="15" fill="rgb(252,105,26)" fg:x="42" fg:w="15"/><text x="20.4423%" y="367.50">ASN1_item_..</text></g><g><title>[libcrypto.so.3.0.5] (15 samples, 7.21%)</title><rect x="20.1923%" y="341" width="7.2115%" height="15" fill="rgb(220,39,43)" fg:x="42" fg:w="15"/><text x="20.4423%" y="351.50">[libcrypto..</text></g><g><title>[libcrypto.so.3.0.5] (15 samples, 7.21%)</title><rect x="20.1923%" y="325" width="7.2115%" height="15" fill="rgb(229,68,48)" fg:x="42" fg:w="15"/><text x="20.4423%" y="335.50">[libcrypto..</text></g><g><title>[libcrypto.so.3.0.5] (15 samples, 7.21%)</title><rect x="20.1923%" y="309" width="7.2115%" height="15" fill="rgb(252,8,32)" fg:x="42" fg:w="15"/><text x="20.4423%" y="319.50">[libcrypto..</text></g><g><title>[libcrypto.so.3.0.5] (15 samples, 7.21%)</title><rect x="20.1923%" y="293" width="7.2115%" height="15" fill="rgb(223,20,43)" fg:x="42" fg:w="15"/><text x="20.4423%" y="303.50">[libcrypto..</text></g><g><title>[libcrypto.so.3.0.5] (15 samples, 7.21%)</title><rect x="20.1923%" y="277" width="7.2115%" height="15" fill="rgb(229,81,49)" fg:x="42" fg:w="15"/><text x="20.4423%" y="287.50">[libcrypto..</text></g><g><title>[libcrypto.so.3.0.5] (15 samples, 7.21%)</title><rect x="20.1923%" y="261" width="7.2115%" height="15" fill="rgb(236,28,36)" fg:x="42" fg:w="15"/><text x="20.4423%" y="271.50">[libcrypto..</text></g><g><title>OSSL_DECODER_from_data (4 samples, 1.92%)</title><rect x="25.4808%" y="245" width="1.9231%" height="15" fill="rgb(249,185,26)" fg:x="53" fg:w="4"/><text x="25.7308%" y="255.50">O..</text></g><g><title>OSSL_DECODER_from_bio (4 samples, 1.92%)</title><rect x="25.4808%" y="229" width="1.9231%" height="15" fill="rgb(249,174,33)" fg:x="53" fg:w="4"/><text x="25.7308%" y="239.50">O..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="25.4808%" y="213" width="1.9231%" height="15" fill="rgb(233,201,37)" fg:x="53" fg:w="4"/><text x="25.7308%" y="223.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="25.4808%" y="197" width="1.9231%" height="15" fill="rgb(221,78,26)" fg:x="53" fg:w="4"/><text x="25.7308%" y="207.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="25.4808%" y="181" width="1.9231%" height="15" fill="rgb(250,127,30)" fg:x="53" fg:w="4"/><text x="25.7308%" y="191.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="25.4808%" y="165" width="1.9231%" height="15" fill="rgb(230,49,44)" fg:x="53" fg:w="4"/><text x="25.7308%" y="175.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (3 samples, 1.44%)</title><rect x="25.9615%" y="149" width="1.4423%" height="15" fill="rgb(229,67,23)" fg:x="54" fg:w="3"/><text x="26.2115%" y="159.50"></text></g><g><title>asn1_d2i_read_bio (1 samples, 0.48%)</title><rect x="26.9231%" y="133" width="0.4808%" height="15" fill="rgb(249,83,47)" fg:x="56" fg:w="1"/><text x="27.1731%" y="143.50"></text></g><g><title>ASN1_get_object (1 samples, 0.48%)</title><rect x="26.9231%" y="117" width="0.4808%" height="15" fill="rgb(215,43,3)" fg:x="56" fg:w="1"/><text x="27.1731%" y="127.50"></text></g><g><title>ERR_new (1 samples, 0.48%)</title><rect x="26.9231%" y="101" width="0.4808%" height="15" fill="rgb(238,154,13)" fg:x="56" fg:w="1"/><text x="27.1731%" y="111.50"></text></g><g><title>BIO_gets (1 samples, 0.48%)</title><rect x="27.4038%" y="341" width="0.4808%" height="15" fill="rgb(219,56,2)" fg:x="57" fg:w="1"/><text x="27.6538%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="27.4038%" y="325" width="0.4808%" height="15" fill="rgb(233,0,4)" fg:x="57" fg:w="1"/><text x="27.6538%" y="335.50"></text></g><g><title>fgets (1 samples, 0.48%)</title><rect x="27.4038%" y="309" width="0.4808%" height="15" fill="rgb(235,30,7)" fg:x="57" fg:w="1"/><text x="27.6538%" y="319.50"></text></g><g><title>BIO_puts (1 samples, 0.48%)</title><rect x="27.8846%" y="341" width="0.4808%" height="15" fill="rgb(250,79,13)" fg:x="58" fg:w="1"/><text x="28.1346%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="27.8846%" y="325" width="0.4808%" height="15" fill="rgb(211,146,34)" fg:x="58" fg:w="1"/><text x="28.1346%" y="335.50"></text></g><g><title>BUF_MEM_grow_clean (1 samples, 0.48%)</title><rect x="27.8846%" y="309" width="0.4808%" height="15" fill="rgb(228,22,38)" fg:x="58" fg:w="1"/><text x="28.1346%" y="319.50"></text></g><g><title>PEM_read_bio_ex (3 samples, 1.44%)</title><rect x="27.4038%" y="357" width="1.4423%" height="15" fill="rgb(235,168,5)" fg:x="57" fg:w="3"/><text x="27.6538%" y="367.50"></text></g><g><title>EVP_DecodeUpdate (1 samples, 0.48%)</title><rect x="28.3654%" y="341" width="0.4808%" height="15" fill="rgb(221,155,16)" fg:x="59" fg:w="1"/><text x="28.6154%" y="351.50"></text></g><g><title>X509_STORE_set_default_paths_ex (19 samples, 9.13%)</title><rect x="20.1923%" y="421" width="9.1346%" height="15" fill="rgb(215,215,53)" fg:x="42" fg:w="19"/><text x="20.4423%" y="431.50">X509_STORE_se..</text></g><g><title>[libcrypto.so.3.0.5] (19 samples, 9.13%)</title><rect x="20.1923%" y="405" width="9.1346%" height="15" fill="rgb(223,4,10)" fg:x="42" fg:w="19"/><text x="20.4423%" y="415.50">[libcrypto.so..</text></g><g><title>X509_load_cert_crl_file_ex (19 samples, 9.13%)</title><rect x="20.1923%" y="389" width="9.1346%" height="15" fill="rgb(234,103,6)" fg:x="42" fg:w="19"/><text x="20.4423%" y="399.50">X509_load_cer..</text></g><g><title>PEM_X509_INFO_read_bio_ex (19 samples, 9.13%)</title><rect x="20.1923%" y="373" width="9.1346%" height="15" fill="rgb(227,97,0)" fg:x="42" fg:w="19"/><text x="20.4423%" y="383.50">PEM_X509_INFO..</text></g><g><title>X509_new_ex (1 samples, 0.48%)</title><rect x="28.8462%" y="357" width="0.4808%" height="15" fill="rgb(234,150,53)" fg:x="60" fg:w="1"/><text x="29.0962%" y="367.50"></text></g><g><title>ASN1_item_new_ex (1 samples, 0.48%)</title><rect x="28.8462%" y="341" width="0.4808%" height="15" fill="rgb(228,201,54)" fg:x="60" fg:w="1"/><text x="29.0962%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="325" width="0.4808%" height="15" fill="rgb(222,22,37)" fg:x="60" fg:w="1"/><text x="29.0962%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="309" width="0.4808%" height="15" fill="rgb(237,53,32)" fg:x="60" fg:w="1"/><text x="29.0962%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="293" width="0.4808%" height="15" fill="rgb(233,25,53)" fg:x="60" fg:w="1"/><text x="29.0962%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="277" width="0.4808%" height="15" fill="rgb(210,40,34)" fg:x="60" fg:w="1"/><text x="29.0962%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="261" width="0.4808%" height="15" fill="rgb(241,220,44)" fg:x="60" fg:w="1"/><text x="29.0962%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="245" width="0.4808%" height="15" fill="rgb(235,28,35)" fg:x="60" fg:w="1"/><text x="29.0962%" y="255.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.48%)</title><rect x="28.8462%" y="229" width="0.4808%" height="15" fill="rgb(210,56,17)" fg:x="60" fg:w="1"/><text x="29.0962%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="28.8462%" y="213" width="0.4808%" height="15" fill="rgb(224,130,29)" fg:x="60" fg:w="1"/><text x="29.0962%" y="223.50"></text></g><g><title>mausam::main::{{closure}} (25 samples, 12.02%)</title><rect x="17.7885%" y="485" width="12.0192%" height="15" fill="rgb(235,212,8)" fg:x="37" fg:w="25"/><text x="18.0385%" y="495.50">mausam::main::{{cl..</text></g><g><title>mausam::app::run::{{closure}} (24 samples, 11.54%)</title><rect x="18.2692%" y="469" width="11.5385%" height="15" fill="rgb(223,33,50)" fg:x="38" fg:w="24"/><text x="18.5192%" y="479.50">mausam::app::run:..</text></g><g><title>std::sys_common::once::futex::Once::call (21 samples, 10.10%)</title><rect x="19.7115%" y="453" width="10.0962%" height="15" fill="rgb(219,149,13)" fg:x="41" fg:w="21"/><text x="19.9615%" y="463.50">std::sys_common..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (21 samples, 10.10%)</title><rect x="19.7115%" y="437" width="10.0962%" height="15" fill="rgb(250,156,29)" fg:x="41" fg:w="21"/><text x="19.9615%" y="447.50">reqwest::async_..</text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.48%)</title><rect x="29.3269%" y="421" width="0.4808%" height="15" fill="rgb(216,193,19)" fg:x="61" fg:w="1"/><text x="29.5769%" y="431.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.48%)</title><rect x="29.3269%" y="405" width="0.4808%" height="15" fill="rgb(216,135,14)" fg:x="61" fg:w="1"/><text x="29.5769%" y="415.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.48%)</title><rect x="29.3269%" y="389" width="0.4808%" height="15" fill="rgb(241,47,5)" fg:x="61" fg:w="1"/><text x="29.5769%" y="399.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.48%)</title><rect x="29.3269%" y="373" width="0.4808%" height="15" fill="rgb(233,42,35)" fg:x="61" fg:w="1"/><text x="29.5769%" y="383.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.48%)</title><rect x="29.3269%" y="357" width="0.4808%" height="15" fill="rgb(231,13,6)" fg:x="61" fg:w="1"/><text x="29.5769%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="29.3269%" y="341" width="0.4808%" height="15" fill="rgb(207,181,40)" fg:x="61" fg:w="1"/><text x="29.5769%" y="351.50"></text></g><g><title>CONF_modules_load_file_ex (1 samples, 0.48%)</title><rect x="29.3269%" y="325" width="0.4808%" height="15" fill="rgb(254,173,49)" fg:x="61" fg:w="1"/><text x="29.5769%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="29.3269%" y="309" width="0.4808%" height="15" fill="rgb(221,1,38)" fg:x="61" fg:w="1"/><text x="29.5769%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="29.3269%" y="293" width="0.4808%" height="15" fill="rgb(206,124,46)" fg:x="61" fg:w="1"/><text x="29.5769%" y="303.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.48%)</title><rect x="29.3269%" y="277" width="0.4808%" height="15" fill="rgb(249,21,11)" fg:x="61" fg:w="1"/><text x="29.5769%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="29.3269%" y="261" width="0.4808%" height="15" fill="rgb(222,201,40)" fg:x="61" fg:w="1"/><text x="29.5769%" y="271.50"></text></g><g><title>__libc_start_main_alias_2 (31 samples, 14.90%)</title><rect x="17.7885%" y="565" width="14.9038%" height="15" fill="rgb(235,61,29)" fg:x="37" fg:w="31"/><text x="18.0385%" y="575.50">__libc_start_main_alias..</text></g><g><title>__libc_start_call_main (31 samples, 14.90%)</title><rect x="17.7885%" y="549" width="14.9038%" height="15" fill="rgb(219,207,3)" fg:x="37" fg:w="31"/><text x="18.0385%" y="559.50">__libc_start_call_main</text></g><g><title>main (31 samples, 14.90%)</title><rect x="17.7885%" y="533" width="14.9038%" height="15" fill="rgb(222,56,46)" fg:x="37" fg:w="31"/><text x="18.0385%" y="543.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31 samples, 14.90%)</title><rect x="17.7885%" y="517" width="14.9038%" height="15" fill="rgb(239,76,54)" fg:x="37" fg:w="31"/><text x="18.0385%" y="527.50">std::sys_common::backtr..</text></g><g><title>mausam::main (31 samples, 14.90%)</title><rect x="17.7885%" y="501" width="14.9038%" height="15" fill="rgb(231,124,27)" fg:x="37" fg:w="31"/><text x="18.0385%" y="511.50">mausam::main</text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (6 samples, 2.88%)</title><rect x="29.8077%" y="485" width="2.8846%" height="15" fill="rgb(249,195,6)" fg:x="62" fg:w="6"/><text x="30.0577%" y="495.50">st..</text></g><g><title>__pthread_clockjoin_ex (6 samples, 2.88%)</title><rect x="29.8077%" y="469" width="2.8846%" height="15" fill="rgb(237,174,47)" fg:x="62" fg:w="6"/><text x="30.0577%" y="479.50">__..</text></g><g><title>__futex_abstimed_wait_common (6 samples, 2.88%)</title><rect x="29.8077%" y="453" width="2.8846%" height="15" fill="rgb(206,201,31)" fg:x="62" fg:w="6"/><text x="30.0577%" y="463.50">__..</text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.48%)</title><rect x="32.2115%" y="437" width="0.4808%" height="15" fill="rgb(231,57,52)" fg:x="67" fg:w="1"/><text x="32.4615%" y="447.50"></text></g><g><title>dl_main (1 samples, 0.48%)</title><rect x="32.6923%" y="517" width="0.4808%" height="15" fill="rgb(248,177,22)" fg:x="68" fg:w="1"/><text x="32.9423%" y="527.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.48%)</title><rect x="32.6923%" y="501" width="0.4808%" height="15" fill="rgb(215,211,37)" fg:x="68" fg:w="1"/><text x="32.9423%" y="511.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.48%)</title><rect x="32.6923%" y="485" width="0.4808%" height="15" fill="rgb(241,128,51)" fg:x="68" fg:w="1"/><text x="32.9423%" y="495.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.48%)</title><rect x="32.6923%" y="469" width="0.4808%" height="15" fill="rgb(227,165,31)" fg:x="68" fg:w="1"/><text x="32.9423%" y="479.50"></text></g><g><title>_start (38 samples, 18.27%)</title><rect x="15.3846%" y="581" width="18.2692%" height="15" fill="rgb(228,167,24)" fg:x="32" fg:w="38"/><text x="15.6346%" y="591.50">_start</text></g><g><title>_dl_start (2 samples, 0.96%)</title><rect x="32.6923%" y="565" width="0.9615%" height="15" fill="rgb(228,143,12)" fg:x="68" fg:w="2"/><text x="32.9423%" y="575.50"></text></g><g><title>_dl_start_final (2 samples, 0.96%)</title><rect x="32.6923%" y="549" width="0.9615%" height="15" fill="rgb(249,149,8)" fg:x="68" fg:w="2"/><text x="32.9423%" y="559.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.96%)</title><rect x="32.6923%" y="533" width="0.9615%" height="15" fill="rgb(243,35,44)" fg:x="68" fg:w="2"/><text x="32.9423%" y="543.50"></text></g><g><title>dl_platform_init (1 samples, 0.48%)</title><rect x="33.1731%" y="517" width="0.4808%" height="15" fill="rgb(246,89,9)" fg:x="69" fg:w="1"/><text x="33.4231%" y="527.50"></text></g><g><title>_dl_x86_init_cpu_features (1 samples, 0.48%)</title><rect x="33.1731%" y="501" width="0.4808%" height="15" fill="rgb(233,213,13)" fg:x="69" fg:w="1"/><text x="33.4231%" y="511.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.48%)</title><rect x="33.6538%" y="181" width="0.4808%" height="15" fill="rgb(233,141,41)" fg:x="70" fg:w="1"/><text x="33.9038%" y="191.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.48%)</title><rect x="33.6538%" y="165" width="0.4808%" height="15" fill="rgb(239,167,4)" fg:x="70" fg:w="1"/><text x="33.9038%" y="175.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.48%)</title><rect x="34.1346%" y="165" width="0.4808%" height="15" fill="rgb(209,217,16)" fg:x="71" fg:w="1"/><text x="34.3846%" y="175.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.48%)</title><rect x="34.1346%" y="149" width="0.4808%" height="15" fill="rgb(219,88,35)" fg:x="71" fg:w="1"/><text x="34.3846%" y="159.50"></text></g><g><title>OSSL_DECODER_is_a (4 samples, 1.92%)</title><rect x="33.6538%" y="213" width="1.9231%" height="15" fill="rgb(220,193,23)" fg:x="70" fg:w="4"/><text x="33.9038%" y="223.50">O..</text></g><g><title>[libcrypto.so.3.0.5] (4 samples, 1.92%)</title><rect x="33.6538%" y="197" width="1.9231%" height="15" fill="rgb(230,90,52)" fg:x="70" fg:w="4"/><text x="33.9038%" y="207.50">[..</text></g><g><title>[libcrypto.so.3.0.5] (3 samples, 1.44%)</title><rect x="34.1346%" y="181" width="1.4423%" height="15" fill="rgb(252,106,19)" fg:x="71" fg:w="3"/><text x="34.3846%" y="191.50"></text></g><g><title>OPENSSL_LH_retrieve (2 samples, 0.96%)</title><rect x="34.6154%" y="165" width="0.9615%" height="15" fill="rgb(206,74,20)" fg:x="72" fg:w="2"/><text x="34.8654%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="34.6154%" y="149" width="0.9615%" height="15" fill="rgb(230,138,44)" fg:x="72" fg:w="2"/><text x="34.8654%" y="159.50"></text></g><g><title>main (5 samples, 2.40%)</title><rect x="33.6538%" y="581" width="2.4038%" height="15" fill="rgb(235,182,43)" fg:x="70" fg:w="5"/><text x="33.9038%" y="591.50">ma..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 2.40%)</title><rect x="33.6538%" y="565" width="2.4038%" height="15" fill="rgb(242,16,51)" fg:x="70" fg:w="5"/><text x="33.9038%" y="575.50">st..</text></g><g><title>mausam::main (5 samples, 2.40%)</title><rect x="33.6538%" y="549" width="2.4038%" height="15" fill="rgb(248,9,4)" fg:x="70" fg:w="5"/><text x="33.9038%" y="559.50">ma..</text></g><g><title>mausam::main::{{closure}} (5 samples, 2.40%)</title><rect x="33.6538%" y="533" width="2.4038%" height="15" fill="rgb(210,31,22)" fg:x="70" fg:w="5"/><text x="33.9038%" y="543.50">ma..</text></g><g><title>mausam::app::run::{{closure}} (5 samples, 2.40%)</title><rect x="33.6538%" y="517" width="2.4038%" height="15" fill="rgb(239,54,39)" fg:x="70" fg:w="5"/><text x="33.9038%" y="527.50">ma..</text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (5 samples, 2.40%)</title><rect x="33.6538%" y="501" width="2.4038%" height="15" fill="rgb(230,99,41)" fg:x="70" fg:w="5"/><text x="33.9038%" y="511.50">ma..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (5 samples, 2.40%)</title><rect x="33.6538%" y="485" width="2.4038%" height="15" fill="rgb(253,106,12)" fg:x="70" fg:w="5"/><text x="33.9038%" y="495.50">re..</text></g><g><title>X509_STORE_set_default_paths_ex (5 samples, 2.40%)</title><rect x="33.6538%" y="469" width="2.4038%" height="15" fill="rgb(213,46,41)" fg:x="70" fg:w="5"/><text x="33.9038%" y="479.50">X5..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="453" width="2.4038%" height="15" fill="rgb(215,133,35)" fg:x="70" fg:w="5"/><text x="33.9038%" y="463.50">[l..</text></g><g><title>X509_load_cert_crl_file_ex (5 samples, 2.40%)</title><rect x="33.6538%" y="437" width="2.4038%" height="15" fill="rgb(213,28,5)" fg:x="70" fg:w="5"/><text x="33.9038%" y="447.50">X5..</text></g><g><title>PEM_X509_INFO_read_bio_ex (5 samples, 2.40%)</title><rect x="33.6538%" y="421" width="2.4038%" height="15" fill="rgb(215,77,49)" fg:x="70" fg:w="5"/><text x="33.9038%" y="431.50">PE..</text></g><g><title>ASN1_item_d2i_ex (5 samples, 2.40%)</title><rect x="33.6538%" y="405" width="2.4038%" height="15" fill="rgb(248,100,22)" fg:x="70" fg:w="5"/><text x="33.9038%" y="415.50">AS..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="389" width="2.4038%" height="15" fill="rgb(208,67,9)" fg:x="70" fg:w="5"/><text x="33.9038%" y="399.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="373" width="2.4038%" height="15" fill="rgb(219,133,21)" fg:x="70" fg:w="5"/><text x="33.9038%" y="383.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="357" width="2.4038%" height="15" fill="rgb(246,46,29)" fg:x="70" fg:w="5"/><text x="33.9038%" y="367.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="341" width="2.4038%" height="15" fill="rgb(246,185,52)" fg:x="70" fg:w="5"/><text x="33.9038%" y="351.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="325" width="2.4038%" height="15" fill="rgb(252,136,11)" fg:x="70" fg:w="5"/><text x="33.9038%" y="335.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="309" width="2.4038%" height="15" fill="rgb(219,138,53)" fg:x="70" fg:w="5"/><text x="33.9038%" y="319.50">[l..</text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (5 samples, 2.40%)</title><rect x="33.6538%" y="293" width="2.4038%" height="15" fill="rgb(211,51,23)" fg:x="70" fg:w="5"/><text x="33.9038%" y="303.50">OS..</text></g><g><title>OSSL_DECODER_do_all_provided (5 samples, 2.40%)</title><rect x="33.6538%" y="277" width="2.4038%" height="15" fill="rgb(247,221,28)" fg:x="70" fg:w="5"/><text x="33.9038%" y="287.50">OS..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="261" width="2.4038%" height="15" fill="rgb(251,222,45)" fg:x="70" fg:w="5"/><text x="33.9038%" y="271.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="245" width="2.4038%" height="15" fill="rgb(217,162,53)" fg:x="70" fg:w="5"/><text x="33.9038%" y="255.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (5 samples, 2.40%)</title><rect x="33.6538%" y="229" width="2.4038%" height="15" fill="rgb(229,93,14)" fg:x="70" fg:w="5"/><text x="33.9038%" y="239.50">[l..</text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="35.5769%" y="213" width="0.4808%" height="15" fill="rgb(209,67,49)" fg:x="74" fg:w="1"/><text x="35.8269%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="35.5769%" y="197" width="0.4808%" height="15" fill="rgb(213,87,29)" fg:x="74" fg:w="1"/><text x="35.8269%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="35.5769%" y="181" width="0.4808%" height="15" fill="rgb(205,151,52)" fg:x="74" fg:w="1"/><text x="35.8269%" y="191.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.48%)</title><rect x="35.5769%" y="165" width="0.4808%" height="15" fill="rgb(253,215,39)" fg:x="74" fg:w="1"/><text x="35.8269%" y="175.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.48%)</title><rect x="35.5769%" y="149" width="0.4808%" height="15" fill="rgb(221,220,41)" fg:x="74" fg:w="1"/><text x="35.8269%" y="159.50"></text></g><g><title>async_io::driver::block_on (1 samples, 0.48%)</title><rect x="36.0577%" y="565" width="0.4808%" height="15" fill="rgb(218,133,21)" fg:x="75" fg:w="1"/><text x="36.3077%" y="575.50"></text></g><g><title>zbus::message_fields::_::&lt;impl serde::ser::Serialize for zbus::message_fields::MessageFields&gt;::serialize (1 samples, 0.48%)</title><rect x="36.0577%" y="549" width="0.4808%" height="15" fill="rgb(221,193,43)" fg:x="75" fg:w="1"/><text x="36.3077%" y="559.50"></text></g><g><title>&lt;&amp;mut zvariant::dbus::ser::Serializer&lt;B,W&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.48%)</title><rect x="36.0577%" y="533" width="0.4808%" height="15" fill="rgb(240,128,52)" fg:x="75" fg:w="1"/><text x="36.3077%" y="543.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.48%)</title><rect x="36.0577%" y="517" width="0.4808%" height="15" fill="rgb(253,114,12)" fg:x="75" fg:w="1"/><text x="36.3077%" y="527.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::parse_next_signature (1 samples, 0.48%)</title><rect x="36.0577%" y="501" width="0.4808%" height="15" fill="rgb(215,223,47)" fg:x="75" fg:w="1"/><text x="36.3077%" y="511.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.48%)</title><rect x="36.0577%" y="485" width="0.4808%" height="15" fill="rgb(248,225,23)" fg:x="75" fg:w="1"/><text x="36.3077%" y="495.50"></text></g><g><title>mausam::app::NotifyData::show (7 samples, 3.37%)</title><rect x="36.0577%" y="581" width="3.3654%" height="15" fill="rgb(250,108,0)" fg:x="75" fg:w="7"/><text x="36.3077%" y="591.50">mau..</text></g><g><title>parking::Inner::park (6 samples, 2.88%)</title><rect x="36.5385%" y="565" width="2.8846%" height="15" fill="rgb(228,208,7)" fg:x="76" fg:w="6"/><text x="36.7885%" y="575.50">pa..</text></g><g><title>syscall (6 samples, 2.88%)</title><rect x="36.5385%" y="549" width="2.8846%" height="15" fill="rgb(244,45,10)" fg:x="76" fg:w="6"/><text x="36.7885%" y="559.50">sy..</text></g><g><title>BIO_free (1 samples, 0.48%)</title><rect x="39.4231%" y="245" width="0.4808%" height="15" fill="rgb(207,125,25)" fg:x="82" fg:w="1"/><text x="39.6731%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="39.4231%" y="229" width="0.4808%" height="15" fill="rgb(210,195,18)" fg:x="82" fg:w="1"/><text x="39.6731%" y="239.50"></text></g><g><title>__free (1 samples, 0.48%)</title><rect x="39.4231%" y="213" width="0.4808%" height="15" fill="rgb(249,80,12)" fg:x="82" fg:w="1"/><text x="39.6731%" y="223.50"></text></g><g><title>_int_free (1 samples, 0.48%)</title><rect x="39.4231%" y="197" width="0.4808%" height="15" fill="rgb(221,65,9)" fg:x="82" fg:w="1"/><text x="39.6731%" y="207.50"></text></g><g><title>mausam::main (2 samples, 0.96%)</title><rect x="39.4231%" y="581" width="0.9615%" height="15" fill="rgb(235,49,36)" fg:x="82" fg:w="2"/><text x="39.6731%" y="591.50"></text></g><g><title>mausam::main::{{closure}} (2 samples, 0.96%)</title><rect x="39.4231%" y="565" width="0.9615%" height="15" fill="rgb(225,32,20)" fg:x="82" fg:w="2"/><text x="39.6731%" y="575.50"></text></g><g><title>mausam::app::run::{{closure}} (2 samples, 0.96%)</title><rect x="39.4231%" y="549" width="0.9615%" height="15" fill="rgb(215,141,46)" fg:x="82" fg:w="2"/><text x="39.6731%" y="559.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (2 samples, 0.96%)</title><rect x="39.4231%" y="533" width="0.9615%" height="15" fill="rgb(250,160,47)" fg:x="82" fg:w="2"/><text x="39.6731%" y="543.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (2 samples, 0.96%)</title><rect x="39.4231%" y="517" width="0.9615%" height="15" fill="rgb(216,222,40)" fg:x="82" fg:w="2"/><text x="39.6731%" y="527.50"></text></g><g><title>X509_STORE_set_default_paths_ex (2 samples, 0.96%)</title><rect x="39.4231%" y="501" width="0.9615%" height="15" fill="rgb(234,217,39)" fg:x="82" fg:w="2"/><text x="39.6731%" y="511.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="485" width="0.9615%" height="15" fill="rgb(207,178,40)" fg:x="82" fg:w="2"/><text x="39.6731%" y="495.50"></text></g><g><title>X509_load_cert_crl_file_ex (2 samples, 0.96%)</title><rect x="39.4231%" y="469" width="0.9615%" height="15" fill="rgb(221,136,13)" fg:x="82" fg:w="2"/><text x="39.6731%" y="479.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (2 samples, 0.96%)</title><rect x="39.4231%" y="453" width="0.9615%" height="15" fill="rgb(249,199,10)" fg:x="82" fg:w="2"/><text x="39.6731%" y="463.50"></text></g><g><title>ASN1_item_d2i_ex (2 samples, 0.96%)</title><rect x="39.4231%" y="437" width="0.9615%" height="15" fill="rgb(249,222,13)" fg:x="82" fg:w="2"/><text x="39.6731%" y="447.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="421" width="0.9615%" height="15" fill="rgb(244,185,38)" fg:x="82" fg:w="2"/><text x="39.6731%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="405" width="0.9615%" height="15" fill="rgb(236,202,9)" fg:x="82" fg:w="2"/><text x="39.6731%" y="415.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="389" width="0.9615%" height="15" fill="rgb(250,229,37)" fg:x="82" fg:w="2"/><text x="39.6731%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="373" width="0.9615%" height="15" fill="rgb(206,174,23)" fg:x="82" fg:w="2"/><text x="39.6731%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="357" width="0.9615%" height="15" fill="rgb(211,33,43)" fg:x="82" fg:w="2"/><text x="39.6731%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="341" width="0.9615%" height="15" fill="rgb(245,58,50)" fg:x="82" fg:w="2"/><text x="39.6731%" y="351.50"></text></g><g><title>OSSL_DECODER_from_data (2 samples, 0.96%)</title><rect x="39.4231%" y="325" width="0.9615%" height="15" fill="rgb(244,68,36)" fg:x="82" fg:w="2"/><text x="39.6731%" y="335.50"></text></g><g><title>OSSL_DECODER_from_bio (2 samples, 0.96%)</title><rect x="39.4231%" y="309" width="0.9615%" height="15" fill="rgb(232,229,15)" fg:x="82" fg:w="2"/><text x="39.6731%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="293" width="0.9615%" height="15" fill="rgb(254,30,23)" fg:x="82" fg:w="2"/><text x="39.6731%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="277" width="0.9615%" height="15" fill="rgb(235,160,14)" fg:x="82" fg:w="2"/><text x="39.6731%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.5] (2 samples, 0.96%)</title><rect x="39.4231%" y="261" width="0.9615%" height="15" fill="rgb(212,155,44)" fg:x="82" fg:w="2"/><text x="39.6731%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="39.9038%" y="245" width="0.4808%" height="15" fill="rgb(226,2,50)" fg:x="83" fg:w="1"/><text x="40.1538%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="39.9038%" y="229" width="0.4808%" height="15" fill="rgb(234,177,6)" fg:x="83" fg:w="1"/><text x="40.1538%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="39.9038%" y="213" width="0.4808%" height="15" fill="rgb(217,24,9)" fg:x="83" fg:w="1"/><text x="40.1538%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="39.9038%" y="197" width="0.4808%" height="15" fill="rgb(220,13,46)" fg:x="83" fg:w="1"/><text x="40.1538%" y="207.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (1 samples, 0.48%)</title><rect x="39.9038%" y="181" width="0.4808%" height="15" fill="rgb(239,221,27)" fg:x="83" fg:w="1"/><text x="40.1538%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="39.9038%" y="165" width="0.4808%" height="15" fill="rgb(222,198,25)" fg:x="83" fg:w="1"/><text x="40.1538%" y="175.50"></text></g><g><title>EVP_PKEY_asn1_find_str (1 samples, 0.48%)</title><rect x="39.9038%" y="149" width="0.4808%" height="15" fill="rgb(211,99,13)" fg:x="83" fg:w="1"/><text x="40.1538%" y="159.50"></text></g><g><title>EVP_PKEY_asn1_get0 (1 samples, 0.48%)</title><rect x="39.9038%" y="133" width="0.4808%" height="15" fill="rgb(232,111,31)" fg:x="83" fg:w="1"/><text x="40.1538%" y="143.50"></text></g><g><title>zbus::message::Message::body_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="565" width="0.4808%" height="15" fill="rgb(245,82,37)" fg:x="84" fg:w="1"/><text x="40.6346%" y="575.50"></text></g><g><title>zvariant::de::from_slice (1 samples, 0.48%)</title><rect x="40.3846%" y="549" width="0.4808%" height="15" fill="rgb(227,149,46)" fg:x="84" fg:w="1"/><text x="40.6346%" y="559.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="533" width="0.4808%" height="15" fill="rgb(218,36,50)" fg:x="84" fg:w="1"/><text x="40.6346%" y="543.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::parse_next_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="517" width="0.4808%" height="15" fill="rgb(226,80,48)" fg:x="84" fg:w="1"/><text x="40.6346%" y="527.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="501" width="0.4808%" height="15" fill="rgb(238,224,15)" fg:x="84" fg:w="1"/><text x="40.6346%" y="511.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="485" width="0.4808%" height="15" fill="rgb(241,136,10)" fg:x="84" fg:w="1"/><text x="40.6346%" y="495.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::parse_next_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="469" width="0.4808%" height="15" fill="rgb(208,32,45)" fg:x="84" fg:w="1"/><text x="40.6346%" y="479.50"></text></g><g><title>zvariant::signature_parser::SignatureParser::next_signature (1 samples, 0.48%)</title><rect x="40.3846%" y="453" width="0.4808%" height="15" fill="rgb(207,135,9)" fg:x="84" fg:w="1"/><text x="40.6346%" y="463.50"></text></g><g><title>zvariant::signature::Signature::slice (1 samples, 0.48%)</title><rect x="40.3846%" y="437" width="0.4808%" height="15" fill="rgb(206,86,44)" fg:x="84" fg:w="1"/><text x="40.6346%" y="447.50"></text></g><g><title>mausam (69 samples, 33.17%)</title><rect x="8.1731%" y="597" width="33.1731%" height="15" fill="rgb(245,177,15)" fg:x="17" fg:w="69"/><text x="8.4231%" y="607.50">mausam</text></g><g><title>zbus::connection_builder::ConnectionBuilder::build::{{closure}} (2 samples, 0.96%)</title><rect x="40.3846%" y="581" width="0.9615%" height="15" fill="rgb(206,64,50)" fg:x="84" fg:w="2"/><text x="40.6346%" y="591.50"></text></g><g><title>zbus::raw::handshake::HandshakeCommon&lt;S&gt;::read_command (1 samples, 0.48%)</title><rect x="40.8654%" y="565" width="0.4808%" height="15" fill="rgb(234,36,40)" fg:x="85" fg:w="1"/><text x="41.1154%" y="575.50"></text></g><g><title>&lt;async_io::Async&lt;std::os::unix::net::stream::UnixStream&gt; as zbus::raw::socket::Socket&gt;::poll_recvmsg (1 samples, 0.48%)</title><rect x="40.8654%" y="549" width="0.4808%" height="15" fill="rgb(213,64,8)" fg:x="85" fg:w="1"/><text x="41.1154%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="40.8654%" y="533" width="0.4808%" height="15" fill="rgb(210,75,36)" fg:x="85" fg:w="1"/><text x="41.1154%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.48%)</title><rect x="40.8654%" y="517" width="0.4808%" height="15" fill="rgb(229,88,21)" fg:x="85" fg:w="1"/><text x="41.1154%" y="527.50"></text></g><g><title>malloc_consolidate (1 samples, 0.48%)</title><rect x="40.8654%" y="501" width="0.4808%" height="15" fill="rgb(252,204,47)" fg:x="85" fg:w="1"/><text x="41.1154%" y="511.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="41.3462%" y="581" width="0.4808%" height="15" fill="rgb(208,77,27)" fg:x="86" fg:w="1"/><text x="41.5962%" y="591.50"></text></g><g><title>__GI___call_tls_dtors (3 samples, 1.44%)</title><rect x="48.0769%" y="549" width="1.4423%" height="15" fill="rgb(221,76,26)" fg:x="100" fg:w="3"/><text x="48.3269%" y="559.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit::destroy (1 samples, 0.48%)</title><rect x="49.0385%" y="533" width="0.4808%" height="15" fill="rgb(225,139,18)" fg:x="102" fg:w="1"/><text x="49.2885%" y="543.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.48%)</title><rect x="49.5192%" y="549" width="0.4808%" height="15" fill="rgb(230,137,11)" fg:x="103" fg:w="1"/><text x="49.7692%" y="559.50"></text></g><g><title>__GI_madvise (24 samples, 11.54%)</title><rect x="50.0000%" y="549" width="11.5385%" height="15" fill="rgb(212,28,1)" fg:x="104" fg:w="24"/><text x="50.2500%" y="559.50">__GI_madvise</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.96%)</title><rect x="62.0192%" y="485" width="0.9615%" height="15" fill="rgb(248,164,17)" fg:x="129" fg:w="2"/><text x="62.2692%" y="495.50"></text></g><g><title>__pthread_getattr_np (2 samples, 0.96%)</title><rect x="62.0192%" y="469" width="0.9615%" height="15" fill="rgb(222,171,42)" fg:x="129" fg:w="2"/><text x="62.2692%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.96%)</title><rect x="62.0192%" y="453" width="0.9615%" height="15" fill="rgb(243,84,45)" fg:x="129" fg:w="2"/><text x="62.2692%" y="463.50"></text></g><g><title>tcache_init.part.0 (2 samples, 0.96%)</title><rect x="62.0192%" y="437" width="0.9615%" height="15" fill="rgb(252,49,23)" fg:x="129" fg:w="2"/><text x="62.2692%" y="447.50"></text></g><g><title>_int_malloc (2 samples, 0.96%)</title><rect x="62.0192%" y="421" width="0.9615%" height="15" fill="rgb(215,19,7)" fg:x="129" fg:w="2"/><text x="62.2692%" y="431.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13 samples, 6.25%)</title><rect x="62.9808%" y="469" width="6.2500%" height="15" fill="rgb(238,81,41)" fg:x="131" fg:w="13"/><text x="63.2308%" y="479.50">parking_..</text></g><g><title>syscall (10 samples, 4.81%)</title><rect x="64.4231%" y="453" width="4.8077%" height="15" fill="rgb(210,199,37)" fg:x="134" fg:w="10"/><text x="64.6731%" y="463.50">syscall</text></g><g><title>&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.48%)</title><rect x="70.1923%" y="453" width="0.4808%" height="15" fill="rgb(244,192,49)" fg:x="146" fg:w="1"/><text x="70.4423%" y="463.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.48%)</title><rect x="70.1923%" y="437" width="0.4808%" height="15" fill="rgb(226,211,11)" fg:x="146" fg:w="1"/><text x="70.4423%" y="447.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (1 samples, 0.48%)</title><rect x="70.1923%" y="421" width="0.4808%" height="15" fill="rgb(236,162,54)" fg:x="146" fg:w="1"/><text x="70.4423%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.48%)</title><rect x="70.1923%" y="405" width="0.4808%" height="15" fill="rgb(220,229,9)" fg:x="146" fg:w="1"/><text x="70.4423%" y="415.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::{{closure}} (1 samples, 0.48%)</title><rect x="70.1923%" y="389" width="0.4808%" height="15" fill="rgb(250,87,22)" fg:x="146" fg:w="1"/><text x="70.4423%" y="399.50"></text></g><g><title>__GI_getaddrinfo (1 samples, 0.48%)</title><rect x="70.1923%" y="373" width="0.4808%" height="15" fill="rgb(239,43,17)" fg:x="146" fg:w="1"/><text x="70.4423%" y="383.50"></text></g><g><title>nss_database_check_reload_and_get (1 samples, 0.48%)</title><rect x="70.1923%" y="357" width="0.4808%" height="15" fill="rgb(231,177,25)" fg:x="146" fg:w="1"/><text x="70.4423%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (24 samples, 11.54%)</title><rect x="70.6731%" y="453" width="11.5385%" height="15" fill="rgb(219,179,1)" fg:x="147" fg:w="24"/><text x="70.9231%" y="463.50">tokio::runtime::s..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (24 samples, 11.54%)</title><rect x="70.6731%" y="437" width="11.5385%" height="15" fill="rgb(238,219,53)" fg:x="147" fg:w="24"/><text x="70.9231%" y="447.50">parking_lot::cond..</text></g><g><title>syscall (23 samples, 11.06%)</title><rect x="71.1538%" y="421" width="11.0577%" height="15" fill="rgb(232,167,36)" fg:x="148" fg:w="23"/><text x="71.4038%" y="431.50">syscall</text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 0.48%)</title><rect x="82.2115%" y="405" width="0.4808%" height="15" fill="rgb(244,19,51)" fg:x="171" fg:w="1"/><text x="82.4615%" y="415.50"></text></g><g><title>__rust_probestack (1 samples, 0.48%)</title><rect x="82.2115%" y="389" width="0.4808%" height="15" fill="rgb(224,6,22)" fg:x="171" fg:w="1"/><text x="82.4615%" y="399.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42 samples, 20.19%)</title><rect x="62.9808%" y="485" width="20.1923%" height="15" fill="rgb(224,145,5)" fg:x="131" fg:w="42"/><text x="63.2308%" y="495.50">std::sys_common::backtrace::__ru..</text></g><g><title>tokio::runtime::task::raw::poll (29 samples, 13.94%)</title><rect x="69.2308%" y="469" width="13.9423%" height="15" fill="rgb(234,130,49)" fg:x="144" fg:w="29"/><text x="69.4808%" y="479.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.96%)</title><rect x="82.2115%" y="453" width="0.9615%" height="15" fill="rgb(254,6,2)" fg:x="171" fg:w="2"/><text x="82.4615%" y="463.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.96%)</title><rect x="82.2115%" y="437" width="0.9615%" height="15" fill="rgb(208,96,46)" fg:x="171" fg:w="2"/><text x="82.4615%" y="447.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.96%)</title><rect x="82.2115%" y="421" width="0.9615%" height="15" fill="rgb(239,3,39)" fg:x="171" fg:w="2"/><text x="82.4615%" y="431.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.48%)</title><rect x="82.6923%" y="405" width="0.4808%" height="15" fill="rgb(233,210,1)" fg:x="172" fg:w="1"/><text x="82.9423%" y="415.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.48%)</title><rect x="82.6923%" y="389" width="0.4808%" height="15" fill="rgb(244,137,37)" fg:x="172" fg:w="1"/><text x="82.9423%" y="399.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::make_error (1 samples, 0.48%)</title><rect x="82.6923%" y="373" width="0.4808%" height="15" fill="rgb(240,136,2)" fg:x="172" fg:w="1"/><text x="82.9423%" y="383.50"></text></g><g><title>SSL_get_error (1 samples, 0.48%)</title><rect x="82.6923%" y="357" width="0.4808%" height="15" fill="rgb(239,18,37)" fg:x="172" fg:w="1"/><text x="82.9423%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="82.6923%" y="341" width="0.4808%" height="15" fill="rgb(218,185,22)" fg:x="172" fg:w="1"/><text x="82.9423%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.5] (1 samples, 0.48%)</title><rect x="82.6923%" y="325" width="0.4808%" height="15" fill="rgb(225,218,4)" fg:x="172" fg:w="1"/><text x="82.9423%" y="335.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.48%)</title><rect x="82.6923%" y="309" width="0.4808%" height="15" fill="rgb(230,182,32)" fg:x="172" fg:w="1"/><text x="82.9423%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46 samples, 22.12%)</title><rect x="61.5385%" y="533" width="22.1154%" height="15" fill="rgb(242,56,43)" fg:x="128" fg:w="46"/><text x="61.7885%" y="543.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46 samples, 22.12%)</title><rect x="61.5385%" y="517" width="22.1154%" height="15" fill="rgb(233,99,24)" fg:x="128" fg:w="46"/><text x="61.7885%" y="527.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (46 samples, 22.12%)</title><rect x="61.5385%" y="501" width="22.1154%" height="15" fill="rgb(234,209,42)" fg:x="128" fg:w="46"/><text x="61.7885%" y="511.50">core::ops::function::FnOnce::call_o..</text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.48%)</title><rect x="83.1731%" y="485" width="0.4808%" height="15" fill="rgb(227,7,12)" fg:x="173" fg:w="1"/><text x="83.4231%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.48%)</title><rect x="83.1731%" y="469" width="0.4808%" height="15" fill="rgb(245,203,43)" fg:x="173" fg:w="1"/><text x="83.4231%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.48%)</title><rect x="83.1731%" y="453" width="0.4808%" height="15" fill="rgb(238,205,33)" fg:x="173" fg:w="1"/><text x="83.4231%" y="463.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.48%)</title><rect x="83.1731%" y="437" width="0.4808%" height="15" fill="rgb(231,56,7)" fg:x="173" fg:w="1"/><text x="83.4231%" y="447.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (1 samples, 0.48%)</title><rect x="83.1731%" y="421" width="0.4808%" height="15" fill="rgb(244,186,29)" fg:x="173" fg:w="1"/><text x="83.4231%" y="431.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.48%)</title><rect x="83.1731%" y="405" width="0.4808%" height="15" fill="rgb(234,111,31)" fg:x="173" fg:w="1"/><text x="83.4231%" y="415.50"></text></g><g><title>__clone3 (100 samples, 48.08%)</title><rect x="41.8269%" y="581" width="48.0769%" height="15" fill="rgb(241,149,10)" fg:x="87" fg:w="100"/><text x="42.0769%" y="591.50">__clone3</text></g><g><title>start_thread (91 samples, 43.75%)</title><rect x="46.1538%" y="565" width="43.7500%" height="15" fill="rgb(249,206,44)" fg:x="96" fg:w="91"/><text x="46.4038%" y="575.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (59 samples, 28.37%)</title><rect x="61.5385%" y="549" width="28.3654%" height="15" fill="rgb(251,153,30)" fg:x="128" fg:w="59"/><text x="61.7885%" y="559.50">std::sys::unix::thread::Thread::new::thread_st..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (13 samples, 6.25%)</title><rect x="83.6538%" y="533" width="6.2500%" height="15" fill="rgb(239,152,38)" fg:x="174" fg:w="13"/><text x="83.9038%" y="543.50">core::pt..</text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (13 samples, 6.25%)</title><rect x="83.6538%" y="517" width="6.2500%" height="15" fill="rgb(249,139,47)" fg:x="174" fg:w="13"/><text x="83.9038%" y="527.50">&lt;std::sy..</text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (13 samples, 6.25%)</title><rect x="83.6538%" y="501" width="6.2500%" height="15" fill="rgb(244,64,35)" fg:x="174" fg:w="13"/><text x="83.9038%" y="511.50">std::sys..</text></g><g><title>__GI___munmap (13 samples, 6.25%)</title><rect x="83.6538%" y="485" width="6.2500%" height="15" fill="rgb(216,46,15)" fg:x="174" fg:w="13"/><text x="83.9038%" y="495.50">__GI___m..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.48%)</title><rect x="89.9038%" y="581" width="0.4808%" height="15" fill="rgb(250,74,19)" fg:x="187" fg:w="1"/><text x="90.1538%" y="591.50"></text></g><g><title>tokio-runtime-w (104 samples, 50.00%)</title><rect x="41.3462%" y="597" width="50.0000%" height="15" fill="rgb(249,42,33)" fg:x="86" fg:w="104"/><text x="41.5962%" y="607.50">tokio-runtime-w</text></g><g><title>syscall (2 samples, 0.96%)</title><rect x="90.3846%" y="581" width="0.9615%" height="15" fill="rgb(242,149,17)" fg:x="188" fg:w="2"/><text x="90.6346%" y="591.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.48%)</title><rect x="91.3462%" y="581" width="0.4808%" height="15" fill="rgb(244,29,21)" fg:x="190" fg:w="1"/><text x="91.5962%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;zbus::socket_reader::SocketReader::receive_msg::{{closure}}&gt; (5 samples, 2.40%)</title><rect x="92.7885%" y="453" width="2.4038%" height="15" fill="rgb(220,130,37)" fg:x="193" fg:w="5"/><text x="93.0385%" y="463.50">co..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 2.40%)</title><rect x="92.7885%" y="437" width="2.4038%" height="15" fill="rgb(211,67,2)" fg:x="193" fg:w="5"/><text x="93.0385%" y="447.50">al..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 2.40%)</title><rect x="92.7885%" y="421" width="2.4038%" height="15" fill="rgb(235,68,52)" fg:x="193" fg:w="5"/><text x="93.0385%" y="431.50">ha..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 2.40%)</title><rect x="92.7885%" y="405" width="2.4038%" height="15" fill="rgb(246,142,3)" fg:x="193" fg:w="5"/><text x="93.0385%" y="415.50">al..</text></g><g><title>__free (5 samples, 2.40%)</title><rect x="92.7885%" y="389" width="2.4038%" height="15" fill="rgb(241,25,7)" fg:x="193" fg:w="5"/><text x="93.0385%" y="399.50">__..</text></g><g><title>_int_free (5 samples, 2.40%)</title><rect x="92.7885%" y="373" width="2.4038%" height="15" fill="rgb(242,119,39)" fg:x="193" fg:w="5"/><text x="93.0385%" y="383.50">_i..</text></g><g><title>__GI___lll_lock_wait_private (5 samples, 2.40%)</title><rect x="92.7885%" y="357" width="2.4038%" height="15" fill="rgb(241,98,45)" fg:x="193" fg:w="5"/><text x="93.0385%" y="367.50">__..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.48%)</title><rect x="95.1923%" y="437" width="0.4808%" height="15" fill="rgb(254,28,30)" fg:x="198" fg:w="1"/><text x="95.4423%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.48%)</title><rect x="95.1923%" y="421" width="0.4808%" height="15" fill="rgb(241,142,54)" fg:x="198" fg:w="1"/><text x="95.4423%" y="431.50"></text></g><g><title>__realloc (1 samples, 0.48%)</title><rect x="95.1923%" y="405" width="0.4808%" height="15" fill="rgb(222,85,15)" fg:x="198" fg:w="1"/><text x="95.4423%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.48%)</title><rect x="95.1923%" y="389" width="0.4808%" height="15" fill="rgb(210,85,47)" fg:x="198" fg:w="1"/><text x="95.4423%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.48%)</title><rect x="95.1923%" y="373" width="0.4808%" height="15" fill="rgb(224,206,25)" fg:x="198" fg:w="1"/><text x="95.4423%" y="383.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7 samples, 3.37%)</title><rect x="92.7885%" y="469" width="3.3654%" height="15" fill="rgb(243,201,19)" fg:x="193" fg:w="7"/><text x="93.0385%" y="479.50">asy..</text></g><g><title>zbus::socket_reader::SocketReader::receive_msg::{{closure}}::{{closure}} (2 samples, 0.96%)</title><rect x="95.1923%" y="453" width="0.9615%" height="15" fill="rgb(236,59,4)" fg:x="198" fg:w="2"/><text x="95.4423%" y="463.50"></text></g><g><title>zvariant::de::from_slice (1 samples, 0.48%)</title><rect x="95.6731%" y="437" width="0.4808%" height="15" fill="rgb(254,179,45)" fg:x="199" fg:w="1"/><text x="95.9231%" y="447.50"></text></g><g><title>&lt;&amp;mut zvariant::dbus::de::Deserializer&lt;B&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.48%)</title><rect x="95.6731%" y="421" width="0.4808%" height="15" fill="rgb(226,14,10)" fg:x="199" fg:w="1"/><text x="95.9231%" y="431.50"></text></g><g><title>zvariant::de::DeserializerCommon&lt;B&gt;::parse_padding (1 samples, 0.48%)</title><rect x="95.6731%" y="405" width="0.4808%" height="15" fill="rgb(244,27,41)" fg:x="199" fg:w="1"/><text x="95.9231%" y="415.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.48%)</title><rect x="96.1538%" y="469" width="0.4808%" height="15" fill="rgb(235,35,32)" fg:x="200" fg:w="1"/><text x="96.4038%" y="479.50"></text></g><g><title>__clone3 (16 samples, 7.69%)</title><rect x="91.8269%" y="581" width="7.6923%" height="15" fill="rgb(218,68,31)" fg:x="191" fg:w="16"/><text x="92.0769%" y="591.50">__clone3</text></g><g><title>start_thread (15 samples, 7.21%)</title><rect x="92.3077%" y="565" width="7.2115%" height="15" fill="rgb(207,120,37)" fg:x="192" fg:w="15"/><text x="92.5577%" y="575.50">start_thre..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 7.21%)</title><rect x="92.3077%" y="549" width="7.2115%" height="15" fill="rgb(227,98,0)" fg:x="192" fg:w="15"/><text x="92.5577%" y="559.50">std::sys::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 7.21%)</title><rect x="92.3077%" y="533" width="7.2115%" height="15" fill="rgb(207,7,3)" fg:x="192" fg:w="15"/><text x="92.5577%" y="543.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 7.21%)</title><rect x="92.3077%" y="517" width="7.2115%" height="15" fill="rgb(206,98,19)" fg:x="192" fg:w="15"/><text x="92.5577%" y="527.50">&lt;alloc::bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 7.21%)</title><rect x="92.3077%" y="501" width="7.2115%" height="15" fill="rgb(217,5,26)" fg:x="192" fg:w="15"/><text x="92.5577%" y="511.50">core::ops:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 6.73%)</title><rect x="92.7885%" y="485" width="6.7308%" height="15" fill="rgb(235,190,38)" fg:x="193" fg:w="14"/><text x="93.0385%" y="495.50">std::sys_..</text></g><g><title>parking::Inner::park (6 samples, 2.88%)</title><rect x="96.6346%" y="469" width="2.8846%" height="15" fill="rgb(247,86,24)" fg:x="201" fg:w="6"/><text x="96.8846%" y="479.50">pa..</text></g><g><title>syscall (6 samples, 2.88%)</title><rect x="96.6346%" y="453" width="2.8846%" height="15" fill="rgb(205,101,16)" fg:x="201" fg:w="6"/><text x="96.8846%" y="463.50">sy..</text></g><g><title>all (208 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(246,168,33)" fg:x="0" fg:w="208"/><text x="0.2500%" y="623.50"></text></g><g><title>zbus::Connectio (18 samples, 8.65%)</title><rect x="91.3462%" y="597" width="8.6538%" height="15" fill="rgb(231,114,1)" fg:x="190" fg:w="18"/><text x="91.5962%" y="607.50">zbus::Connec..</text></g><g><title>async_executor::Ticker::wake (1 samples, 0.48%)</title><rect x="99.5192%" y="581" width="0.4808%" height="15" fill="rgb(207,184,53)" fg:x="207" fg:w="1"/><text x="99.7692%" y="591.50"></text></g></svg></svg>