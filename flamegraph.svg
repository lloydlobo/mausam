<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="263"><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.38%)</title><rect x="0.0000%" y="501" width="0.3802%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.38%)</title><rect x="0.0000%" y="485" width="0.3802%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>async-io (11 samples, 4.18%)</title><rect x="0.0000%" y="645" width="4.1825%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="11"/><text x="0.2500%" y="655.50">async..</text></g><g><title>__clone3 (11 samples, 4.18%)</title><rect x="0.0000%" y="629" width="4.1825%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="11"/><text x="0.2500%" y="639.50">__clo..</text></g><g><title>start_thread (11 samples, 4.18%)</title><rect x="0.0000%" y="613" width="4.1825%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="11"/><text x="0.2500%" y="623.50">start..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11 samples, 4.18%)</title><rect x="0.0000%" y="597" width="4.1825%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="11"/><text x="0.2500%" y="607.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 4.18%)</title><rect x="0.0000%" y="581" width="4.1825%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="11"/><text x="0.2500%" y="591.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 4.18%)</title><rect x="0.0000%" y="565" width="4.1825%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="11"/><text x="0.2500%" y="575.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 4.18%)</title><rect x="0.0000%" y="549" width="4.1825%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="11"/><text x="0.2500%" y="559.50">core:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 4.18%)</title><rect x="0.0000%" y="533" width="4.1825%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="11"/><text x="0.2500%" y="543.50">std::..</text></g><g><title>parking::Inner::park (11 samples, 4.18%)</title><rect x="0.0000%" y="517" width="4.1825%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="11"/><text x="0.2500%" y="527.50">parki..</text></g><g><title>syscall (10 samples, 3.80%)</title><rect x="0.3802%" y="501" width="3.8023%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="10"/><text x="0.6302%" y="511.50">sysc..</text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="4.1825%" y="629" width="0.3802%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="1"/><text x="4.4325%" y="639.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 0.76%)</title><rect x="4.5627%" y="629" width="0.7605%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="2"/><text x="4.8127%" y="639.50"></text></g><g><title>OPENSSL_sk_insert (1 samples, 0.38%)</title><rect x="5.3232%" y="629" width="0.3802%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="1"/><text x="5.5732%" y="639.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.38%)</title><rect x="6.4639%" y="613" width="0.3802%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="1"/><text x="6.7139%" y="623.50"></text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 1.52%)</title><rect x="5.7034%" y="629" width="1.5209%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="4"/><text x="5.9534%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.38%)</title><rect x="6.8441%" y="613" width="0.3802%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="1"/><text x="7.0941%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.38%)</title><rect x="7.2243%" y="629" width="0.3802%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="1"/><text x="7.4743%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="7.2243%" y="613" width="0.3802%" height="15" fill="rgb(226,26,5)" fg:x="19" fg:w="1"/><text x="7.4743%" y="623.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.38%)</title><rect x="7.6046%" y="629" width="0.3802%" height="15" fill="rgb(249,33,26)" fg:x="20" fg:w="1"/><text x="7.8546%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.38%)</title><rect x="7.9848%" y="629" width="0.3802%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="1"/><text x="8.2348%" y="639.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.38%)</title><rect x="10.2662%" y="517" width="0.3802%" height="15" fill="rgb(221,5,38)" fg:x="27" fg:w="1"/><text x="10.5162%" y="527.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.38%)</title><rect x="10.2662%" y="501" width="0.3802%" height="15" fill="rgb(247,18,42)" fg:x="27" fg:w="1"/><text x="10.5162%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.38%)</title><rect x="10.2662%" y="485" width="0.3802%" height="15" fill="rgb(241,131,45)" fg:x="27" fg:w="1"/><text x="10.5162%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.38%)</title><rect x="10.2662%" y="469" width="0.3802%" height="15" fill="rgb(249,31,29)" fg:x="27" fg:w="1"/><text x="10.5162%" y="479.50"></text></g><g><title>__realloc (1 samples, 0.38%)</title><rect x="10.2662%" y="453" width="0.3802%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="1"/><text x="10.5162%" y="463.50"></text></g><g><title>_int_realloc (1 samples, 0.38%)</title><rect x="10.2662%" y="437" width="0.3802%" height="15" fill="rgb(238,160,17)" fg:x="27" fg:w="1"/><text x="10.5162%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="10.2662%" y="421" width="0.3802%" height="15" fill="rgb(214,148,48)" fg:x="27" fg:w="1"/><text x="10.5162%" y="431.50"></text></g><g><title>malloc_consolidate (1 samples, 0.38%)</title><rect x="10.2662%" y="405" width="0.3802%" height="15" fill="rgb(232,36,49)" fg:x="27" fg:w="1"/><text x="10.5162%" y="415.50"></text></g><g><title>SSL_CTX_set_cipher_list (1 samples, 0.38%)</title><rect x="10.6464%" y="469" width="0.3802%" height="15" fill="rgb(209,103,24)" fg:x="28" fg:w="1"/><text x="10.8964%" y="479.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.38%)</title><rect x="10.6464%" y="453" width="0.3802%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="1"/><text x="10.8964%" y="463.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.38%)</title><rect x="10.6464%" y="437" width="0.3802%" height="15" fill="rgb(213,181,19)" fg:x="28" fg:w="1"/><text x="10.8964%" y="447.50"></text></g><g><title>CRYPTO_free (1 samples, 0.38%)</title><rect x="11.0266%" y="325" width="0.3802%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="1"/><text x="11.2766%" y="335.50"></text></g><g><title>BIO_puts (2 samples, 0.76%)</title><rect x="11.0266%" y="389" width="0.7605%" height="15" fill="rgb(241,83,37)" fg:x="29" fg:w="2"/><text x="11.2766%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="11.0266%" y="373" width="0.7605%" height="15" fill="rgb(233,36,39)" fg:x="29" fg:w="2"/><text x="11.2766%" y="383.50"></text></g><g><title>BUF_MEM_grow_clean (2 samples, 0.76%)</title><rect x="11.0266%" y="357" width="0.7605%" height="15" fill="rgb(226,3,54)" fg:x="29" fg:w="2"/><text x="11.2766%" y="367.50"></text></g><g><title>CRYPTO_clear_realloc (2 samples, 0.76%)</title><rect x="11.0266%" y="341" width="0.7605%" height="15" fill="rgb(245,192,40)" fg:x="29" fg:w="2"/><text x="11.2766%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="11.4068%" y="325" width="0.3802%" height="15" fill="rgb(238,167,29)" fg:x="30" fg:w="1"/><text x="11.6568%" y="335.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="11.4068%" y="309" width="0.3802%" height="15" fill="rgb(232,182,51)" fg:x="30" fg:w="1"/><text x="11.6568%" y="319.50"></text></g><g><title>malloc_consolidate (1 samples, 0.38%)</title><rect x="11.4068%" y="293" width="0.3802%" height="15" fill="rgb(231,60,39)" fg:x="30" fg:w="1"/><text x="11.6568%" y="303.50"></text></g><g><title>EVP_DecodeUpdate (4 samples, 1.52%)</title><rect x="11.7871%" y="389" width="1.5209%" height="15" fill="rgb(208,69,12)" fg:x="31" fg:w="4"/><text x="12.0371%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="12.9278%" y="373" width="0.3802%" height="15" fill="rgb(235,93,37)" fg:x="34" fg:w="1"/><text x="13.1778%" y="383.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (8 samples, 3.04%)</title><rect x="10.6464%" y="501" width="3.0418%" height="15" fill="rgb(213,116,39)" fg:x="28" fg:w="8"/><text x="10.8964%" y="511.50">mau..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (8 samples, 3.04%)</title><rect x="10.6464%" y="485" width="3.0418%" height="15" fill="rgb(222,207,29)" fg:x="28" fg:w="8"/><text x="10.8964%" y="495.50">req..</text></g><g><title>X509_STORE_set_default_paths_ex (7 samples, 2.66%)</title><rect x="11.0266%" y="469" width="2.6616%" height="15" fill="rgb(206,96,30)" fg:x="29" fg:w="7"/><text x="11.2766%" y="479.50">X5..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="11.0266%" y="453" width="2.6616%" height="15" fill="rgb(218,138,4)" fg:x="29" fg:w="7"/><text x="11.2766%" y="463.50">[l..</text></g><g><title>X509_load_cert_crl_file_ex (7 samples, 2.66%)</title><rect x="11.0266%" y="437" width="2.6616%" height="15" fill="rgb(250,191,14)" fg:x="29" fg:w="7"/><text x="11.2766%" y="447.50">X5..</text></g><g><title>PEM_X509_INFO_read_bio_ex (7 samples, 2.66%)</title><rect x="11.0266%" y="421" width="2.6616%" height="15" fill="rgb(239,60,40)" fg:x="29" fg:w="7"/><text x="11.2766%" y="431.50">PE..</text></g><g><title>PEM_read_bio_ex (7 samples, 2.66%)</title><rect x="11.0266%" y="405" width="2.6616%" height="15" fill="rgb(206,27,48)" fg:x="29" fg:w="7"/><text x="11.2766%" y="415.50">PE..</text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.3080%" y="389" width="0.3802%" height="15" fill="rgb(225,35,8)" fg:x="35" fg:w="1"/><text x="13.5580%" y="399.50"></text></g><g><title>SSL_CTX_new_ex (1 samples, 0.38%)</title><rect x="13.6882%" y="469" width="0.3802%" height="15" fill="rgb(250,213,24)" fg:x="36" fg:w="1"/><text x="13.9382%" y="479.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="453" width="0.3802%" height="15" fill="rgb(247,123,22)" fg:x="36" fg:w="1"/><text x="13.9382%" y="463.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.38%)</title><rect x="13.6882%" y="437" width="0.3802%" height="15" fill="rgb(231,138,38)" fg:x="36" fg:w="1"/><text x="13.9382%" y="447.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="421" width="0.3802%" height="15" fill="rgb(231,145,46)" fg:x="36" fg:w="1"/><text x="13.9382%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="405" width="0.3802%" height="15" fill="rgb(251,118,11)" fg:x="36" fg:w="1"/><text x="13.9382%" y="415.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="389" width="0.3802%" height="15" fill="rgb(217,147,25)" fg:x="36" fg:w="1"/><text x="13.9382%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="373" width="0.3802%" height="15" fill="rgb(247,81,37)" fg:x="36" fg:w="1"/><text x="13.9382%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="357" width="0.3802%" height="15" fill="rgb(209,12,38)" fg:x="36" fg:w="1"/><text x="13.9382%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="341" width="0.3802%" height="15" fill="rgb(227,1,9)" fg:x="36" fg:w="1"/><text x="13.9382%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="325" width="0.3802%" height="15" fill="rgb(248,47,43)" fg:x="36" fg:w="1"/><text x="13.9382%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="309" width="0.3802%" height="15" fill="rgb(221,10,30)" fg:x="36" fg:w="1"/><text x="13.9382%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="13.6882%" y="293" width="0.3802%" height="15" fill="rgb(210,229,1)" fg:x="36" fg:w="1"/><text x="13.9382%" y="303.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.38%)</title><rect x="13.6882%" y="277" width="0.3802%" height="15" fill="rgb(222,148,37)" fg:x="36" fg:w="1"/><text x="13.9382%" y="287.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.38%)</title><rect x="13.6882%" y="261" width="0.3802%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="1"/><text x="13.9382%" y="271.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.38%)</title><rect x="14.0684%" y="293" width="0.3802%" height="15" fill="rgb(247,98,35)" fg:x="37" fg:w="1"/><text x="14.3184%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="277" width="0.3802%" height="15" fill="rgb(247,138,52)" fg:x="37" fg:w="1"/><text x="14.3184%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="261" width="0.3802%" height="15" fill="rgb(213,79,30)" fg:x="37" fg:w="1"/><text x="14.3184%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="245" width="0.3802%" height="15" fill="rgb(246,177,23)" fg:x="37" fg:w="1"/><text x="14.3184%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="229" width="0.3802%" height="15" fill="rgb(230,62,27)" fg:x="37" fg:w="1"/><text x="14.3184%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="213" width="0.3802%" height="15" fill="rgb(216,154,8)" fg:x="37" fg:w="1"/><text x="14.3184%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="197" width="0.3802%" height="15" fill="rgb(244,35,45)" fg:x="37" fg:w="1"/><text x="14.3184%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="181" width="0.3802%" height="15" fill="rgb(251,115,12)" fg:x="37" fg:w="1"/><text x="14.3184%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="165" width="0.3802%" height="15" fill="rgb(240,54,50)" fg:x="37" fg:w="1"/><text x="14.3184%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="149" width="0.3802%" height="15" fill="rgb(233,84,52)" fg:x="37" fg:w="1"/><text x="14.3184%" y="159.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.38%)</title><rect x="14.0684%" y="133" width="0.3802%" height="15" fill="rgb(207,117,47)" fg:x="37" fg:w="1"/><text x="14.3184%" y="143.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="14.0684%" y="117" width="0.3802%" height="15" fill="rgb(249,43,39)" fg:x="37" fg:w="1"/><text x="14.3184%" y="127.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.38%)</title><rect x="14.0684%" y="101" width="0.3802%" height="15" fill="rgb(209,38,44)" fg:x="37" fg:w="1"/><text x="14.3184%" y="111.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (2 samples, 0.76%)</title><rect x="14.4487%" y="277" width="0.7605%" height="15" fill="rgb(236,212,23)" fg:x="38" fg:w="2"/><text x="14.6987%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="14.4487%" y="261" width="0.7605%" height="15" fill="rgb(242,79,21)" fg:x="38" fg:w="2"/><text x="14.6987%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="14.4487%" y="245" width="0.7605%" height="15" fill="rgb(211,96,35)" fg:x="38" fg:w="2"/><text x="14.6987%" y="255.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.38%)</title><rect x="15.2091%" y="245" width="0.3802%" height="15" fill="rgb(253,215,40)" fg:x="40" fg:w="1"/><text x="15.4591%" y="255.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.38%)</title><rect x="15.2091%" y="229" width="0.3802%" height="15" fill="rgb(211,81,21)" fg:x="40" fg:w="1"/><text x="15.4591%" y="239.50"></text></g><g><title>EVP_KEYMGMT_is_a (2 samples, 0.76%)</title><rect x="15.2091%" y="277" width="0.7605%" height="15" fill="rgb(208,190,38)" fg:x="40" fg:w="2"/><text x="15.4591%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="15.2091%" y="261" width="0.7605%" height="15" fill="rgb(235,213,38)" fg:x="40" fg:w="2"/><text x="15.4591%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="15.5894%" y="245" width="0.3802%" height="15" fill="rgb(237,122,38)" fg:x="41" fg:w="1"/><text x="15.8394%" y="255.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="15.5894%" y="229" width="0.3802%" height="15" fill="rgb(244,218,35)" fg:x="41" fg:w="1"/><text x="15.8394%" y="239.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.38%)</title><rect x="15.5894%" y="213" width="0.3802%" height="15" fill="rgb(240,68,47)" fg:x="41" fg:w="1"/><text x="15.8394%" y="223.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="15.9696%" y="229" width="0.3802%" height="15" fill="rgb(210,16,53)" fg:x="42" fg:w="1"/><text x="16.2196%" y="239.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.38%)</title><rect x="15.9696%" y="213" width="0.3802%" height="15" fill="rgb(235,124,12)" fg:x="42" fg:w="1"/><text x="16.2196%" y="223.50"></text></g><g><title>CRYPTO_THREAD_unlock (3 samples, 1.14%)</title><rect x="16.3498%" y="229" width="1.1407%" height="15" fill="rgb(224,169,11)" fg:x="43" fg:w="3"/><text x="16.5998%" y="239.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 1.14%)</title><rect x="16.3498%" y="213" width="1.1407%" height="15" fill="rgb(250,166,2)" fg:x="43" fg:w="3"/><text x="16.5998%" y="223.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (5 samples, 1.90%)</title><rect x="15.9696%" y="277" width="1.9011%" height="15" fill="rgb(242,216,29)" fg:x="42" fg:w="5"/><text x="16.2196%" y="287.50">O..</text></g><g><title>OSSL_DECODER_is_a (5 samples, 1.90%)</title><rect x="15.9696%" y="261" width="1.9011%" height="15" fill="rgb(230,116,27)" fg:x="42" fg:w="5"/><text x="16.2196%" y="271.50">O..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 1.90%)</title><rect x="15.9696%" y="245" width="1.9011%" height="15" fill="rgb(228,99,48)" fg:x="42" fg:w="5"/><text x="16.2196%" y="255.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="17.4905%" y="229" width="0.3802%" height="15" fill="rgb(253,11,6)" fg:x="46" fg:w="1"/><text x="17.7405%" y="239.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.38%)</title><rect x="17.4905%" y="213" width="0.3802%" height="15" fill="rgb(247,143,39)" fg:x="46" fg:w="1"/><text x="17.7405%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="17.4905%" y="197" width="0.3802%" height="15" fill="rgb(236,97,10)" fg:x="46" fg:w="1"/><text x="17.7405%" y="207.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="17.8707%" y="165" width="0.3802%" height="15" fill="rgb(233,208,19)" fg:x="47" fg:w="1"/><text x="18.1207%" y="175.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.38%)</title><rect x="17.8707%" y="149" width="0.3802%" height="15" fill="rgb(216,164,2)" fg:x="47" fg:w="1"/><text x="18.1207%" y="159.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (11 samples, 4.18%)</title><rect x="14.4487%" y="293" width="4.1825%" height="15" fill="rgb(220,129,5)" fg:x="38" fg:w="11"/><text x="14.6987%" y="303.50">OSSL_..</text></g><g><title>OSSL_DECODER_do_all_provided (2 samples, 0.76%)</title><rect x="17.8707%" y="277" width="0.7605%" height="15" fill="rgb(242,17,10)" fg:x="47" fg:w="2"/><text x="18.1207%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="17.8707%" y="261" width="0.7605%" height="15" fill="rgb(242,107,0)" fg:x="47" fg:w="2"/><text x="18.1207%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="17.8707%" y="245" width="0.7605%" height="15" fill="rgb(251,28,31)" fg:x="47" fg:w="2"/><text x="18.1207%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="17.8707%" y="229" width="0.7605%" height="15" fill="rgb(233,223,10)" fg:x="47" fg:w="2"/><text x="18.1207%" y="239.50"></text></g><g><title>OSSL_DECODER_is_a (2 samples, 0.76%)</title><rect x="17.8707%" y="213" width="0.7605%" height="15" fill="rgb(215,21,27)" fg:x="47" fg:w="2"/><text x="18.1207%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="17.8707%" y="197" width="0.7605%" height="15" fill="rgb(232,23,21)" fg:x="47" fg:w="2"/><text x="18.1207%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="17.8707%" y="181" width="0.7605%" height="15" fill="rgb(244,5,23)" fg:x="47" fg:w="2"/><text x="18.1207%" y="191.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.38%)</title><rect x="18.2510%" y="165" width="0.3802%" height="15" fill="rgb(226,81,46)" fg:x="48" fg:w="1"/><text x="18.5010%" y="175.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.38%)</title><rect x="18.2510%" y="149" width="0.3802%" height="15" fill="rgb(247,70,30)" fg:x="48" fg:w="1"/><text x="18.5010%" y="159.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.38%)</title><rect x="18.6312%" y="229" width="0.3802%" height="15" fill="rgb(212,68,19)" fg:x="49" fg:w="1"/><text x="18.8812%" y="239.50"></text></g><g><title>__GI___pthread_once (1 samples, 0.38%)</title><rect x="18.6312%" y="213" width="0.3802%" height="15" fill="rgb(240,187,13)" fg:x="49" fg:w="1"/><text x="18.8812%" y="223.50"></text></g><g><title>OSSL_DECODER_from_data (2 samples, 0.76%)</title><rect x="18.6312%" y="293" width="0.7605%" height="15" fill="rgb(223,113,26)" fg:x="49" fg:w="2"/><text x="18.8812%" y="303.50"></text></g><g><title>OSSL_DECODER_from_bio (2 samples, 0.76%)</title><rect x="18.6312%" y="277" width="0.7605%" height="15" fill="rgb(206,192,2)" fg:x="49" fg:w="2"/><text x="18.8812%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="18.6312%" y="261" width="0.7605%" height="15" fill="rgb(241,108,4)" fg:x="49" fg:w="2"/><text x="18.8812%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="18.6312%" y="245" width="0.7605%" height="15" fill="rgb(247,173,49)" fg:x="49" fg:w="2"/><text x="18.8812%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.0114%" y="229" width="0.3802%" height="15" fill="rgb(224,114,35)" fg:x="50" fg:w="1"/><text x="19.2614%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.0114%" y="213" width="0.3802%" height="15" fill="rgb(245,159,27)" fg:x="50" fg:w="1"/><text x="19.2614%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.0114%" y="197" width="0.3802%" height="15" fill="rgb(245,172,44)" fg:x="50" fg:w="1"/><text x="19.2614%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.0114%" y="181" width="0.3802%" height="15" fill="rgb(236,23,11)" fg:x="50" fg:w="1"/><text x="19.2614%" y="191.50"></text></g><g><title>EVP_KEYMGMT_is_a (1 samples, 0.38%)</title><rect x="19.0114%" y="165" width="0.3802%" height="15" fill="rgb(205,117,38)" fg:x="50" fg:w="1"/><text x="19.2614%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.0114%" y="149" width="0.3802%" height="15" fill="rgb(237,72,25)" fg:x="50" fg:w="1"/><text x="19.2614%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.0114%" y="133" width="0.3802%" height="15" fill="rgb(244,70,9)" fg:x="50" fg:w="1"/><text x="19.2614%" y="143.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="19.0114%" y="117" width="0.3802%" height="15" fill="rgb(217,125,39)" fg:x="50" fg:w="1"/><text x="19.2614%" y="127.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.38%)</title><rect x="19.0114%" y="101" width="0.3802%" height="15" fill="rgb(235,36,10)" fg:x="50" fg:w="1"/><text x="19.2614%" y="111.50"></text></g><g><title>ASN1_STRING_to_UTF8 (1 samples, 0.38%)</title><rect x="19.3916%" y="277" width="0.3802%" height="15" fill="rgb(251,123,47)" fg:x="51" fg:w="1"/><text x="19.6416%" y="287.50"></text></g><g><title>ASN1_mbstring_copy (1 samples, 0.38%)</title><rect x="19.3916%" y="261" width="0.3802%" height="15" fill="rgb(221,13,13)" fg:x="51" fg:w="1"/><text x="19.6416%" y="271.50"></text></g><g><title>ASN1_mbstring_ncopy (1 samples, 0.38%)</title><rect x="19.3916%" y="245" width="0.3802%" height="15" fill="rgb(238,131,9)" fg:x="51" fg:w="1"/><text x="19.6416%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.3916%" y="229" width="0.3802%" height="15" fill="rgb(211,50,8)" fg:x="51" fg:w="1"/><text x="19.6416%" y="239.50"></text></g><g><title>UTF8_getc (1 samples, 0.38%)</title><rect x="19.3916%" y="213" width="0.3802%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="1"/><text x="19.6416%" y="223.50"></text></g><g><title>ASN1_item_d2i_ex (16 samples, 6.08%)</title><rect x="14.0684%" y="405" width="6.0837%" height="15" fill="rgb(242,14,37)" fg:x="37" fg:w="16"/><text x="14.3184%" y="415.50">ASN1_ite..</text></g><g><title>[libcrypto.so.3.0.8] (16 samples, 6.08%)</title><rect x="14.0684%" y="389" width="6.0837%" height="15" fill="rgb(246,228,12)" fg:x="37" fg:w="16"/><text x="14.3184%" y="399.50">[libcryp..</text></g><g><title>[libcrypto.so.3.0.8] (16 samples, 6.08%)</title><rect x="14.0684%" y="373" width="6.0837%" height="15" fill="rgb(213,55,15)" fg:x="37" fg:w="16"/><text x="14.3184%" y="383.50">[libcryp..</text></g><g><title>[libcrypto.so.3.0.8] (16 samples, 6.08%)</title><rect x="14.0684%" y="357" width="6.0837%" height="15" fill="rgb(209,9,3)" fg:x="37" fg:w="16"/><text x="14.3184%" y="367.50">[libcryp..</text></g><g><title>[libcrypto.so.3.0.8] (16 samples, 6.08%)</title><rect x="14.0684%" y="341" width="6.0837%" height="15" fill="rgb(230,59,30)" fg:x="37" fg:w="16"/><text x="14.3184%" y="351.50">[libcryp..</text></g><g><title>[libcrypto.so.3.0.8] (16 samples, 6.08%)</title><rect x="14.0684%" y="325" width="6.0837%" height="15" fill="rgb(209,121,21)" fg:x="37" fg:w="16"/><text x="14.3184%" y="335.50">[libcryp..</text></g><g><title>[libcrypto.so.3.0.8] (16 samples, 6.08%)</title><rect x="14.0684%" y="309" width="6.0837%" height="15" fill="rgb(220,109,13)" fg:x="37" fg:w="16"/><text x="14.3184%" y="319.50">[libcryp..</text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="19.3916%" y="293" width="0.7605%" height="15" fill="rgb(232,18,1)" fg:x="51" fg:w="2"/><text x="19.6416%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.7719%" y="277" width="0.3802%" height="15" fill="rgb(215,41,42)" fg:x="52" fg:w="1"/><text x="20.0219%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.7719%" y="261" width="0.3802%" height="15" fill="rgb(224,123,36)" fg:x="52" fg:w="1"/><text x="20.0219%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.7719%" y="245" width="0.3802%" height="15" fill="rgb(240,125,3)" fg:x="52" fg:w="1"/><text x="20.0219%" y="255.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.38%)</title><rect x="19.7719%" y="229" width="0.3802%" height="15" fill="rgb(205,98,50)" fg:x="52" fg:w="1"/><text x="20.0219%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="19.7719%" y="213" width="0.3802%" height="15" fill="rgb(205,185,37)" fg:x="52" fg:w="1"/><text x="20.0219%" y="223.50"></text></g><g><title>mausam::main::{{closure}} (27 samples, 10.27%)</title><rect x="10.2662%" y="533" width="10.2662%" height="15" fill="rgb(238,207,15)" fg:x="27" fg:w="27"/><text x="10.5162%" y="543.50">mausam::main::{..</text></g><g><title>mausam::app::run::{{closure}} (26 samples, 9.89%)</title><rect x="10.6464%" y="517" width="9.8859%" height="15" fill="rgb(213,199,42)" fg:x="28" fg:w="26"/><text x="10.8964%" y="527.50">mausam::app::r..</text></g><g><title>std::sys_common::once::futex::Once::call (18 samples, 6.84%)</title><rect x="13.6882%" y="501" width="6.8441%" height="15" fill="rgb(235,201,11)" fg:x="36" fg:w="18"/><text x="13.9382%" y="511.50">std::sys_..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (18 samples, 6.84%)</title><rect x="13.6882%" y="485" width="6.8441%" height="15" fill="rgb(207,46,11)" fg:x="36" fg:w="18"/><text x="13.9382%" y="495.50">reqwest::..</text></g><g><title>X509_STORE_set_default_paths_ex (17 samples, 6.46%)</title><rect x="14.0684%" y="469" width="6.4639%" height="15" fill="rgb(241,35,35)" fg:x="37" fg:w="17"/><text x="14.3184%" y="479.50">X509_STO..</text></g><g><title>[libcrypto.so.3.0.8] (17 samples, 6.46%)</title><rect x="14.0684%" y="453" width="6.4639%" height="15" fill="rgb(243,32,47)" fg:x="37" fg:w="17"/><text x="14.3184%" y="463.50">[libcryp..</text></g><g><title>X509_load_cert_crl_file_ex (17 samples, 6.46%)</title><rect x="14.0684%" y="437" width="6.4639%" height="15" fill="rgb(247,202,23)" fg:x="37" fg:w="17"/><text x="14.3184%" y="447.50">X509_loa..</text></g><g><title>PEM_X509_INFO_read_bio_ex (17 samples, 6.46%)</title><rect x="14.0684%" y="421" width="6.4639%" height="15" fill="rgb(219,102,11)" fg:x="37" fg:w="17"/><text x="14.3184%" y="431.50">PEM_X509..</text></g><g><title>PEM_read_bio_ex (1 samples, 0.38%)</title><rect x="20.1521%" y="405" width="0.3802%" height="15" fill="rgb(243,110,44)" fg:x="53" fg:w="1"/><text x="20.4021%" y="415.50"></text></g><g><title>EVP_DecodeUpdate (1 samples, 0.38%)</title><rect x="20.1521%" y="389" width="0.3802%" height="15" fill="rgb(222,74,54)" fg:x="53" fg:w="1"/><text x="20.4021%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.38%)</title><rect x="20.5323%" y="533" width="0.3802%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="1"/><text x="20.7823%" y="543.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 1.90%)</title><rect x="20.9125%" y="533" width="1.9011%" height="15" fill="rgb(226,22,26)" fg:x="55" fg:w="5"/><text x="21.1625%" y="543.50">p..</text></g><g><title>syscall (4 samples, 1.52%)</title><rect x="21.2928%" y="517" width="1.5209%" height="15" fill="rgb(217,163,10)" fg:x="56" fg:w="4"/><text x="21.5428%" y="527.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.38%)</title><rect x="22.8137%" y="533" width="0.3802%" height="15" fill="rgb(213,25,53)" fg:x="60" fg:w="1"/><text x="23.0637%" y="543.50"></text></g><g><title>__pthread_clockjoin_ex (1 samples, 0.38%)</title><rect x="22.8137%" y="517" width="0.3802%" height="15" fill="rgb(252,105,26)" fg:x="60" fg:w="1"/><text x="23.0637%" y="527.50"></text></g><g><title>__GI___nptl_deallocate_stack (1 samples, 0.38%)</title><rect x="22.8137%" y="501" width="0.3802%" height="15" fill="rgb(220,39,43)" fg:x="60" fg:w="1"/><text x="23.0637%" y="511.50"></text></g><g><title>__libc_start_main_alias_2 (38 samples, 14.45%)</title><rect x="10.2662%" y="613" width="14.4487%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="38"/><text x="10.5162%" y="623.50">__libc_start_main_alia..</text></g><g><title>__libc_start_call_main (38 samples, 14.45%)</title><rect x="10.2662%" y="597" width="14.4487%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="38"/><text x="10.5162%" y="607.50">__libc_start_call_main</text></g><g><title>main (38 samples, 14.45%)</title><rect x="10.2662%" y="581" width="14.4487%" height="15" fill="rgb(223,20,43)" fg:x="27" fg:w="38"/><text x="10.5162%" y="591.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (38 samples, 14.45%)</title><rect x="10.2662%" y="565" width="14.4487%" height="15" fill="rgb(229,81,49)" fg:x="27" fg:w="38"/><text x="10.5162%" y="575.50">std::sys_common::backt..</text></g><g><title>mausam::main (38 samples, 14.45%)</title><rect x="10.2662%" y="549" width="14.4487%" height="15" fill="rgb(236,28,36)" fg:x="27" fg:w="38"/><text x="10.5162%" y="559.50">mausam::main</text></g><g><title>syscall (4 samples, 1.52%)</title><rect x="23.1939%" y="533" width="1.5209%" height="15" fill="rgb(249,185,26)" fg:x="61" fg:w="4"/><text x="23.4439%" y="543.50"></text></g><g><title>dl_main (1 samples, 0.38%)</title><rect x="24.7148%" y="565" width="0.3802%" height="15" fill="rgb(249,174,33)" fg:x="65" fg:w="1"/><text x="24.9648%" y="575.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.38%)</title><rect x="24.7148%" y="549" width="0.3802%" height="15" fill="rgb(233,201,37)" fg:x="65" fg:w="1"/><text x="24.9648%" y="559.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.38%)</title><rect x="24.7148%" y="533" width="0.3802%" height="15" fill="rgb(221,78,26)" fg:x="65" fg:w="1"/><text x="24.9648%" y="543.50"></text></g><g><title>elf_machine_rela (1 samples, 0.38%)</title><rect x="24.7148%" y="517" width="0.3802%" height="15" fill="rgb(250,127,30)" fg:x="65" fg:w="1"/><text x="24.9648%" y="527.50"></text></g><g><title>resolve_map (1 samples, 0.38%)</title><rect x="24.7148%" y="501" width="0.3802%" height="15" fill="rgb(230,49,44)" fg:x="65" fg:w="1"/><text x="24.9648%" y="511.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.38%)</title><rect x="24.7148%" y="485" width="0.3802%" height="15" fill="rgb(229,67,23)" fg:x="65" fg:w="1"/><text x="24.9648%" y="495.50"></text></g><g><title>_dl_new_hash (1 samples, 0.38%)</title><rect x="24.7148%" y="469" width="0.3802%" height="15" fill="rgb(249,83,47)" fg:x="65" fg:w="1"/><text x="24.9648%" y="479.50"></text></g><g><title>_start (45 samples, 17.11%)</title><rect x="8.3650%" y="629" width="17.1103%" height="15" fill="rgb(215,43,3)" fg:x="22" fg:w="45"/><text x="8.6150%" y="639.50">_start</text></g><g><title>_dl_start (2 samples, 0.76%)</title><rect x="24.7148%" y="613" width="0.7605%" height="15" fill="rgb(238,154,13)" fg:x="65" fg:w="2"/><text x="24.9648%" y="623.50"></text></g><g><title>_dl_start_final (2 samples, 0.76%)</title><rect x="24.7148%" y="597" width="0.7605%" height="15" fill="rgb(219,56,2)" fg:x="65" fg:w="2"/><text x="24.9648%" y="607.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.76%)</title><rect x="24.7148%" y="581" width="0.7605%" height="15" fill="rgb(233,0,4)" fg:x="65" fg:w="2"/><text x="24.9648%" y="591.50"></text></g><g><title>dl_platform_init (1 samples, 0.38%)</title><rect x="25.0951%" y="565" width="0.3802%" height="15" fill="rgb(235,30,7)" fg:x="66" fg:w="1"/><text x="25.3451%" y="575.50"></text></g><g><title>init_cpu_features (1 samples, 0.38%)</title><rect x="25.0951%" y="549" width="0.3802%" height="15" fill="rgb(250,79,13)" fg:x="66" fg:w="1"/><text x="25.3451%" y="559.50"></text></g><g><title>update_active (1 samples, 0.38%)</title><rect x="25.0951%" y="533" width="0.3802%" height="15" fill="rgb(211,146,34)" fg:x="66" fg:w="1"/><text x="25.3451%" y="543.50"></text></g><g><title>async_io::driver::block_on (5 samples, 1.90%)</title><rect x="25.4753%" y="613" width="1.9011%" height="15" fill="rgb(228,22,38)" fg:x="67" fg:w="5"/><text x="25.7253%" y="623.50">a..</text></g><g><title>parking::Inner::park (5 samples, 1.90%)</title><rect x="25.4753%" y="597" width="1.9011%" height="15" fill="rgb(235,168,5)" fg:x="67" fg:w="5"/><text x="25.7253%" y="607.50">p..</text></g><g><title>syscall (5 samples, 1.90%)</title><rect x="25.4753%" y="581" width="1.9011%" height="15" fill="rgb(221,155,16)" fg:x="67" fg:w="5"/><text x="25.7253%" y="591.50">s..</text></g><g><title>mausam::app::NotifyData::show (6 samples, 2.28%)</title><rect x="25.4753%" y="629" width="2.2814%" height="15" fill="rgb(215,215,53)" fg:x="67" fg:w="6"/><text x="25.7253%" y="639.50">m..</text></g><g><title>zbus::message::Message::body_signature (1 samples, 0.38%)</title><rect x="27.3764%" y="613" width="0.3802%" height="15" fill="rgb(223,4,10)" fg:x="72" fg:w="1"/><text x="27.6264%" y="623.50"></text></g><g><title>zvariant::de::from_slice (1 samples, 0.38%)</title><rect x="27.3764%" y="597" width="0.3802%" height="15" fill="rgb(234,103,6)" fg:x="72" fg:w="1"/><text x="27.6264%" y="607.50"></text></g><g><title>&lt;&amp;mut zvariant::dbus::de::Deserializer&lt;B&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.38%)</title><rect x="27.3764%" y="581" width="0.3802%" height="15" fill="rgb(227,97,0)" fg:x="72" fg:w="1"/><text x="27.6264%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.38%)</title><rect x="27.3764%" y="565" width="0.3802%" height="15" fill="rgb(234,150,53)" fg:x="72" fg:w="1"/><text x="27.6264%" y="575.50"></text></g><g><title>&lt;&amp;mut zvariant::dbus::de::Deserializer&lt;B&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.38%)</title><rect x="27.3764%" y="549" width="0.3802%" height="15" fill="rgb(228,201,54)" fg:x="72" fg:w="1"/><text x="27.6264%" y="559.50"></text></g><g><title>&lt;zvariant::value::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.38%)</title><rect x="27.3764%" y="533" width="0.3802%" height="15" fill="rgb(222,22,37)" fg:x="72" fg:w="1"/><text x="27.6264%" y="543.50"></text></g><g><title>&lt;zvariant::dbus::de::ValueDeserializer&lt;B&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.38%)</title><rect x="27.3764%" y="517" width="0.3802%" height="15" fill="rgb(237,53,32)" fg:x="72" fg:w="1"/><text x="27.6264%" y="527.50"></text></g><g><title>&lt;&amp;mut zvariant::dbus::de::Deserializer&lt;B&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.38%)</title><rect x="27.3764%" y="501" width="0.3802%" height="15" fill="rgb(233,25,53)" fg:x="72" fg:w="1"/><text x="27.6264%" y="511.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.38%)</title><rect x="27.3764%" y="485" width="0.3802%" height="15" fill="rgb(210,40,34)" fg:x="72" fg:w="1"/><text x="27.6264%" y="495.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.38%)</title><rect x="27.3764%" y="469" width="0.3802%" height="15" fill="rgb(241,220,44)" fg:x="72" fg:w="1"/><text x="27.6264%" y="479.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (1 samples, 0.38%)</title><rect x="27.7567%" y="629" width="0.3802%" height="15" fill="rgb(235,28,35)" fg:x="73" fg:w="1"/><text x="28.0067%" y="639.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.38%)</title><rect x="27.7567%" y="613" width="0.3802%" height="15" fill="rgb(210,56,17)" fg:x="73" fg:w="1"/><text x="28.0067%" y="623.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (1 samples, 0.38%)</title><rect x="27.7567%" y="597" width="0.3802%" height="15" fill="rgb(224,130,29)" fg:x="73" fg:w="1"/><text x="28.0067%" y="607.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.38%)</title><rect x="27.7567%" y="581" width="0.3802%" height="15" fill="rgb(235,212,8)" fg:x="73" fg:w="1"/><text x="28.0067%" y="591.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (1 samples, 0.38%)</title><rect x="27.7567%" y="565" width="0.3802%" height="15" fill="rgb(223,33,50)" fg:x="73" fg:w="1"/><text x="28.0067%" y="575.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (1 samples, 0.38%)</title><rect x="27.7567%" y="549" width="0.3802%" height="15" fill="rgb(219,149,13)" fg:x="73" fg:w="1"/><text x="28.0067%" y="559.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (1 samples, 0.38%)</title><rect x="27.7567%" y="533" width="0.3802%" height="15" fill="rgb(250,156,29)" fg:x="73" fg:w="1"/><text x="28.0067%" y="543.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="517" width="0.3802%" height="15" fill="rgb(216,193,19)" fg:x="73" fg:w="1"/><text x="28.0067%" y="527.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="501" width="0.3802%" height="15" fill="rgb(216,135,14)" fg:x="73" fg:w="1"/><text x="28.0067%" y="511.50"></text></g><g><title>[libssl.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="485" width="0.3802%" height="15" fill="rgb(241,47,5)" fg:x="73" fg:w="1"/><text x="28.0067%" y="495.50"></text></g><g><title>X509_verify_cert (1 samples, 0.38%)</title><rect x="27.7567%" y="469" width="0.3802%" height="15" fill="rgb(233,42,35)" fg:x="73" fg:w="1"/><text x="28.0067%" y="479.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="453" width="0.3802%" height="15" fill="rgb(231,13,6)" fg:x="73" fg:w="1"/><text x="28.0067%" y="463.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="437" width="0.3802%" height="15" fill="rgb(207,181,40)" fg:x="73" fg:w="1"/><text x="28.0067%" y="447.50"></text></g><g><title>X509_STORE_CTX_get1_issuer (1 samples, 0.38%)</title><rect x="27.7567%" y="421" width="0.3802%" height="15" fill="rgb(254,173,49)" fg:x="73" fg:w="1"/><text x="28.0067%" y="431.50"></text></g><g><title>X509_STORE_CTX_get_by_subject (1 samples, 0.38%)</title><rect x="27.7567%" y="405" width="0.3802%" height="15" fill="rgb(221,1,38)" fg:x="73" fg:w="1"/><text x="28.0067%" y="415.50"></text></g><g><title>X509_OBJECT_retrieve_by_subject (1 samples, 0.38%)</title><rect x="27.7567%" y="389" width="0.3802%" height="15" fill="rgb(206,124,46)" fg:x="73" fg:w="1"/><text x="28.0067%" y="399.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="373" width="0.3802%" height="15" fill="rgb(249,21,11)" fg:x="73" fg:w="1"/><text x="28.0067%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="357" width="0.3802%" height="15" fill="rgb(222,201,40)" fg:x="73" fg:w="1"/><text x="28.0067%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="27.7567%" y="341" width="0.3802%" height="15" fill="rgb(235,61,29)" fg:x="73" fg:w="1"/><text x="28.0067%" y="351.50"></text></g><g><title>X509_NAME_cmp (1 samples, 0.38%)</title><rect x="27.7567%" y="325" width="0.3802%" height="15" fill="rgb(219,207,3)" fg:x="73" fg:w="1"/><text x="28.0067%" y="335.50"></text></g><g><title>mausam::main::{{closure}} (1 samples, 0.38%)</title><rect x="28.1369%" y="629" width="0.3802%" height="15" fill="rgb(222,56,46)" fg:x="74" fg:w="1"/><text x="28.3869%" y="639.50"></text></g><g><title>mausam::app::run::{{closure}} (1 samples, 0.38%)</title><rect x="28.1369%" y="613" width="0.3802%" height="15" fill="rgb(239,76,54)" fg:x="74" fg:w="1"/><text x="28.3869%" y="623.50"></text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (1 samples, 0.38%)</title><rect x="28.1369%" y="597" width="0.3802%" height="15" fill="rgb(231,124,27)" fg:x="74" fg:w="1"/><text x="28.3869%" y="607.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (1 samples, 0.38%)</title><rect x="28.1369%" y="581" width="0.3802%" height="15" fill="rgb(249,195,6)" fg:x="74" fg:w="1"/><text x="28.3869%" y="591.50"></text></g><g><title>X509_STORE_set_default_paths_ex (1 samples, 0.38%)</title><rect x="28.1369%" y="565" width="0.3802%" height="15" fill="rgb(237,174,47)" fg:x="74" fg:w="1"/><text x="28.3869%" y="575.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="549" width="0.3802%" height="15" fill="rgb(206,201,31)" fg:x="74" fg:w="1"/><text x="28.3869%" y="559.50"></text></g><g><title>X509_load_cert_crl_file_ex (1 samples, 0.38%)</title><rect x="28.1369%" y="533" width="0.3802%" height="15" fill="rgb(231,57,52)" fg:x="74" fg:w="1"/><text x="28.3869%" y="543.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (1 samples, 0.38%)</title><rect x="28.1369%" y="517" width="0.3802%" height="15" fill="rgb(248,177,22)" fg:x="74" fg:w="1"/><text x="28.3869%" y="527.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.38%)</title><rect x="28.1369%" y="501" width="0.3802%" height="15" fill="rgb(215,211,37)" fg:x="74" fg:w="1"/><text x="28.3869%" y="511.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="485" width="0.3802%" height="15" fill="rgb(241,128,51)" fg:x="74" fg:w="1"/><text x="28.3869%" y="495.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="469" width="0.3802%" height="15" fill="rgb(227,165,31)" fg:x="74" fg:w="1"/><text x="28.3869%" y="479.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="453" width="0.3802%" height="15" fill="rgb(228,167,24)" fg:x="74" fg:w="1"/><text x="28.3869%" y="463.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="437" width="0.3802%" height="15" fill="rgb(228,143,12)" fg:x="74" fg:w="1"/><text x="28.3869%" y="447.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="421" width="0.3802%" height="15" fill="rgb(249,149,8)" fg:x="74" fg:w="1"/><text x="28.3869%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="405" width="0.3802%" height="15" fill="rgb(243,35,44)" fg:x="74" fg:w="1"/><text x="28.3869%" y="415.50"></text></g><g><title>OSSL_DECODER_from_data (1 samples, 0.38%)</title><rect x="28.1369%" y="389" width="0.3802%" height="15" fill="rgb(246,89,9)" fg:x="74" fg:w="1"/><text x="28.3869%" y="399.50"></text></g><g><title>OSSL_DECODER_from_bio (1 samples, 0.38%)</title><rect x="28.1369%" y="373" width="0.3802%" height="15" fill="rgb(233,213,13)" fg:x="74" fg:w="1"/><text x="28.3869%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="357" width="0.3802%" height="15" fill="rgb(233,141,41)" fg:x="74" fg:w="1"/><text x="28.3869%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="341" width="0.3802%" height="15" fill="rgb(239,167,4)" fg:x="74" fg:w="1"/><text x="28.3869%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="325" width="0.3802%" height="15" fill="rgb(209,217,16)" fg:x="74" fg:w="1"/><text x="28.3869%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="309" width="0.3802%" height="15" fill="rgb(219,88,35)" fg:x="74" fg:w="1"/><text x="28.3869%" y="319.50"></text></g><g><title>d2i_RSA_PUBKEY (1 samples, 0.38%)</title><rect x="28.1369%" y="293" width="0.3802%" height="15" fill="rgb(220,193,23)" fg:x="74" fg:w="1"/><text x="28.3869%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="277" width="0.3802%" height="15" fill="rgb(230,90,52)" fg:x="74" fg:w="1"/><text x="28.3869%" y="287.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.38%)</title><rect x="28.1369%" y="261" width="0.3802%" height="15" fill="rgb(252,106,19)" fg:x="74" fg:w="1"/><text x="28.3869%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="245" width="0.3802%" height="15" fill="rgb(206,74,20)" fg:x="74" fg:w="1"/><text x="28.3869%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="229" width="0.3802%" height="15" fill="rgb(230,138,44)" fg:x="74" fg:w="1"/><text x="28.3869%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="213" width="0.3802%" height="15" fill="rgb(235,182,43)" fg:x="74" fg:w="1"/><text x="28.3869%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="197" width="0.3802%" height="15" fill="rgb(242,16,51)" fg:x="74" fg:w="1"/><text x="28.3869%" y="207.50"></text></g><g><title>ASN1_item_d2i_ex (1 samples, 0.38%)</title><rect x="28.1369%" y="181" width="0.3802%" height="15" fill="rgb(248,9,4)" fg:x="74" fg:w="1"/><text x="28.3869%" y="191.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="165" width="0.3802%" height="15" fill="rgb(210,31,22)" fg:x="74" fg:w="1"/><text x="28.3869%" y="175.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="149" width="0.3802%" height="15" fill="rgb(239,54,39)" fg:x="74" fg:w="1"/><text x="28.3869%" y="159.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="133" width="0.3802%" height="15" fill="rgb(230,99,41)" fg:x="74" fg:w="1"/><text x="28.3869%" y="143.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="117" width="0.3802%" height="15" fill="rgb(253,106,12)" fg:x="74" fg:w="1"/><text x="28.3869%" y="127.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="28.1369%" y="101" width="0.3802%" height="15" fill="rgb(213,46,41)" fg:x="74" fg:w="1"/><text x="28.3869%" y="111.50"></text></g><g><title>BN_new (1 samples, 0.38%)</title><rect x="28.1369%" y="85" width="0.3802%" height="15" fill="rgb(215,133,35)" fg:x="74" fg:w="1"/><text x="28.3869%" y="95.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.38%)</title><rect x="28.1369%" y="69" width="0.3802%" height="15" fill="rgb(213,28,5)" fg:x="74" fg:w="1"/><text x="28.3869%" y="79.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="28.1369%" y="53" width="0.3802%" height="15" fill="rgb(215,77,49)" fg:x="74" fg:w="1"/><text x="28.3869%" y="63.50"></text></g><g><title>OPENSSL_sk_new_reserve (1 samples, 0.38%)</title><rect x="28.5171%" y="293" width="0.3802%" height="15" fill="rgb(248,100,22)" fg:x="75" fg:w="1"/><text x="28.7671%" y="303.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.38%)</title><rect x="28.5171%" y="277" width="0.3802%" height="15" fill="rgb(208,67,9)" fg:x="75" fg:w="1"/><text x="28.7671%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="28.5171%" y="261" width="0.3802%" height="15" fill="rgb(219,133,21)" fg:x="75" fg:w="1"/><text x="28.7671%" y="271.50"></text></g><g><title>ASN1_item_ex_d2i (3 samples, 1.14%)</title><rect x="28.5171%" y="373" width="1.1407%" height="15" fill="rgb(246,46,29)" fg:x="75" fg:w="3"/><text x="28.7671%" y="383.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 1.14%)</title><rect x="28.5171%" y="357" width="1.1407%" height="15" fill="rgb(246,185,52)" fg:x="75" fg:w="3"/><text x="28.7671%" y="367.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 1.14%)</title><rect x="28.5171%" y="341" width="1.1407%" height="15" fill="rgb(252,136,11)" fg:x="75" fg:w="3"/><text x="28.7671%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 1.14%)</title><rect x="28.5171%" y="325" width="1.1407%" height="15" fill="rgb(219,138,53)" fg:x="75" fg:w="3"/><text x="28.7671%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 1.14%)</title><rect x="28.5171%" y="309" width="1.1407%" height="15" fill="rgb(211,51,23)" fg:x="75" fg:w="3"/><text x="28.7671%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="28.8973%" y="293" width="0.7605%" height="15" fill="rgb(247,221,28)" fg:x="76" fg:w="2"/><text x="29.1473%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="28.8973%" y="277" width="0.7605%" height="15" fill="rgb(251,222,45)" fg:x="76" fg:w="2"/><text x="29.1473%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="29.2776%" y="261" width="0.3802%" height="15" fill="rgb(217,162,53)" fg:x="77" fg:w="1"/><text x="29.5276%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="29.2776%" y="245" width="0.3802%" height="15" fill="rgb(229,93,14)" fg:x="77" fg:w="1"/><text x="29.5276%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="29.2776%" y="229" width="0.3802%" height="15" fill="rgb(209,67,49)" fg:x="77" fg:w="1"/><text x="29.5276%" y="239.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (6 samples, 2.28%)</title><rect x="29.6578%" y="357" width="2.2814%" height="15" fill="rgb(213,87,29)" fg:x="78" fg:w="6"/><text x="29.9078%" y="367.50">E..</text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 2.28%)</title><rect x="29.6578%" y="341" width="2.2814%" height="15" fill="rgb(205,151,52)" fg:x="78" fg:w="6"/><text x="29.9078%" y="351.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 2.28%)</title><rect x="29.6578%" y="325" width="2.2814%" height="15" fill="rgb(253,215,39)" fg:x="78" fg:w="6"/><text x="29.9078%" y="335.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="31.5589%" y="309" width="0.3802%" height="15" fill="rgb(221,220,41)" fg:x="83" fg:w="1"/><text x="31.8089%" y="319.50"></text></g><g><title>OSSL_DECODER_do_all_provided (1 samples, 0.38%)</title><rect x="31.9392%" y="341" width="0.3802%" height="15" fill="rgb(218,133,21)" fg:x="84" fg:w="1"/><text x="32.1892%" y="351.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="31.9392%" y="325" width="0.3802%" height="15" fill="rgb(221,193,43)" fg:x="84" fg:w="1"/><text x="32.1892%" y="335.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="31.9392%" y="309" width="0.3802%" height="15" fill="rgb(240,128,52)" fg:x="84" fg:w="1"/><text x="32.1892%" y="319.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="31.9392%" y="293" width="0.3802%" height="15" fill="rgb(253,114,12)" fg:x="84" fg:w="1"/><text x="32.1892%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="31.9392%" y="277" width="0.3802%" height="15" fill="rgb(215,223,47)" fg:x="84" fg:w="1"/><text x="32.1892%" y="287.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.38%)</title><rect x="31.9392%" y="261" width="0.3802%" height="15" fill="rgb(248,225,23)" fg:x="84" fg:w="1"/><text x="32.1892%" y="271.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.38%)</title><rect x="31.9392%" y="245" width="0.3802%" height="15" fill="rgb(250,108,0)" fg:x="84" fg:w="1"/><text x="32.1892%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="32.3194%" y="293" width="0.3802%" height="15" fill="rgb(228,208,7)" fg:x="85" fg:w="1"/><text x="32.5694%" y="303.50"></text></g><g><title>CRYPTO_THREAD_read_lock (4 samples, 1.52%)</title><rect x="32.3194%" y="309" width="1.5209%" height="15" fill="rgb(244,45,10)" fg:x="85" fg:w="4"/><text x="32.5694%" y="319.50"></text></g><g><title>___pthread_rwlock_rdlock (3 samples, 1.14%)</title><rect x="32.6996%" y="293" width="1.1407%" height="15" fill="rgb(207,125,25)" fg:x="86" fg:w="3"/><text x="32.9496%" y="303.50"></text></g><g><title>CRYPTO_THREAD_unlock (3 samples, 1.14%)</title><rect x="33.8403%" y="309" width="1.1407%" height="15" fill="rgb(210,195,18)" fg:x="89" fg:w="3"/><text x="34.0903%" y="319.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 1.14%)</title><rect x="33.8403%" y="293" width="1.1407%" height="15" fill="rgb(249,80,12)" fg:x="89" fg:w="3"/><text x="34.0903%" y="303.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.76%)</title><rect x="34.9810%" y="293" width="0.7605%" height="15" fill="rgb(221,65,9)" fg:x="92" fg:w="2"/><text x="35.2310%" y="303.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.76%)</title><rect x="34.9810%" y="277" width="0.7605%" height="15" fill="rgb(235,49,36)" fg:x="92" fg:w="2"/><text x="35.2310%" y="287.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 0.76%)</title><rect x="35.7414%" y="293" width="0.7605%" height="15" fill="rgb(225,32,20)" fg:x="94" fg:w="2"/><text x="35.9914%" y="303.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.76%)</title><rect x="35.7414%" y="277" width="0.7605%" height="15" fill="rgb(215,141,46)" fg:x="94" fg:w="2"/><text x="35.9914%" y="287.50"></text></g><g><title>CRYPTO_get_ex_data (1 samples, 0.38%)</title><rect x="36.5019%" y="293" width="0.3802%" height="15" fill="rgb(250,160,47)" fg:x="96" fg:w="1"/><text x="36.7519%" y="303.50"></text></g><g><title>OPENSSL_strnlen (1 samples, 0.38%)</title><rect x="36.8821%" y="277" width="0.3802%" height="15" fill="rgb(216,222,40)" fg:x="97" fg:w="1"/><text x="37.1321%" y="287.50"></text></g><g><title>CRYPTO_strndup (2 samples, 0.76%)</title><rect x="36.8821%" y="293" width="0.7605%" height="15" fill="rgb(234,217,39)" fg:x="97" fg:w="2"/><text x="37.1321%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="37.2624%" y="277" width="0.3802%" height="15" fill="rgb(207,178,40)" fg:x="98" fg:w="1"/><text x="37.5124%" y="287.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (19 samples, 7.22%)</title><rect x="31.9392%" y="357" width="7.2243%" height="15" fill="rgb(221,136,13)" fg:x="84" fg:w="19"/><text x="32.1892%" y="367.50">OSSL_DECOD..</text></g><g><title>OSSL_DECODER_is_a (18 samples, 6.84%)</title><rect x="32.3194%" y="341" width="6.8441%" height="15" fill="rgb(249,199,10)" fg:x="85" fg:w="18"/><text x="32.5694%" y="351.50">OSSL_DECO..</text></g><g><title>[libcrypto.so.3.0.8] (18 samples, 6.84%)</title><rect x="32.3194%" y="325" width="6.8441%" height="15" fill="rgb(249,222,13)" fg:x="85" fg:w="18"/><text x="32.5694%" y="335.50">[libcrypt..</text></g><g><title>[libcrypto.so.3.0.8] (11 samples, 4.18%)</title><rect x="34.9810%" y="309" width="4.1825%" height="15" fill="rgb(244,185,38)" fg:x="92" fg:w="11"/><text x="35.2310%" y="319.50">[libc..</text></g><g><title>OPENSSL_LH_retrieve (4 samples, 1.52%)</title><rect x="37.6426%" y="293" width="1.5209%" height="15" fill="rgb(236,202,9)" fg:x="99" fg:w="4"/><text x="37.8926%" y="303.50"></text></g><g><title>[libcrypto.so.3.0.8] (3 samples, 1.14%)</title><rect x="38.0228%" y="277" width="1.1407%" height="15" fill="rgb(250,229,37)" fg:x="100" fg:w="3"/><text x="38.2728%" y="287.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="39.5437%" y="261" width="0.3802%" height="15" fill="rgb(206,174,23)" fg:x="104" fg:w="1"/><text x="39.7937%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="39.5437%" y="245" width="0.3802%" height="15" fill="rgb(211,33,43)" fg:x="104" fg:w="1"/><text x="39.7937%" y="255.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.38%)</title><rect x="39.9240%" y="245" width="0.3802%" height="15" fill="rgb(245,58,50)" fg:x="105" fg:w="1"/><text x="40.1740%" y="255.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.38%)</title><rect x="39.9240%" y="229" width="0.3802%" height="15" fill="rgb(244,68,36)" fg:x="105" fg:w="1"/><text x="40.1740%" y="239.50"></text></g><g><title>CRYPTO_strndup (2 samples, 0.76%)</title><rect x="40.3042%" y="245" width="0.7605%" height="15" fill="rgb(232,229,15)" fg:x="106" fg:w="2"/><text x="40.5542%" y="255.50"></text></g><g><title>OPENSSL_strnlen (2 samples, 0.76%)</title><rect x="40.3042%" y="229" width="0.7605%" height="15" fill="rgb(254,30,23)" fg:x="106" fg:w="2"/><text x="40.5542%" y="239.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (31 samples, 11.79%)</title><rect x="29.6578%" y="373" width="11.7871%" height="15" fill="rgb(235,160,14)" fg:x="78" fg:w="31"/><text x="29.9078%" y="383.50">OSSL_DECODER_CTX_..</text></g><g><title>OSSL_DECODER_do_all_provided (6 samples, 2.28%)</title><rect x="39.1635%" y="357" width="2.2814%" height="15" fill="rgb(212,155,44)" fg:x="103" fg:w="6"/><text x="39.4135%" y="367.50">O..</text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 2.28%)</title><rect x="39.1635%" y="341" width="2.2814%" height="15" fill="rgb(226,2,50)" fg:x="103" fg:w="6"/><text x="39.4135%" y="351.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 2.28%)</title><rect x="39.1635%" y="325" width="2.2814%" height="15" fill="rgb(234,177,6)" fg:x="103" fg:w="6"/><text x="39.4135%" y="335.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (6 samples, 2.28%)</title><rect x="39.1635%" y="309" width="2.2814%" height="15" fill="rgb(217,24,9)" fg:x="103" fg:w="6"/><text x="39.4135%" y="319.50">[..</text></g><g><title>OSSL_DECODER_is_a (5 samples, 1.90%)</title><rect x="39.5437%" y="293" width="1.9011%" height="15" fill="rgb(220,13,46)" fg:x="104" fg:w="5"/><text x="39.7937%" y="303.50">O..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 1.90%)</title><rect x="39.5437%" y="277" width="1.9011%" height="15" fill="rgb(239,221,27)" fg:x="104" fg:w="5"/><text x="39.7937%" y="287.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (4 samples, 1.52%)</title><rect x="39.9240%" y="261" width="1.5209%" height="15" fill="rgb(222,198,25)" fg:x="105" fg:w="4"/><text x="40.1740%" y="271.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.38%)</title><rect x="41.0646%" y="245" width="0.3802%" height="15" fill="rgb(211,99,13)" fg:x="108" fg:w="1"/><text x="41.3146%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="41.0646%" y="229" width="0.3802%" height="15" fill="rgb(232,111,31)" fg:x="108" fg:w="1"/><text x="41.3146%" y="239.50"></text></g><g><title>OPENSSL_strcasecmp (1 samples, 0.38%)</title><rect x="41.0646%" y="213" width="0.3802%" height="15" fill="rgb(245,82,37)" fg:x="108" fg:w="1"/><text x="41.3146%" y="223.50"></text></g><g><title>BIO_new_ex (1 samples, 0.38%)</title><rect x="41.4449%" y="277" width="0.3802%" height="15" fill="rgb(227,149,46)" fg:x="109" fg:w="1"/><text x="41.6949%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="41.4449%" y="261" width="0.3802%" height="15" fill="rgb(218,36,50)" fg:x="109" fg:w="1"/><text x="41.6949%" y="271.50"></text></g><g><title>BIO_set_init (1 samples, 0.38%)</title><rect x="41.4449%" y="245" width="0.3802%" height="15" fill="rgb(226,80,48)" fg:x="109" fg:w="1"/><text x="41.6949%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="41.8251%" y="277" width="0.7605%" height="15" fill="rgb(238,224,15)" fg:x="110" fg:w="2"/><text x="42.0751%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="41.8251%" y="261" width="0.7605%" height="15" fill="rgb(241,136,10)" fg:x="110" fg:w="2"/><text x="42.0751%" y="271.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="41.8251%" y="245" width="0.7605%" height="15" fill="rgb(208,32,45)" fg:x="110" fg:w="2"/><text x="42.0751%" y="255.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (2 samples, 0.76%)</title><rect x="41.8251%" y="229" width="0.7605%" height="15" fill="rgb(207,135,9)" fg:x="110" fg:w="2"/><text x="42.0751%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="41.8251%" y="213" width="0.7605%" height="15" fill="rgb(206,86,44)" fg:x="110" fg:w="2"/><text x="42.0751%" y="223.50"></text></g><g><title>OPENSSL_LH_doall_arg (2 samples, 0.76%)</title><rect x="41.8251%" y="197" width="0.7605%" height="15" fill="rgb(245,177,15)" fg:x="110" fg:w="2"/><text x="42.0751%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="42.2053%" y="181" width="0.3802%" height="15" fill="rgb(206,64,50)" fg:x="111" fg:w="1"/><text x="42.4553%" y="191.50"></text></g><g><title>OSSL_DECODER_from_data (5 samples, 1.90%)</title><rect x="41.4449%" y="373" width="1.9011%" height="15" fill="rgb(234,36,40)" fg:x="109" fg:w="5"/><text x="41.6949%" y="383.50">O..</text></g><g><title>OSSL_DECODER_from_bio (5 samples, 1.90%)</title><rect x="41.4449%" y="357" width="1.9011%" height="15" fill="rgb(213,64,8)" fg:x="109" fg:w="5"/><text x="41.6949%" y="367.50">O..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 1.90%)</title><rect x="41.4449%" y="341" width="1.9011%" height="15" fill="rgb(210,75,36)" fg:x="109" fg:w="5"/><text x="41.6949%" y="351.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 1.90%)</title><rect x="41.4449%" y="325" width="1.9011%" height="15" fill="rgb(229,88,21)" fg:x="109" fg:w="5"/><text x="41.6949%" y="335.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 1.90%)</title><rect x="41.4449%" y="309" width="1.9011%" height="15" fill="rgb(252,204,47)" fg:x="109" fg:w="5"/><text x="41.6949%" y="319.50">[..</text></g><g><title>[libcrypto.so.3.0.8] (5 samples, 1.90%)</title><rect x="41.4449%" y="293" width="1.9011%" height="15" fill="rgb(208,77,27)" fg:x="109" fg:w="5"/><text x="41.6949%" y="303.50">[..</text></g><g><title>d2i_EC_PUBKEY (2 samples, 0.76%)</title><rect x="42.5856%" y="277" width="0.7605%" height="15" fill="rgb(221,76,26)" fg:x="112" fg:w="2"/><text x="42.8356%" y="287.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="42.5856%" y="261" width="0.7605%" height="15" fill="rgb(225,139,18)" fg:x="112" fg:w="2"/><text x="42.8356%" y="271.50"></text></g><g><title>ASN1_item_d2i_ex (2 samples, 0.76%)</title><rect x="42.5856%" y="245" width="0.7605%" height="15" fill="rgb(230,137,11)" fg:x="112" fg:w="2"/><text x="42.8356%" y="255.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="42.5856%" y="229" width="0.7605%" height="15" fill="rgb(212,28,1)" fg:x="112" fg:w="2"/><text x="42.8356%" y="239.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="42.5856%" y="213" width="0.7605%" height="15" fill="rgb(248,164,17)" fg:x="112" fg:w="2"/><text x="42.8356%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="42.5856%" y="197" width="0.7605%" height="15" fill="rgb(222,171,42)" fg:x="112" fg:w="2"/><text x="42.8356%" y="207.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="42.5856%" y="181" width="0.7605%" height="15" fill="rgb(243,84,45)" fg:x="112" fg:w="2"/><text x="42.8356%" y="191.50"></text></g><g><title>o2i_ECPublicKey (2 samples, 0.76%)</title><rect x="42.5856%" y="165" width="0.7605%" height="15" fill="rgb(252,49,23)" fg:x="112" fg:w="2"/><text x="42.8356%" y="175.50"></text></g><g><title>EC_KEY_oct2key (2 samples, 0.76%)</title><rect x="42.5856%" y="149" width="0.7605%" height="15" fill="rgb(215,19,7)" fg:x="112" fg:w="2"/><text x="42.8356%" y="159.50"></text></g><g><title>EC_POINT_oct2point (2 samples, 0.76%)</title><rect x="42.5856%" y="133" width="0.7605%" height="15" fill="rgb(238,81,41)" fg:x="112" fg:w="2"/><text x="42.8356%" y="143.50"></text></g><g><title>EC_POINT_set_affine_coordinates (2 samples, 0.76%)</title><rect x="42.5856%" y="117" width="0.7605%" height="15" fill="rgb(210,199,37)" fg:x="112" fg:w="2"/><text x="42.8356%" y="127.50"></text></g><g><title>[libcrypto.so.3.0.8] (2 samples, 0.76%)</title><rect x="42.5856%" y="101" width="0.7605%" height="15" fill="rgb(244,192,49)" fg:x="112" fg:w="2"/><text x="42.8356%" y="111.50"></text></g><g><title>BN_nnmod (2 samples, 0.76%)</title><rect x="42.5856%" y="85" width="0.7605%" height="15" fill="rgb(226,211,11)" fg:x="112" fg:w="2"/><text x="42.8356%" y="95.50"></text></g><g><title>BN_div (2 samples, 0.76%)</title><rect x="42.5856%" y="69" width="0.7605%" height="15" fill="rgb(236,162,54)" fg:x="112" fg:w="2"/><text x="42.8356%" y="79.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="42.9658%" y="53" width="0.3802%" height="15" fill="rgb(220,229,9)" fg:x="113" fg:w="1"/><text x="43.2158%" y="63.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="42.9658%" y="37" width="0.3802%" height="15" fill="rgb(250,87,22)" fg:x="113" fg:w="1"/><text x="43.2158%" y="47.50"></text></g><g><title>mausam::main (40 samples, 15.21%)</title><rect x="28.5171%" y="629" width="15.2091%" height="15" fill="rgb(239,43,17)" fg:x="75" fg:w="40"/><text x="28.7671%" y="639.50">mausam::main</text></g><g><title>mausam::main::{{closure}} (40 samples, 15.21%)</title><rect x="28.5171%" y="613" width="15.2091%" height="15" fill="rgb(231,177,25)" fg:x="75" fg:w="40"/><text x="28.7671%" y="623.50">mausam::main::{{closure..</text></g><g><title>mausam::app::run::{{closure}} (40 samples, 15.21%)</title><rect x="28.5171%" y="597" width="15.2091%" height="15" fill="rgb(219,179,1)" fg:x="75" fg:w="40"/><text x="28.7671%" y="607.50">mausam::app::run::{{clo..</text></g><g><title>mausam::app::fetch_weather_notify::{{closure}} (40 samples, 15.21%)</title><rect x="28.5171%" y="581" width="15.2091%" height="15" fill="rgb(238,219,53)" fg:x="75" fg:w="40"/><text x="28.7671%" y="591.50">mausam::app::fetch_weat..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (40 samples, 15.21%)</title><rect x="28.5171%" y="565" width="15.2091%" height="15" fill="rgb(232,167,36)" fg:x="75" fg:w="40"/><text x="28.7671%" y="575.50">reqwest::async_impl::cl..</text></g><g><title>X509_STORE_set_default_paths_ex (40 samples, 15.21%)</title><rect x="28.5171%" y="549" width="15.2091%" height="15" fill="rgb(244,19,51)" fg:x="75" fg:w="40"/><text x="28.7671%" y="559.50">X509_STORE_set_default_..</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="533" width="15.2091%" height="15" fill="rgb(224,6,22)" fg:x="75" fg:w="40"/><text x="28.7671%" y="543.50">[libcrypto.so.3.0.8]</text></g><g><title>X509_load_cert_crl_file_ex (40 samples, 15.21%)</title><rect x="28.5171%" y="517" width="15.2091%" height="15" fill="rgb(224,145,5)" fg:x="75" fg:w="40"/><text x="28.7671%" y="527.50">X509_load_cert_crl_file..</text></g><g><title>PEM_X509_INFO_read_bio_ex (40 samples, 15.21%)</title><rect x="28.5171%" y="501" width="15.2091%" height="15" fill="rgb(234,130,49)" fg:x="75" fg:w="40"/><text x="28.7671%" y="511.50">PEM_X509_INFO_read_bio_..</text></g><g><title>ASN1_item_d2i_ex (40 samples, 15.21%)</title><rect x="28.5171%" y="485" width="15.2091%" height="15" fill="rgb(254,6,2)" fg:x="75" fg:w="40"/><text x="28.7671%" y="495.50">ASN1_item_d2i_ex</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="469" width="15.2091%" height="15" fill="rgb(208,96,46)" fg:x="75" fg:w="40"/><text x="28.7671%" y="479.50">[libcrypto.so.3.0.8]</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="453" width="15.2091%" height="15" fill="rgb(239,3,39)" fg:x="75" fg:w="40"/><text x="28.7671%" y="463.50">[libcrypto.so.3.0.8]</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="437" width="15.2091%" height="15" fill="rgb(233,210,1)" fg:x="75" fg:w="40"/><text x="28.7671%" y="447.50">[libcrypto.so.3.0.8]</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="421" width="15.2091%" height="15" fill="rgb(244,137,37)" fg:x="75" fg:w="40"/><text x="28.7671%" y="431.50">[libcrypto.so.3.0.8]</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="405" width="15.2091%" height="15" fill="rgb(240,136,2)" fg:x="75" fg:w="40"/><text x="28.7671%" y="415.50">[libcrypto.so.3.0.8]</text></g><g><title>[libcrypto.so.3.0.8] (40 samples, 15.21%)</title><rect x="28.5171%" y="389" width="15.2091%" height="15" fill="rgb(239,18,37)" fg:x="75" fg:w="40"/><text x="28.7671%" y="399.50">[libcrypto.so.3.0.8]</text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="43.3460%" y="373" width="0.3802%" height="15" fill="rgb(218,185,22)" fg:x="114" fg:w="1"/><text x="43.5960%" y="383.50"></text></g><g><title>ASN1_STRING_set (1 samples, 0.38%)</title><rect x="43.3460%" y="357" width="0.3802%" height="15" fill="rgb(225,218,4)" fg:x="114" fg:w="1"/><text x="43.5960%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="43.3460%" y="341" width="0.3802%" height="15" fill="rgb(230,182,32)" fg:x="114" fg:w="1"/><text x="43.5960%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="43.3460%" y="325" width="0.3802%" height="15" fill="rgb(242,56,43)" fg:x="114" fg:w="1"/><text x="43.5960%" y="335.50"></text></g><g><title>syscall (1 samples, 0.38%)</title><rect x="43.7262%" y="629" width="0.3802%" height="15" fill="rgb(233,99,24)" fg:x="115" fg:w="1"/><text x="43.9762%" y="639.50"></text></g><g><title>mausam (106 samples, 40.30%)</title><rect x="4.1825%" y="645" width="40.3042%" height="15" fill="rgb(234,209,42)" fg:x="11" fg:w="106"/><text x="4.4325%" y="655.50">mausam</text></g><g><title>zbus::connection_builder::ConnectionBuilder::build::{{closure}} (1 samples, 0.38%)</title><rect x="44.1065%" y="629" width="0.3802%" height="15" fill="rgb(227,7,12)" fg:x="116" fg:w="1"/><text x="44.3565%" y="639.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (1 samples, 0.38%)</title><rect x="44.1065%" y="613" width="0.3802%" height="15" fill="rgb(245,203,43)" fg:x="116" fg:w="1"/><text x="44.3565%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::get (1 samples, 0.38%)</title><rect x="44.1065%" y="597" width="0.3802%" height="15" fill="rgb(238,205,33)" fg:x="116" fg:w="1"/><text x="44.3565%" y="607.50"></text></g><g><title>async_io::driver::unparker (1 samples, 0.38%)</title><rect x="44.1065%" y="581" width="0.3802%" height="15" fill="rgb(231,56,7)" fg:x="116" fg:w="1"/><text x="44.3565%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.38%)</title><rect x="44.1065%" y="565" width="0.3802%" height="15" fill="rgb(244,186,29)" fg:x="116" fg:w="1"/><text x="44.3565%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.38%)</title><rect x="44.1065%" y="549" width="0.3802%" height="15" fill="rgb(234,111,31)" fg:x="116" fg:w="1"/><text x="44.3565%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.38%)</title><rect x="44.1065%" y="533" width="0.3802%" height="15" fill="rgb(241,149,10)" fg:x="116" fg:w="1"/><text x="44.3565%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.38%)</title><rect x="44.1065%" y="517" width="0.3802%" height="15" fill="rgb(249,206,44)" fg:x="116" fg:w="1"/><text x="44.3565%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.38%)</title><rect x="44.1065%" y="501" width="0.3802%" height="15" fill="rgb(251,153,30)" fg:x="116" fg:w="1"/><text x="44.3565%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.38%)</title><rect x="44.1065%" y="485" width="0.3802%" height="15" fill="rgb(239,152,38)" fg:x="116" fg:w="1"/><text x="44.3565%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.38%)</title><rect x="44.1065%" y="469" width="0.3802%" height="15" fill="rgb(249,139,47)" fg:x="116" fg:w="1"/><text x="44.3565%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.38%)</title><rect x="44.1065%" y="453" width="0.3802%" height="15" fill="rgb(244,64,35)" fg:x="116" fg:w="1"/><text x="44.3565%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="44.1065%" y="437" width="0.3802%" height="15" fill="rgb(216,46,15)" fg:x="116" fg:w="1"/><text x="44.3565%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="44.1065%" y="421" width="0.3802%" height="15" fill="rgb(250,74,19)" fg:x="116" fg:w="1"/><text x="44.3565%" y="431.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="44.4867%" y="629" width="0.3802%" height="15" fill="rgb(249,42,33)" fg:x="117" fg:w="1"/><text x="44.7367%" y="639.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.76%)</title><rect x="48.6692%" y="597" width="0.7605%" height="15" fill="rgb(242,149,17)" fg:x="128" fg:w="2"/><text x="48.9192%" y="607.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="49.0494%" y="581" width="0.3802%" height="15" fill="rgb(244,29,21)" fg:x="129" fg:w="1"/><text x="49.2994%" y="591.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="49.0494%" y="565" width="0.3802%" height="15" fill="rgb(220,130,37)" fg:x="129" fg:w="1"/><text x="49.2994%" y="575.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="49.0494%" y="549" width="0.3802%" height="15" fill="rgb(211,67,2)" fg:x="129" fg:w="1"/><text x="49.2994%" y="559.50"></text></g><g><title>__GI_madvise (8 samples, 3.04%)</title><rect x="49.4297%" y="597" width="3.0418%" height="15" fill="rgb(235,68,52)" fg:x="130" fg:w="8"/><text x="49.6797%" y="607.50">__G..</text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.38%)</title><rect x="52.4715%" y="597" width="0.3802%" height="15" fill="rgb(246,142,3)" fg:x="138" fg:w="1"/><text x="52.7215%" y="607.50"></text></g><g><title>&lt;tokio::runtime::context::SetCurrentGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="53.6122%" y="517" width="0.3802%" height="15" fill="rgb(241,25,7)" fg:x="141" fg:w="1"/><text x="53.8622%" y="527.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (16 samples, 6.08%)</title><rect x="53.9924%" y="517" width="6.0837%" height="15" fill="rgb(242,119,39)" fg:x="142" fg:w="16"/><text x="54.2424%" y="527.50">parking_..</text></g><g><title>syscall (15 samples, 5.70%)</title><rect x="54.3726%" y="501" width="5.7034%" height="15" fill="rgb(241,98,45)" fg:x="143" fg:w="15"/><text x="54.6226%" y="511.50">syscall</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (40 samples, 15.21%)</title><rect x="60.0760%" y="517" width="15.2091%" height="15" fill="rgb(254,28,30)" fg:x="158" fg:w="40"/><text x="60.3260%" y="527.50">parking_lot::raw_mutex:..</text></g><g><title>syscall (35 samples, 13.31%)</title><rect x="61.9772%" y="501" width="13.3080%" height="15" fill="rgb(241,142,54)" fg:x="163" fg:w="35"/><text x="62.2272%" y="511.50">syscall</text></g><g><title>tokio::runtime::task::raw::dealloc (1 samples, 0.38%)</title><rect x="75.2852%" y="517" width="0.3802%" height="15" fill="rgb(222,85,15)" fg:x="198" fg:w="1"/><text x="75.5352%" y="527.50"></text></g><g><title>_nss_resolve_gethostbyname4_r (1 samples, 0.38%)</title><rect x="76.0456%" y="405" width="0.3802%" height="15" fill="rgb(210,85,47)" fg:x="200" fg:w="1"/><text x="76.2956%" y="415.50"></text></g><g><title>[libnss_resolve.so.2] (1 samples, 0.38%)</title><rect x="76.0456%" y="389" width="0.3802%" height="15" fill="rgb(224,206,25)" fg:x="200" fg:w="1"/><text x="76.2956%" y="399.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.38%)</title><rect x="76.0456%" y="373" width="0.3802%" height="15" fill="rgb(243,201,19)" fg:x="200" fg:w="1"/><text x="76.2956%" y="383.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (2 samples, 0.76%)</title><rect x="76.0456%" y="501" width="0.7605%" height="15" fill="rgb(236,59,4)" fg:x="200" fg:w="2"/><text x="76.2956%" y="511.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.76%)</title><rect x="76.0456%" y="485" width="0.7605%" height="15" fill="rgb(254,179,45)" fg:x="200" fg:w="2"/><text x="76.2956%" y="495.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (2 samples, 0.76%)</title><rect x="76.0456%" y="469" width="0.7605%" height="15" fill="rgb(226,14,10)" fg:x="200" fg:w="2"/><text x="76.2956%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.76%)</title><rect x="76.0456%" y="453" width="0.7605%" height="15" fill="rgb(244,27,41)" fg:x="200" fg:w="2"/><text x="76.2956%" y="463.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::{{closure}} (2 samples, 0.76%)</title><rect x="76.0456%" y="437" width="0.7605%" height="15" fill="rgb(235,35,32)" fg:x="200" fg:w="2"/><text x="76.2956%" y="447.50"></text></g><g><title>__GI_getaddrinfo (2 samples, 0.76%)</title><rect x="76.0456%" y="421" width="0.7605%" height="15" fill="rgb(218,68,31)" fg:x="200" fg:w="2"/><text x="76.2956%" y="431.50"></text></g><g><title>nss_database_check_reload_and_get (1 samples, 0.38%)</title><rect x="76.4259%" y="405" width="0.3802%" height="15" fill="rgb(207,120,37)" fg:x="201" fg:w="1"/><text x="76.6759%" y="415.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (28 samples, 10.65%)</title><rect x="76.8061%" y="485" width="10.6464%" height="15" fill="rgb(227,98,0)" fg:x="202" fg:w="28"/><text x="77.0561%" y="495.50">parking_lot::con..</text></g><g><title>syscall (27 samples, 10.27%)</title><rect x="77.1863%" y="469" width="10.2662%" height="15" fill="rgb(207,7,3)" fg:x="203" fg:w="27"/><text x="77.4363%" y="479.50">syscall</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (32 samples, 12.17%)</title><rect x="76.8061%" y="501" width="12.1673%" height="15" fill="rgb(206,98,19)" fg:x="202" fg:w="32"/><text x="77.0561%" y="511.50">tokio::runtime::sc..</text></g><g><title>tokio::runtime::time::Driver::park_internal (4 samples, 1.52%)</title><rect x="87.4525%" y="485" width="1.5209%" height="15" fill="rgb(217,5,26)" fg:x="230" fg:w="4"/><text x="87.7025%" y="495.50"></text></g><g><title>tokio::runtime::io::Driver::turn (4 samples, 1.52%)</title><rect x="87.4525%" y="469" width="1.5209%" height="15" fill="rgb(235,190,38)" fg:x="230" fg:w="4"/><text x="87.7025%" y="479.50"></text></g><g><title>epoll_wait (4 samples, 1.52%)</title><rect x="87.4525%" y="453" width="1.5209%" height="15" fill="rgb(247,86,24)" fg:x="230" fg:w="4"/><text x="87.7025%" y="463.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 0.38%)</title><rect x="88.9734%" y="453" width="0.3802%" height="15" fill="rgb(205,101,16)" fg:x="234" fg:w="1"/><text x="89.2234%" y="463.50"></text></g><g><title>std_detect::detect::cache::detect_and_initialize (1 samples, 0.38%)</title><rect x="88.9734%" y="437" width="0.3802%" height="15" fill="rgb(246,168,33)" fg:x="234" fg:w="1"/><text x="89.2234%" y="447.50"></text></g><g><title>std_detect::detect::os::detect_features (1 samples, 0.38%)</title><rect x="88.9734%" y="421" width="0.3802%" height="15" fill="rgb(231,114,1)" fg:x="234" fg:w="1"/><text x="89.2234%" y="431.50"></text></g><g><title>core::core_arch::x86::cpuid::__cpuid (1 samples, 0.38%)</title><rect x="88.9734%" y="405" width="0.3802%" height="15" fill="rgb(207,184,53)" fg:x="234" fg:w="1"/><text x="89.2234%" y="415.50"></text></g><g><title>core::core_arch::x86::cpuid::__cpuid_count (1 samples, 0.38%)</title><rect x="88.9734%" y="389" width="0.3802%" height="15" fill="rgb(224,95,51)" fg:x="234" fg:w="1"/><text x="89.2234%" y="399.50"></text></g><g><title>EC_KEY_free (5 samples, 1.90%)</title><rect x="89.7338%" y="213" width="1.9011%" height="15" fill="rgb(212,188,45)" fg:x="236" fg:w="5"/><text x="89.9838%" y="223.50">E..</text></g><g><title>__free (5 samples, 1.90%)</title><rect x="89.7338%" y="197" width="1.9011%" height="15" fill="rgb(223,154,38)" fg:x="236" fg:w="5"/><text x="89.9838%" y="207.50">_..</text></g><g><title>_int_free (5 samples, 1.90%)</title><rect x="89.7338%" y="181" width="1.9011%" height="15" fill="rgb(251,22,52)" fg:x="236" fg:w="5"/><text x="89.9838%" y="191.50">_..</text></g><g><title>__GI___lll_lock_wait_private (5 samples, 1.90%)</title><rect x="89.7338%" y="165" width="1.9011%" height="15" fill="rgb(229,209,22)" fg:x="236" fg:w="5"/><text x="89.9838%" y="175.50">_..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (8 samples, 3.04%)</title><rect x="88.9734%" y="501" width="3.0418%" height="15" fill="rgb(234,138,34)" fg:x="234" fg:w="8"/><text x="89.2234%" y="511.50">tok..</text></g><g><title>tokio::runtime::task::raw::poll (8 samples, 3.04%)</title><rect x="88.9734%" y="485" width="3.0418%" height="15" fill="rgb(212,95,11)" fg:x="234" fg:w="8"/><text x="89.2234%" y="495.50">tok..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 3.04%)</title><rect x="88.9734%" y="469" width="3.0418%" height="15" fill="rgb(240,179,47)" fg:x="234" fg:w="8"/><text x="89.2234%" y="479.50">&lt;fu..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::conn::ProtoClient&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt; (7 samples, 2.66%)</title><rect x="89.3536%" y="453" width="2.6616%" height="15" fill="rgb(240,163,11)" fg:x="235" fg:w="7"/><text x="89.6036%" y="463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (7 samples, 2.66%)</title><rect x="89.3536%" y="437" width="2.6616%" height="15" fill="rgb(236,37,12)" fg:x="235" fg:w="7"/><text x="89.6036%" y="447.50">co..</text></g><g><title>SSL_free (7 samples, 2.66%)</title><rect x="89.3536%" y="421" width="2.6616%" height="15" fill="rgb(232,164,16)" fg:x="235" fg:w="7"/><text x="89.6036%" y="431.50">SS..</text></g><g><title>SSL_CTX_free (7 samples, 2.66%)</title><rect x="89.3536%" y="405" width="2.6616%" height="15" fill="rgb(244,205,15)" fg:x="235" fg:w="7"/><text x="89.6036%" y="415.50">SS..</text></g><g><title>X509_STORE_free (7 samples, 2.66%)</title><rect x="89.3536%" y="389" width="2.6616%" height="15" fill="rgb(223,117,47)" fg:x="235" fg:w="7"/><text x="89.6036%" y="399.50">X5..</text></g><g><title>OPENSSL_sk_pop_free (7 samples, 2.66%)</title><rect x="89.3536%" y="373" width="2.6616%" height="15" fill="rgb(244,107,35)" fg:x="235" fg:w="7"/><text x="89.6036%" y="383.50">OP..</text></g><g><title>X509_OBJECT_free (7 samples, 2.66%)</title><rect x="89.3536%" y="357" width="2.6616%" height="15" fill="rgb(205,140,8)" fg:x="235" fg:w="7"/><text x="89.6036%" y="367.50">X5..</text></g><g><title>ASN1_item_free (7 samples, 2.66%)</title><rect x="89.3536%" y="341" width="2.6616%" height="15" fill="rgb(228,84,46)" fg:x="235" fg:w="7"/><text x="89.6036%" y="351.50">AS..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="89.3536%" y="325" width="2.6616%" height="15" fill="rgb(254,188,9)" fg:x="235" fg:w="7"/><text x="89.6036%" y="335.50">[l..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="89.3536%" y="309" width="2.6616%" height="15" fill="rgb(206,112,54)" fg:x="235" fg:w="7"/><text x="89.6036%" y="319.50">[l..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="89.3536%" y="293" width="2.6616%" height="15" fill="rgb(216,84,49)" fg:x="235" fg:w="7"/><text x="89.6036%" y="303.50">[l..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="89.3536%" y="277" width="2.6616%" height="15" fill="rgb(214,194,35)" fg:x="235" fg:w="7"/><text x="89.6036%" y="287.50">[l..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="89.3536%" y="261" width="2.6616%" height="15" fill="rgb(249,28,3)" fg:x="235" fg:w="7"/><text x="89.6036%" y="271.50">[l..</text></g><g><title>EVP_PKEY_free (7 samples, 2.66%)</title><rect x="89.3536%" y="245" width="2.6616%" height="15" fill="rgb(222,56,52)" fg:x="235" fg:w="7"/><text x="89.6036%" y="255.50">EV..</text></g><g><title>[libcrypto.so.3.0.8] (7 samples, 2.66%)</title><rect x="89.3536%" y="229" width="2.6616%" height="15" fill="rgb(245,217,50)" fg:x="235" fg:w="7"/><text x="89.6036%" y="239.50">[l..</text></g><g><title>RSA_free (1 samples, 0.38%)</title><rect x="91.6350%" y="213" width="0.3802%" height="15" fill="rgb(213,201,24)" fg:x="241" fg:w="1"/><text x="91.8850%" y="223.50"></text></g><g><title>[libcrypto.so.3.0.8] (1 samples, 0.38%)</title><rect x="91.6350%" y="197" width="0.3802%" height="15" fill="rgb(248,116,28)" fg:x="241" fg:w="1"/><text x="91.8850%" y="207.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.38%)</title><rect x="92.0152%" y="501" width="0.3802%" height="15" fill="rgb(219,72,43)" fg:x="242" fg:w="1"/><text x="92.2652%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (105 samples, 39.92%)</title><rect x="52.8517%" y="581" width="39.9240%" height="15" fill="rgb(209,138,14)" fg:x="139" fg:w="105"/><text x="53.1017%" y="591.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::ca..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (105 samples, 39.92%)</title><rect x="52.8517%" y="565" width="39.9240%" height="15" fill="rgb(222,18,33)" fg:x="139" fg:w="105"/><text x="53.1017%" y="575.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::ca..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (105 samples, 39.92%)</title><rect x="52.8517%" y="549" width="39.9240%" height="15" fill="rgb(213,199,7)" fg:x="139" fg:w="105"/><text x="53.1017%" y="559.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (104 samples, 39.54%)</title><rect x="53.2319%" y="533" width="39.5437%" height="15" fill="rgb(250,110,10)" fg:x="140" fg:w="104"/><text x="53.4819%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::task::raw::poll (45 samples, 17.11%)</title><rect x="75.6654%" y="517" width="17.1103%" height="15" fill="rgb(248,123,6)" fg:x="199" fg:w="45"/><text x="75.9154%" y="527.50">tokio::runtime::task::raw::..</text></g><g><title>tokio::runtime::task::raw::shutdown (1 samples, 0.38%)</title><rect x="92.3954%" y="501" width="0.3802%" height="15" fill="rgb(206,91,31)" fg:x="243" fg:w="1"/><text x="92.6454%" y="511.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.38%)</title><rect x="92.3954%" y="485" width="0.3802%" height="15" fill="rgb(211,154,13)" fg:x="243" fg:w="1"/><text x="92.6454%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::conn::ProtoClient&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt; (1 samples, 0.38%)</title><rect x="92.3954%" y="469" width="0.3802%" height="15" fill="rgb(225,148,7)" fg:x="243" fg:w="1"/><text x="92.6454%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Receiver&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (1 samples, 0.38%)</title><rect x="92.3954%" y="453" width="0.3802%" height="15" fill="rgb(220,160,43)" fg:x="243" fg:w="1"/><text x="92.6454%" y="463.50"></text></g><g><title>tokio::sync::notify::Notify::notify_waiters (1 samples, 0.38%)</title><rect x="92.3954%" y="437" width="0.3802%" height="15" fill="rgb(213,52,39)" fg:x="243" fg:w="1"/><text x="92.6454%" y="447.50"></text></g><g><title>__clone3 (140 samples, 53.23%)</title><rect x="44.8669%" y="629" width="53.2319%" height="15" fill="rgb(243,137,7)" fg:x="118" fg:w="140"/><text x="45.1169%" y="639.50">__clone3</text></g><g><title>start_thread (130 samples, 49.43%)</title><rect x="48.6692%" y="613" width="49.4297%" height="15" fill="rgb(230,79,13)" fg:x="128" fg:w="130"/><text x="48.9192%" y="623.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (119 samples, 45.25%)</title><rect x="52.8517%" y="597" width="45.2471%" height="15" fill="rgb(247,105,23)" fg:x="139" fg:w="119"/><text x="53.1017%" y="607.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (14 samples, 5.32%)</title><rect x="92.7757%" y="581" width="5.3232%" height="15" fill="rgb(223,179,41)" fg:x="244" fg:w="14"/><text x="93.0257%" y="591.50">core::p..</text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (14 samples, 5.32%)</title><rect x="92.7757%" y="565" width="5.3232%" height="15" fill="rgb(218,9,34)" fg:x="244" fg:w="14"/><text x="93.0257%" y="575.50">&lt;std::s..</text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (14 samples, 5.32%)</title><rect x="92.7757%" y="549" width="5.3232%" height="15" fill="rgb(222,106,8)" fg:x="244" fg:w="14"/><text x="93.0257%" y="559.50">std::sy..</text></g><g><title>__GI___munmap (14 samples, 5.32%)</title><rect x="92.7757%" y="533" width="5.3232%" height="15" fill="rgb(211,220,0)" fg:x="244" fg:w="14"/><text x="93.0257%" y="543.50">__GI___..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.38%)</title><rect x="98.0989%" y="629" width="0.3802%" height="15" fill="rgb(229,52,16)" fg:x="258" fg:w="1"/><text x="98.3489%" y="639.50"></text></g><g><title>syscall (2 samples, 0.76%)</title><rect x="98.4791%" y="629" width="0.7605%" height="15" fill="rgb(212,155,18)" fg:x="259" fg:w="2"/><text x="98.7291%" y="639.50"></text></g><g><title>tokio-runtime-w (145 samples, 55.13%)</title><rect x="44.4867%" y="645" width="55.1331%" height="15" fill="rgb(242,21,14)" fg:x="117" fg:w="145"/><text x="44.7367%" y="655.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.38%)</title><rect x="99.2395%" y="629" width="0.3802%" height="15" fill="rgb(222,19,48)" fg:x="261" fg:w="1"/><text x="99.4895%" y="639.50"></text></g><g><title>all (263 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(232,45,27)" fg:x="0" fg:w="263"/><text x="0.2500%" y="671.50"></text></g><g><title>zbus::Connectio (1 samples, 0.38%)</title><rect x="99.6198%" y="645" width="0.3802%" height="15" fill="rgb(249,103,42)" fg:x="262" fg:w="1"/><text x="99.8698%" y="655.50"></text></g><g><title>async_io::reactor::Source::poll_ready (1 samples, 0.38%)</title><rect x="99.6198%" y="629" width="0.3802%" height="15" fill="rgb(246,81,33)" fg:x="262" fg:w="1"/><text x="99.8698%" y="639.50"></text></g></svg></svg>