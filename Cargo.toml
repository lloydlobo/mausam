[package]
name = "mausam"
version = "0.1.0"
edition = "2021"
description = """
A weather update desktop notifier made with Rust.
"""
readme = "README.md"
categories = ["command-line-interface"]
keywords = ["cli", "api", "weather", "notification"]
include = [
  "src/**/*",
  "Cargo.toml",
  "LICENSE*",
  "README.md",
  # "examples/**/*"
]

[dependencies]
anyhow = "1.0.68"
clap = { version = "4.1.4", features = ["derive"] }
dotenv = "0.15.0"
# geo = "0.23.1"
# geoip = "0.0.14"
lazy_static = "1.4.0"
log = "0.4.17"
maxminddb = "0.23.0"
notify-rust = "4.7.0"
pretty_env_logger = "0.4.0"
reqwest = { version = "0.11", features = ["json"] }
rust_decimal = "1.28.0"
# rust_decimal_macros = "1.28.0"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.91"
# tokio = { version = "1", features = ["full"] }
tokio = { version = "1.25.0", features = ["rt-multi-thread", "macros"] }

[dev-dependencies]
pretty_assertions = "1.3.0"
quickcheck = "1.0.3"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"
opt-level = 3
lto = true
incremental = true
codegen-units = 1
debug = false      # production

# debug = true # development perf & flamegraph

# cargo build --release
# perf record -g --call-graph dwarf target/release/your-program
# perf report

# You can use cargo flamegraph to build and profile a Rust project by specifying the --build and --profile options. For example:
# cargo flamegraph --build --profile=release --bin <binary_name>
